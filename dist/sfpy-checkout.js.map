{"version":3,"file":"sfpy-checkout.js","mappings":"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","sources":["webpack://safepay/webpack/universalModuleDefinition","webpack://safepay/webpack/bootstrap","webpack://safepay/webpack/runtime/define property getters","webpack://safepay/webpack/runtime/global","webpack://safepay/webpack/runtime/hasOwnProperty shorthand","webpack://safepay/webpack/runtime/make namespace object","webpack://safepay/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://safepay/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://safepay/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://safepay/./node_modules/zalgo-promise/src/utils.js","webpack://safepay/./node_modules/zalgo-promise/src/exceptions.js","webpack://safepay/./node_modules/zalgo-promise/src/flush.js","webpack://safepay/./node_modules/zalgo-promise/src/promise.js","webpack://safepay/./node_modules/cross-domain-utils/src/util.js","webpack://safepay/./node_modules/cross-domain-utils/src/constants.js","webpack://safepay/./node_modules/cross-domain-utils/src/utils.js","webpack://safepay/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://safepay/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://safepay/./node_modules/belter/src/util.js","webpack://safepay/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://safepay/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://safepay/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://safepay/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://safepay/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://safepay/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://safepay/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://safepay/./node_modules/belter/src/dom.js","webpack://safepay/./node_modules/belter/src/constants.js","webpack://safepay/./node_modules/belter/src/css.js","webpack://safepay/./node_modules/post-robot/src/conf/config.js","webpack://safepay/./node_modules/post-robot/src/conf/constants.js","webpack://safepay/./node_modules/post-robot/src/global.js","webpack://safepay/./node_modules/post-robot/src/lib/hello.js","webpack://safepay/./node_modules/post-robot/src/lib/windows.js","webpack://safepay/./node_modules/universal-serialize/src/constants.js","webpack://safepay/./node_modules/universal-serialize/src/common.js","webpack://safepay/./node_modules/universal-serialize/src/serialize.js","webpack://safepay/./node_modules/universal-serialize/src/serializers/function.js","webpack://safepay/./node_modules/universal-serialize/src/serializers/error.js","webpack://safepay/./node_modules/universal-serialize/src/serializers/promise.js","webpack://safepay/./node_modules/universal-serialize/src/serializers/regex.js","webpack://safepay/./node_modules/universal-serialize/src/serializers/date.js","webpack://safepay/./node_modules/universal-serialize/src/serializers/array.js","webpack://safepay/./node_modules/universal-serialize/src/serializers/object.js","webpack://safepay/./node_modules/universal-serialize/src/serializers/string.js","webpack://safepay/./node_modules/universal-serialize/src/serializers/number.js","webpack://safepay/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://safepay/./node_modules/universal-serialize/src/serializers/null.js","webpack://safepay/./node_modules/universal-serialize/src/serializers/undefined.js","webpack://safepay/./node_modules/universal-serialize/src/deserialize.js","webpack://safepay/./node_modules/post-robot/src/serialize/window.js","webpack://safepay/./node_modules/post-robot/src/bridge/common.js","webpack://safepay/./node_modules/post-robot/src/serialize/function.js","webpack://safepay/./node_modules/post-robot/src/serialize/serialize.js","webpack://safepay/./node_modules/post-robot/src/serialize/promise.js","webpack://safepay/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://safepay/./node_modules/post-robot/src/drivers/send/index.js","webpack://safepay/./node_modules/post-robot/src/drivers/listeners.js","webpack://safepay/./node_modules/post-robot/src/drivers/receive/types.js","webpack://safepay/./node_modules/post-robot/src/drivers/receive/index.js","webpack://safepay/./node_modules/post-robot/src/public/on.js","webpack://safepay/./node_modules/post-robot/src/lib/compat.js","webpack://safepay/./node_modules/post-robot/src/public/send.js","webpack://safepay/./node_modules/post-robot/src/setup.js","webpack://safepay/./node_modules/post-robot/src/clean.js","webpack://safepay/./node_modules/zoid/src/lib/global.js","webpack://safepay/./node_modules/zoid/src/lib/serialize.js","webpack://safepay/./node_modules/post-robot/src/index.js","webpack://safepay/./node_modules/zoid/src/constants.js","webpack://safepay/./node_modules/zoid/src/child/props.js","webpack://safepay/./node_modules/zoid/src/child/window.js","webpack://safepay/./node_modules/zoid/src/child/child.js","webpack://safepay/./node_modules/zoid/src/component/props.js","webpack://safepay/./node_modules/zoid/src/parent/props.js","webpack://safepay/./node_modules/zoid/src/parent/parent.js","webpack://safepay/./node_modules/zoid/src/drivers/react.js","webpack://safepay/./node_modules/zoid/src/drivers/vue.js","webpack://safepay/./node_modules/zoid/src/drivers/vue3.js","webpack://safepay/./node_modules/zoid/src/drivers/angular.js","webpack://safepay/./node_modules/zoid/src/drivers/angular2.js","webpack://safepay/./node_modules/zoid/src/component/templates/container.js","webpack://safepay/./node_modules/zoid/src/component/templates/component.js","webpack://safepay/./node_modules/zoid/src/component/component.js","webpack://safepay/./node_modules/@krakenjs/belter/src/device.js","webpack://safepay/./node_modules/@krakenjs/zalgo-promise/src/utils.js","webpack://safepay/./node_modules/@krakenjs/zalgo-promise/src/exceptions.js","webpack://safepay/./node_modules/@krakenjs/zalgo-promise/src/flush.js","webpack://safepay/./node_modules/@krakenjs/zalgo-promise/src/promise.js","webpack://safepay/./node_modules/@krakenjs/cross-domain-utils/src/constants.js","webpack://safepay/./node_modules/@krakenjs/cross-domain-utils/src/utils.js","webpack://safepay/./node_modules/@krakenjs/cross-domain-safe-weakmap/src/util.js","webpack://safepay/./node_modules/@krakenjs/cross-domain-safe-weakmap/src/weakmap.js","webpack://safepay/./node_modules/@krakenjs/belter/src/util.js","webpack://safepay/./node_modules/@krakenjs/cross-domain-safe-weakmap/src/native.js","webpack://safepay/./node_modules/@krakenjs/belter/src/dom.js","webpack://safepay/./node_modules/@krakenjs/belter/src/css.js","webpack://safepay/./node_modules/@krakenjs/belter/src/constants.js","webpack://safepay/./src/configs/constants.js","webpack://safepay/./src/configs/domains.js","webpack://safepay/./node_modules/@krakenjs/jsx-pragmatic/src/constants.js","webpack://safepay/./node_modules/@krakenjs/jsx-pragmatic/src/node.js","webpack://safepay/./node_modules/@krakenjs/jsx-pragmatic/src/util.js","webpack://safepay/./node_modules/@krakenjs/jsx-pragmatic/src/renderers/dom.js","webpack://safepay/./src/constants/button.js","webpack://safepay/./src/zoid/buttons/ui/config.js","webpack://safepay/./src/zoid/buttons/container.jsx","webpack://safepay/./src/zoid/buttons/buttons.jsx","webpack://safepay/./src/zoid/buttons/utils.js","webpack://safepay/./src/zoid/checkout/prerender.jsx","webpack://safepay/./src/zoid/checkout/ui/styles.js","webpack://safepay/./src/zoid/checkout/container.jsx","webpack://safepay/./src/zoid/checkout/checkout.jsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"safepay\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"safepay\"] = factory();\n\telse\n\t\troot[\"safepay\"] = factory();\n})((typeof self !== 'undefined' ? self : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        const toString = ({}).toString;\n\n        if (toString) {\n            const name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : {| cancel : () => void |} {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    const promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    // eslint-disable-next-line flowtype/no-mutable-array\n    handlers : Array<{|\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    |}>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            const err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        const { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            const { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                const promiseResult : ZalgoPromise<*> = result;\n\n                if (promiseResult.resolved) {\n                    promise.resolve(promiseResult.value);\n                } else {\n                    promise.reject(promiseResult.error);\n                }\n\n                promiseResult.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X, Y>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        const promise = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X, Y>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        // $FlowFixMe incompatible-call\n        const resultPromise : ZalgoPromise<X | Y> = this.then(undefined, onError);\n        return resultPromise;\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        const timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    lazy() : ZalgoPromise<R> {\n        this.errorHandled = true;\n        return this;\n    }\n\n    static resolve<X, Y>(value : ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n\n        if (value instanceof ZalgoPromise) {\n            // $FlowFixMe incompatible-type-arg\n            const result : ZalgoPromise<X | Y> = value;\n            return result;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : $ReadOnlyArray<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        const promise = new ZalgoPromise();\n        let count = promises.length;\n        // eslint-disable-next-line no-undef\n        const results = ([] : $TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>).slice();\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            const prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        const result = {};\n        const awaitPromises = [];\n\n        for (const key in promises) {\n            if (promises.hasOwnProperty(key)) {\n                const value = promises[key];\n\n                if (isPromise(value)) {\n                    awaitPromises.push(value.then(res => {\n                        result[key] = res;\n                    }));\n                } else {\n                    result[key] = value;\n                }\n            }\n        }\n        \n        return ZalgoPromise.all(awaitPromises).then(() => result);\n    }\n\n    static map<T, X>(items : $ReadOnlyArray<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<$ReadOnlyArray<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : {| cancel : () => void |} {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X, Y, C : mixed, A : $ReadOnlyArray<mixed>>(method : (...args : $ReadOnlyArray<mixed>) => (ZalgoPromise<X> | Y), context? : C, args? : A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result : ZalgoPromise<X> | Y;\n\n        startActive();\n        \n        try {\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        // $FlowFixMe incompatible-call\n        const resultPromise = ZalgoPromise.resolve(result);\n\n        return resultPromise;\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    // $FlowFixMe method-unbinding\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nconst IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function getActualProtocol(win : SameDomainWindowType = window) : ?string {\n    return win.location.protocol;\n}\n\nexport function getProtocol(win : SameDomainWindowType = window) : ?string {\n    if (win.mockDomain) {\n        const protocol = win.mockDomain.split('//')[0];\n\n        if (protocol) {\n            return protocol;\n        }\n    }\n\n    return getActualProtocol(win);\n}\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return getProtocol(win) === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return getProtocol(win) === PROTOCOL.ABOUT;\n}\n\nexport function isMockProtocol(win : SameDomainWindowType = window) : boolean {\n    return getProtocol(win) === PROTOCOL.MOCK;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    const location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    const protocol = getActualProtocol(win);\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        const parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    const host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    const domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        const desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isMockProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n        if (win === window) {\n            return true;\n        }\n        \n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    const childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    for (const frame of getFrames(win)) {\n        result.push(frame);\n\n        for (const childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (const frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    const top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    const frames = getAllFramesInWindow(win);\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    const doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nconst iframeWindows = [];\nconst iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    const iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        const frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const winFrames = getFrames(win);\n\n    for (const childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        const namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    const top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    const frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    const opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    const parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    const actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (const frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (const item1 of collection1) {\n        for (const item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    const top1 = getTop(win1) || win1;\n    const top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    const allFrames1 = getAllFramesInWindow(win1);\n    const allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    const opener1 = getOpener(top1);\n    const opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() })`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : {| cancel : () => void |} {\n\n    let timeout;\n\n    const check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if ('postMessage' in obj && 'self' in obj && 'location' in obj) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    if (isIframe(win)) {\n        const frame = getFrameForWindow(win);\n        if (frame && frame.parentElement) {\n            frame.parentElement.removeChild(frame);\n            return;\n        }\n    }\n\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    // eslint-disable-next-line flowtype/no-mutable-array\n    keys : Array<K>\n    // eslint-disable-next-line flowtype/no-mutable-array\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        const weakmap = this.weakmap;\n        const keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            const value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const name = this.name;\n                const entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const values = this.values;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        const value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","\n/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function isElement(element : mixed) : boolean {\n    let passed = false;\n\n    try {\n        if (element instanceof window.Element) {\n            passed = true;\n        } else if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n            passed = true;\n        }\n    } catch (_) {\n        // we don't have an element\n    }\n\n    return passed;\n}\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        })).replace(/[=]/g, '');\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64').replace(/[=]/g, '');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        // $FlowFixMe[method-unbinding]\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    const chars = '0123456789abcdef';\n\n    const randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    const timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `uid_${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : $ReadOnlyArray<T>) : string {\n    try {\n        // $FlowFixMe[method-unbinding]\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n\n            // Treat each distinct function as unique for purposes of memoization\n            // e.g. even if someFunction.stringify() is the same, we may use a different memoize cache\n            // if the actual function is different.\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n\n            // By default JSON.stringify(domElement) returns '{}'. This ensures that stays true even for non-standard\n            // elements (e.g. React-rendered dom elements) with custom properties\n            if (isElement(val)) {\n                return {};\n            }\n\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\nexport function getEmptyObject() : {||} {\n    // $FlowFixMe\n    return {};\n}\n\ntype MemoizeOptions = {|\n    name? : string,\n    time? : number,\n    thisNamespace? : boolean\n|};\n\nconst getDefaultMemoizeOptions = () : MemoizeOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nexport type Memoized<F> = F & {| reset : () => void |};\n\nlet memoizeGlobalIndex = 0;\nlet memoizeGlobalIndexValidFrom = 0;\n\nexport function memoize<F : Function>(method : F, options? : MemoizeOptions = getDefaultMemoizeOptions()) : Memoized<F> {\n    const { thisNamespace = false, time: cacheTime } = options;\n\n    let simpleCache;\n    let thisCache;\n\n    let memoizeIndex = memoizeGlobalIndex;\n    memoizeGlobalIndex += 1;\n\n    const memoizedFunction = function memoizedFunction(...args) : mixed {\n        if (memoizeIndex < memoizeGlobalIndexValidFrom) {\n            simpleCache = null;\n            thisCache = null;\n            memoizeIndex = memoizeGlobalIndex;\n            memoizeGlobalIndex += 1;\n        }\n\n        let cache;\n\n        if (thisNamespace) {\n            thisCache = thisCache || new WeakMap();\n            cache = thisCache.getOrSet(this, getEmptyObject);\n        } else {\n            cache = simpleCache = simpleCache || {};\n        }\n\n        let cacheKey;\n\n        try {\n            cacheKey = serializeArgs(args);\n        } catch {\n            return method.apply(this, arguments);\n        }\n\n        let cacheResult = cache[cacheKey];\n\n        if (cacheResult && cacheTime && (Date.now() - cacheResult.time) < cacheTime) {\n            delete cache[cacheKey];\n            cacheResult = null;\n        }\n\n        if (cacheResult) {\n            return cacheResult.value;\n        }\n\n        const time  = Date.now();\n        const value = method.apply(this, arguments);\n\n        cache[cacheKey] = { time, value };\n\n        return value;\n    };\n\n    memoizedFunction.reset = () => {\n        simpleCache = null;\n        thisCache = null;\n    };\n\n    // $FlowFixMe\n    const result : F = memoizedFunction;\n\n    return setFunctionName(result, `${ options.name || getFunctionName(method) }::memoized`);\n}\n\nmemoize.clear = () => {\n    memoizeGlobalIndexValidFrom = memoizeGlobalIndex;\n};\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : $ReadOnlyArray<any>) : ZalgoPromise<R> {\n        const key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\ntype PromisifyOptions = {|\n    name ? : string\n|};\n\nconst getDefaultPromisifyOptions = () : PromisifyOptions => {\n    // $FlowFixMe\n    return {};\n};\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : $ReadOnlyArray<any>) => R, options : PromisifyOptions = getDefaultPromisifyOptions()) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : $ReadOnlyArray<any>) => R, logic : (...args : $ReadOnlyArray<any>) => R, args : $ReadOnlyArray<any> = []) : R {\n    // $FlowFixMe\n    const cache : {| [string] : R |} = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    const key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n\n    const result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    const regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : T {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            // $FlowFixMe[method-unbinding]\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            const stack = err && err.stack;\n            const message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        // $FlowFixMe[method-unbinding]\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) {\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    // $FlowFixMe[method-unbinding]\n    const defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    // $FlowFixMe[method-unbinding]\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    const index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    const original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            // $FlowFixMe[method-unbinding]\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : $ReadOnlyArray<T> {\n    if (Object.values) {\n        // $FlowFixMe\n        return Object.values(obj);\n    }\n\n    const result : Array<T> = [];\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            // $FlowFixMe[escaped-generic]\n            result.push(obj[key]);\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n\n// eslint-disable-next-line no-undef\nexport const memoizedValues : <T>({ [string] : T }) => $ReadOnlyArray<T> = memoize(values);\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : $ReadOnlyArray<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : $ReadOnlyArray<number>) : number {\n    return Math.max(...args);\n}\n\nexport function roundUp(num : number, nearest : number) : number {\n    const remainder = num % nearest;\n    return remainder\n        ? (num - remainder) + nearest\n        : num;\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : $ReadOnlyArray<T> {\n    const results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    const result = {};\n\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : $ReadOnlyArray<string> {\n    const result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        const localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : {| cancel : () => void |} {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n\n    const result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, -2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        const parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            const isLast = (i + 1 === parts.length);\n            const isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {|\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n|};\n\nexport function eventEmitter() : EventEmitterType {\n    const triggered = {};\n    let handlers = {};\n\n    const emitter = {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            const handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            const listener = emitter.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            const handlerList = handlers[eventName];\n            const promises = [];\n\n            if (handlerList) {\n                for (const handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return emitter.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n\n    return emitter;\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    const pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    const interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | $ReadOnlyArray<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n\n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            const value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-undef\n    // $FlowFixMe[method-unbinding]\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    // $FlowFixMe[method-unbinding]\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    const constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    const prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : $ReadOnlyArray<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        const length = item.length;\n        const result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n\n            defineLazyProp(result, i, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                const el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        const result = {};\n\n        for (const key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                const el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        const descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {|\n    text : string,\n    groups : $ReadOnlyArray<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n|};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    const result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    const index : number = result.index;\n    const regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : $ReadOnlyArray<RegexResultType> {\n\n    const matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : $ReadOnlyArray<mixed>) => T, time : number = 100) : (...args : $ReadOnlyArray<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    // $FlowFixMe[method-unbinding]\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : $ReadOnlyArray<any>) => R) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            }));\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => {| cancel : () => void |},\n    all : (err? : mixed) => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n    let cleanErr;\n\n    const cleaner = {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                cleaner.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) : {| cancel : () => void |} {\n            const task = once(() => method(cleanErr));\n\n            if (cleaned) {\n                method(cleanErr);\n            } else {\n                tasks.push(task);\n            }\n\n            return {\n                cancel: () => {\n                    const index = tasks.indexOf(task);\n                    if (index !== -1) {\n                        tasks.splice(index, 1);\n                    }\n                }\n            };\n        },\n\n        all(err? : mixed) : ZalgoPromise<void> {\n            cleanErr = err;\n\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n\n    return cleaner;\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n\n    // $FlowFixMe\n    return { result, error };\n}\n\n// eslint-disable-next-line flowtype/no-mutable-array\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n\n    return thing;\n}\n\nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n\nexport const constHas = <X : (string | boolean | number), T : { [string] : X }>(constant : T, value : X) : boolean => {\n    return memoizedValues(constant).indexOf(value) !== -1;\n};\n\nexport function dedupeErrors<T>(handler : (mixed) => T) : (mixed) => (T | void) {\n    const seenErrors = [];\n    const seenStringifiedErrors = {};\n\n    return (err) => {\n        if (seenErrors.indexOf(err) !== -1) {\n            return;\n        }\n\n        seenErrors.push(err);\n\n        const stringifiedError = stringifyError(err);\n        if (seenStringifiedErrors[stringifiedError]) {\n            return;\n        }\n\n        seenStringifiedErrors[stringifiedError] = true;\n        return handler(err);\n    };\n}\n\nexport class ExtendableError extends Error {\n    constructor(message : string) {\n        super(message);\n        // eslint-disable-next-line unicorn/custom-error-definition\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        const testWeakMap = new WeakMap();\n        const testKey = {};\n        const testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/* @flow */\n/* eslint max-lines: off */\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed, assertSameDomain,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { isElement, inlineMemoize, memoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom, ExtendableError, strHashStr } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES, ATTRIBUTES, UID_HASH_LENGTH } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function getBody() : HTMLBodyElement {\n    // eslint-disable-next-line compat/compat\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Body element not found`);\n    }\n\n    return body;\n}\n\nexport function isDocumentReady() : boolean {\n    // eslint-disable-next-line compat/compat\n    return Boolean(document.body) && (document.readyState === 'complete');\n}\n\nexport function isDocumentInteractive() : boolean {\n    // eslint-disable-next-line compat/compat\n    return Boolean(document.body) && (document.readyState === 'interactive');\n}\n\nexport function urlEncode(str : string) : string {\n    return encodeURIComponent(str);\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\ntype WaitForDocumentReady = () => ZalgoPromise<void>;\n\nexport const waitForDocumentReady : WaitForDocumentReady = memoize(() => {\n    return new ZalgoPromise(resolve => {\n\n        if (isDocumentReady() || isDocumentInteractive()) {\n            return resolve();\n        }\n\n        const interval = setInterval(() => {\n            if (isDocumentReady() || isDocumentInteractive()) {\n                clearInterval(interval);\n                return resolve();\n            }\n        }, 10);\n    });\n});\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return ZalgoPromise.try(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        return waitForDocumentReady().then(() => {\n            if (document.body) {\n                return document.body;\n            }\n\n            throw new Error('Document ready but document.body not present');\n        });\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        const params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport type Query = {\n    [ string ] : boolean | string\n};\n\nexport function formatQuery(obj : Query = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string' || typeof obj[key] === 'boolean';\n    }).map(key => {\n        const val = obj[key];\n\n        if (typeof val !== 'string' && typeof val !== 'boolean') {\n            throw new TypeError(`Invalid type for query`);\n        }\n\n        return `${ urlEncode(key) }=${ urlEncode(val.toString()) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : Query = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : {| query? : Query, hash? : Query |}) : string {\n\n    const query = options.query || {};\n    const hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    const queryString = extendQuery(originalQuery, query);\n    const hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    const meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function getPerformance() : ?Performance {\n    return inlineMemoize(getPerformance, () : ?Performance => {\n        const performance = window.performance;\n\n        if (\n            performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        ) {\n            return performance;\n        }\n    });\n}\n\nexport function enablePerformance() : boolean {\n    return Boolean(getPerformance());\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n        const performance = getPerformance();\n\n        if (!performance) {\n            return;\n        }\n\n        const timing = performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined') && window.location !== undefined;\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : $ReadOnlyArray<HTMLElement> {\n    // $FlowFixMe[method-unbinding]\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path, reverse = false } : {| host? : string, path : string, reverse? : boolean |}) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        const url = `${ host }${ path }`;\n        // $FlowFixMe[method-unbinding]\n        const scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        if (reverse) {\n            scripts.reverse();\n        }\n\n        for (const script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            const src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                const value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                const result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : $ReadOnlyArray<{| country? : string, lang : string |}> {\n    const nav = window.navigator;\n\n    const locales = nav.languages\n        ? [ ...nav.languages ]\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            const [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    const element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        const interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                resolve(el);\n                clearInterval(interval);\n                return;\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\n// eslint-disable-next-line unicorn/custom-error-definition\nexport class PopupOpenError extends ExtendableError {}\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1,\n    closeOnUnload? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    const { closeOnUnload = 1, name = '', width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    delete options.closeOnUnload;\n    delete options.name;\n\n    if (width && height) {\n        // $FlowFixMe\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    // eslint-disable-next-line array-callback-return\n    const params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        const err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    if (closeOnUnload) {\n        window.addEventListener('unload', () => win.close());\n    }\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    const tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    const documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {|\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n|};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        const promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    const promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nconst getDefaultCreateElementOptions = () : ElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = getDefaultCreateElementOptions(), container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    const element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (const key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\ntype StringMap = {|\n    [ string ] : string\n|};\n\nexport type IframeElementOptionsType = {|\n    style? : StringMap,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : StringMap,\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n|};\n\nconst getDefaultIframeOptions = () : IframeElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultStringMap = () : StringMap => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function iframe(options : IframeElementOptionsType = getDefaultIframeOptions(), container : ?HTMLElement) : HTMLIFrameElement {\n\n    const attributes = options.attributes || getDefaultStringMap();\n    const style = options.style || getDefaultStringMap();\n\n    // $FlowFixMe\n    const newAttributes = {\n        allowTransparency: 'true',\n        ...attributes\n    };\n\n    // $FlowFixMe\n    const newStyle = {\n        backgroundColor: 'transparent',\n        border:          'none',\n        ...style\n    };\n\n    const frame = createElement('iframe', {\n        attributes: newAttributes,\n        style:      newStyle,\n        html:       options.html,\n        class:      options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        const el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : $ReadOnlyArray<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (const eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (const eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    const capitalizedName = capitalizeFirstLetter(name);\n\n    for (const prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        // eslint-disable-next-line prefer-const\n        let startTimeout;\n        let endTimeout;\n        // eslint-disable-next-line prefer-const\n        let startEvent;\n        // eslint-disable-next-line prefer-const\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', 'hidden', 'important');\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', 'none', 'important');\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    const animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode || !el.ownerDocument || !el.ownerDocument.documentElement || !el.ownerDocument.documentElement.contains(el)) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let cancelled = false;\n    const mutationObservers = [];\n    // eslint-disable-next-line prefer-const\n    let interval;\n    // eslint-disable-next-line prefer-const\n    let sacrificialFrame;\n    let sacrificialFrameWin;\n\n    const cancel = () => {\n        cancelled = true;\n        for (const observer of mutationObservers) {\n            observer.disconnect();\n        }\n        if (interval) {\n            interval.cancel();\n        }\n        if (sacrificialFrameWin) {\n            // eslint-disable-next-line no-use-before-define\n            sacrificialFrameWin.removeEventListener('unload', elementClosed);\n        }\n        if (sacrificialFrame) {\n            destroyElement(sacrificialFrame);\n        }\n    };\n\n    const elementClosed = () => {\n        if (!cancelled) {\n            handler();\n            cancel();\n        }\n    };\n\n    if (isElementClosed(element)) {\n        elementClosed();\n        return { cancel };\n    }\n\n    // Strategy 1: Mutation observer\n\n    if (window.MutationObserver) {\n        let mutationElement = element.parentElement;\n        while (mutationElement) {\n            const mutationObserver = new window.MutationObserver(() => {\n                if (isElementClosed(element)) {\n                    elementClosed();\n                }\n            });\n\n            mutationObserver.observe(mutationElement, { childList: true });\n            mutationObservers.push(mutationObserver);\n            mutationElement = mutationElement.parentElement;\n        }\n    }\n\n    // Strategy 2: Sacrificial iframe\n\n    sacrificialFrame = document.createElement('iframe');\n    sacrificialFrame.setAttribute('name', `__detect_close_${ uniqueID() }__`);\n    sacrificialFrame.style.display = 'none';\n    awaitFrameWindow(sacrificialFrame).then(frameWin => {\n        sacrificialFrameWin = assertSameDomain(frameWin);\n        sacrificialFrameWin.addEventListener('unload', elementClosed);\n    });\n    element.appendChild(sacrificialFrame);\n\n    // Strategy 3: Poller\n\n    const check = () => {\n        if (isElementClosed(element)) {\n            elementClosed();\n        }\n    };\n    interval = safeInterval(check, 1000);\n\n    return { cancel };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of querySelectorAll('script', el)) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({| width : number, height : number |}) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {| cancel : () => void |} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n    let canceled = false;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    const check = () => {\n        if (canceled || !isElementVisible(el)) {\n            return;\n        }\n\n        const newWidth = el.offsetWidth;\n        const newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    win.addEventListener('resize', check);\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n        timeout = safeInterval(check, interval * 10);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        timeout = safeInterval(check, interval * 10);\n    } else {\n        timeout = safeInterval(check, interval);\n    }\n\n    return {\n        cancel: () => {\n            canceled = true;\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            timeout.cancel();\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n    const performance = getPerformance();\n\n    if (!performance) {\n        return;\n    }\n\n    // $FlowFixMe[method-unbinding]\n    if (typeof performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot && shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n\n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    if (isShadowElement(shadowHost)) {\n        return insertShadowSlot(slotProvider);\n    }\n\n    return slotProvider;\n}\n\nexport function preventClickFocus(el : HTMLElement) {\n    const onFocus = (event : Event) => {\n        el.removeEventListener('focus', onFocus);\n        event.preventDefault();\n        el.blur();\n        return false;\n    };\n\n    el.addEventListener('mousedown', () => {\n        el.addEventListener('focus', onFocus);\n        setTimeout(() => {\n            el.removeEventListener('focus', onFocus);\n        }, 1);\n    });\n}\n\nexport function getStackTrace() : string {\n    try {\n        throw new Error('_');\n    }\n    catch (err) {\n        return err.stack || '';\n    }\n}\n\nfunction inferCurrentScript() : ?HTMLScriptElement {\n    try {\n        const stack = getStackTrace();\n        const stackDetails = (/.*at [^(]*\\((.*):(.+):(.+)\\)$/ig).exec(stack);\n        const scriptLocation = stackDetails && stackDetails[1];\n\n        if (!scriptLocation) {\n            return;\n        }\n\n        // $FlowFixMe[method-unbinding]\n        for (const script of Array.prototype.slice.call(document.getElementsByTagName('script')).reverse()) {\n            if (script.src && script.src === scriptLocation) {\n                return script;\n            }\n        }\n\n    } catch (err) {\n        // pass\n    }\n}\n\n// eslint-disable-next-line compat/compat\nlet currentScript = typeof document !== 'undefined' ? document.currentScript : null;\n\ntype GetCurrentScript = () => HTMLScriptElement;\n\nexport const getCurrentScript : GetCurrentScript = memoize(() => {\n    if (currentScript) {\n        return currentScript;\n    }\n\n    currentScript = inferCurrentScript();\n\n    if (currentScript) {\n        return currentScript;\n    }\n\n    throw new Error('Can not determine current script');\n});\n\nconst currentUID = uniqueID();\n\ntype GetCurrentScriptUID = () => string;\n\nexport const getCurrentScriptUID : GetCurrentScriptUID = memoize(() => {\n    let script;\n\n    try {\n        script = getCurrentScript();\n    } catch (err) {\n        return currentUID;\n    }\n\n    let uid = script.getAttribute(ATTRIBUTES.UID);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    uid = script.getAttribute(`${ ATTRIBUTES.UID }-auto`);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    if (script.src) {\n\n        const { src, dataset } = script;\n        const stringToHash = JSON.stringify({ src, dataset });\n        const hashedString = strHashStr(stringToHash);\n        const hashResult = hashedString.slice(hashedString.length - UID_HASH_LENGTH);\n\n        uid = `uid_${ hashResult }`;\n    } else {\n        uid = uniqueID();\n    }\n\n    script.setAttribute(`${ ATTRIBUTES.UID }-auto`, uid);\n\n    return uid;\n});\n\ntype SubmitFormOptions = {|\n    url : string,\n    target : string,\n    body? : {| [string] : string | boolean |},\n    method? : string\n|};\n\nexport function submitForm({ url, target, body, method = 'post' } : SubmitFormOptions) {\n    const form = document.createElement('form');\n    form.setAttribute('target', target);\n    form.setAttribute('method', method);\n    form.setAttribute('action', url);\n    form.style.display = 'none';\n\n    if (body) {\n        for (const key of Object.keys(body)) {\n            const input = document.createElement('input');\n            input.setAttribute('name', key);\n            input.setAttribute('value', body[key]?.toString());\n            form.appendChild(input);\n        }\n    }\n\n    getBody().appendChild(form);\n    form.submit();\n    getBody().removeChild(form);\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13,\n    SPACE: 32\n};\n\nexport const ATTRIBUTES = {\n    UID: 'data-uid'\n};\n\nexport const UID_HASH_LENGTH = 30;\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    const match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT : number = __TEST__ ? 2000 : -1;\nexport const RESPONSE_CYCLE_TIME = 500;\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n\nexport const METHOD = {\n    GET:  ('get' : 'get'),\n    POST: ('post' : 'post')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet, getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__POST_ROBOT__.__SCRIPT_NAMESPACE__) {\n        return `${ __POST_ROBOT__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __POST_ROBOT__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    const globalKey = getGlobalKey();\n\n    if (win !== window) {\n        return win[globalKey];\n    }\n    const global : Object = win[globalKey] = win[globalKey] || {};\n    return global;\n}\n\nexport function deleteGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore, getGlobal } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction resolveHelloPromise(win : CrossDomainWindowType, { domain }) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    const existingPromise = helloPromises.get(win);\n    if (existingPromise) {\n        existingPromise.resolve({ domain });\n    }\n    const newPromise = ZalgoPromise.resolve({ domain });\n    helloPromises.set(win, newPromise);\n    return newPromise;\n}\n\nfunction listenForHello({ on } : {| on : OnType |}) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        resolveHelloPromise(source, { domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<{| win : CrossDomainWindowType, domain : string, instanceID : string |}> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            resolveHelloPromise(win, { domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(err => {\n                // $FlowFixMe\n                if (__TEST__ && getGlobal(parent)) {\n                    throw err;\n                }\n            });\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{| domain : string |}> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull,\n    serializeUndefined\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>,\n    undefined? : CustomOrPrimitiveSerializer<void, typeof TYPE.UNDEFINED>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull,\n    [ TYPE.UNDEFINED ]: serializeUndefined\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nimport { serializeObject } from './object';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void,\n    data : mixed\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code, data } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code, data });\n}\n\nexport function deserializeError({ message, stack, code, data } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n\n    if (data) {\n        // $FlowFixMe\n        error.data = serializeObject(data);\n    }\n\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nimport type { Thenable } from '../types';\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() : Thenable {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { NativeSerializedType } from '../types';\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\n\nexport type SerializedUndefined = void;\n\nexport function serializeUndefined(val : void) : NativeSerializedType<typeof TYPE.UNDEFINED, SerializedUndefined> {\n    return serializeType(TYPE.UNDEFINED, val);\n}\n\nexport function deserializeUndefined() : void {\n    // pass\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull,\n    deserializeUndefined\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>,\n    undefined? : PrimitiveDeserializer<void>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull,\n    [ TYPE.UNDEFINED ]: deserializeUndefined\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, closeWindow,\n    type DomainMatcher, getOpener, WINDOW_TYPE, isWindow, assertSameDomain, getFrameForWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise, noop, submitForm } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE, METHOD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SetLocationOptions = {|\n    method? : $Values<typeof METHOD>,\n    body? : {|\n        [string] : string | boolean\n    |}\n|};\n\ntype SerializedWindowType = {|\n    id : string,\n    getType : () => ZalgoPromise<$Values<typeof WINDOW_TYPE>>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (url : string, opts? : SetLocationOptions) => ZalgoPromise<void>,\n    getName : () => ZalgoPromise<?string>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nfunction getSerializedWindow(winPromise : ZalgoPromise<CrossDomainWindowType>, { send, id = uniqueID() } : {| send : SendType, id? : string |}) : SerializedWindowType {\n    \n    let windowNamePromise = winPromise.then(win => {\n        if (isSameDomain(win)) {\n            return assertSameDomain(win).name;\n        }\n    });\n    \n    const windowTypePromise = winPromise.then(window => {\n        if (!isWindowClosed(window)) {\n            return getOpener(window) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME;\n        } else {\n            throw new Error(`Window is closed, can not determine type`);\n        }\n    });\n\n    windowNamePromise.catch(noop);\n    windowTypePromise.catch(noop);\n\n    const getName = () => winPromise.then(win => {\n        if (isWindowClosed(win)) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            return assertSameDomain(win).name;\n        }\n\n        return windowNamePromise;\n    });\n\n    const getDefaultSetLocationOptions = () => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const setLocation = (href : string, opts? : SetLocationOptions = getDefaultSetLocationOptions()) => winPromise.then(win => {\n        const domain = `${ window.location.protocol }//${ window.location.host }`;\n        const { method = METHOD.GET, body } = opts;\n\n        if (href.indexOf('/') === 0) {\n            href = `${ domain }${ href }`;\n        } else if (!href.match(/^https?:\\/\\//) && href.indexOf(domain) !== 0) {\n            throw new Error(`Expected url to be http or https url, or absolute path, got ${ JSON.stringify(href) }`);\n        }\n\n        if (method === METHOD.POST) {\n            return getName().then(name => {\n                if (!name) {\n                    throw new Error(`Can not post to window without target name`);\n                }\n\n                submitForm({\n                    url:    href,\n                    target: name,\n                    method,\n                    body\n                });\n            });\n        } else if (method === METHOD.GET) {\n            if (isSameDomain(win)) {\n                try {\n                    if (win.location && typeof win.location.replace === 'function') {\n                        // $FlowFixMe\n                        win.location.replace(href);\n                        return;\n                    }\n                } catch (err) {\n                    // pass\n                }\n            }\n\n            win.location = href;\n\n        } else {\n            throw new Error(`Unsupported method: ${ method }`);\n        }\n    });\n\n    return {\n        id,\n        getType: () => {\n            return windowTypePromise;\n        },\n        getInstanceID: memoizePromise(() => winPromise.then(win => getWindowInstanceID(win, { send }))),\n        close:         () => winPromise.then(closeWindow),\n        getName,\n        focus:         () => winPromise.then(win => {\n            win.focus();\n        }),\n        isClosed: () => winPromise.then(win => {\n            return isWindowClosed(win);\n        }),\n        setLocation,\n        setName: (name) => winPromise.then(win => {\n            if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                linkWindow({ win, name });\n            }\n\n            const sameDomain = isSameDomain(win);\n            const frame = getFrameForWindow(win);\n\n            if (!sameDomain) {\n                throw new Error(`Can not set name for cross-domain window: ${ name }`);\n            }\n\n            assertSameDomain(win).name = name;\n            if (frame) {\n                frame.setAttribute('name', name);\n            }\n\n            windowNamePromise = ZalgoPromise.resolve(name);\n        })\n    };\n}\n\nexport class ProxyWindow {\n\n    id : string\n    isProxyWindow : true = true\n    serializedWindow : SerializedWindowType\n    actualWindow : ?CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n    name : string\n\n    constructor({ send, win, serializedWindow } : {| win? : CrossDomainWindowType, serializedWindow? : SerializedWindowType, send : SendType |}) {\n        this.actualWindowPromise = new ZalgoPromise();\n        this.serializedWindow = serializedWindow || getSerializedWindow(this.actualWindowPromise, { send });\n        \n        globalStore('idToProxyWindow').set(this.getID(), this);\n        if (win) {\n            this.setWindow(win, { send });\n        }\n    }\n\n    getID() : string {\n        return this.serializedWindow.id;\n    }\n\n    getType() : ZalgoPromise<$Values<typeof WINDOW_TYPE>> {\n        return this.serializedWindow.getType();\n    }\n\n    isPopup() : ZalgoPromise<boolean> {\n        return this.getType().then(type => {\n            return type === WINDOW_TYPE.POPUP;\n        });\n    }\n\n    setLocation(href : string, opts? : SetLocationOptions) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setLocation(href, opts).then(() => this);\n    }\n\n    getName() : ZalgoPromise<?string> {\n        return this.serializedWindow.getName();\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setName(name).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.close().then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        const isPopupPromise = this.isPopup();\n        const getNamePromise = this.getName();\n\n        const reopenPromise = ZalgoPromise.hash({ isPopup: isPopupPromise, name: getNamePromise }).then(({ isPopup, name }) => {\n            if (isPopup && name) {\n                window.open('', name, 'noopener');\n            }\n        });\n        const focusPromise = this.serializedWindow.focus();\n\n        return ZalgoPromise.all([\n            reopenPromise,\n            focusPromise\n        ]).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return this.serializedWindow.isClosed();\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(this.actualWindow);\n        this.serializedWindow = getSerializedWindow(this.actualWindowPromise, { send, id: this.getID() });\n        windowStore('winToProxyWindow').set(win, this);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.hash({\n                proxyInstanceID:       this.getInstanceID(),\n                knownWindowInstanceID: getWindowInstanceID(win, { send })\n            }).then(({ proxyInstanceID, knownWindowInstanceID }) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win, { send });\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        return this.serializedWindow.getInstanceID();\n    }\n\n    shouldClean() : boolean {\n        return Boolean(this.actualWindow && isWindowClosed(this.actualWindow));\n    }\n\n    serialize() : SerializedWindowType {\n        return this.serializedWindow;\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : SerializedWindowType {\n        cleanupProxyWindows();\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n        return globalStore('idToProxyWindow').get(serializedWindow.id) || new ProxyWindow({ serializedWindow, send });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        const actualWindow : CrossDomainWindowType = win;\n        \n        return windowStore('winToProxyWindow').get(actualWindow) || new ProxyWindow({ win: actualWindow, send });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedWindowType>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : {| send : SendType |}) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { send });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : {| win? : CrossDomainWindowType, domain? : string |}) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady : ZalgoPromise<HTMLBodyElement> = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\ntype SendMessageType = {|\n    (string) : void,\n    fireAndForget : (string) => void\n|};\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : SendMessageType) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex, arrayFrom } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction stringifyArguments(args : $ReadOnlyArray<mixed> = []) : string {\n    return arrayFrom(args).map(arg => {\n        if (typeof arg === 'string') {\n            return `'${ arg }'`;\n        }\n        if (arg === undefined) {\n            return 'undefined';\n        }\n        if (arg === null) {\n            return 'null';\n        }\n        if (typeof arg === 'boolean') {\n            return arg.toString();\n        }\n        if (Array.isArray(arg)) {\n            return '[ ... ]';\n        }\n        if (typeof arg === 'object') {\n            return '{ ... }';\n        }\n        if (typeof arg === 'function') {\n            return '() => { ... }';\n        }\n        return `<${ typeof arg }>`;\n    }).join(', ');\n}\n\nfunction listenForFunctionCalls({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : {| source : CrossDomainWindowType, origin : string, data : Object |}) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source, { send }).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    // $FlowFixMe\n                    if (err.stack) {\n                        // $FlowFixMe\n                        err.stack = `Remote call to ${ name }(${ stringifyArguments(data.args) }) failed\\n\\n${ err.stack }`;\n                    }\n\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {|\n    id : string,\n    name : string\n|}>;\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype SerializableFunction<T> = {\n    () : ZalgoPromise<T> | T,\n    __id__? : string,\n    __name__? : string\n};\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : SerializableFunction<T>, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedFunction {\n    listenForFunctionCalls({ on, send });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    let name = val.__name__ || val.name || key;\n\n    if (typeof name === 'string' && typeof name.indexOf === 'function' && name.indexOf('anonymous::') === 0) {\n        name = name.replace('anonymous::', `${ key }::`);\n    }\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : {| id : string, name : string |}, { send } : {| send : SendType |}) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    // $FlowFixMe[method-unbinding]\n                    const args = Array.prototype.slice.call(arguments);\n\n                    if (opts.fireAndForget) {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: true });\n                    } else {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: false })\n                            .then(res => res.data.result);\n                    }\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `Remote call to ${ name }(${ stringifyArguments(arguments) }) failed\\n\\n${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : {| on : OnType, send : SendType |}) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { send } : {| on : OnType, send : SendType |}) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {|\n    then : SerializedFunction\n|}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : {| then : Function |}) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\ntype SendStrategies = {|\n    [$Values<typeof SEND_STRATEGY>] : (CrossDomainWindowType, string, string) => void\n|};\n\nexport const SEND_MESSAGE_STRATEGIES : SendStrategies = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n    if (domain.indexOf(PROTOCOL.FILE) === 0) {\n        domain = WILDCARD;\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n\n        if (domain.indexOf(PROTOCOL.MOCK) === 0) {\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send message to mock domain ${ domain }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            const windowDomain = getDomain(win);\n                \n            if (windowDomain !== domain) {\n                throw new Error(`Mock domain target ${ domain } does not match window domain ${ windowDomain }`);\n            }\n\n            // $FlowFixMe\n            domain = getActualDomain(win);\n\n        }\n    }\n\n    win.postMessage(serializedMessage, domain);\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            throw new Error(`Bridge not needed for browser`);\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            throw new Error(`Global messaging not needed for browser`);\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { stringifyError, noop } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport { windowStore, getGlobalKey } from '../../global';\nimport type { Message, PackedMessages } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nfunction packMessages(messages : $ReadOnlyArray<Message>) : PackedMessages {\n    return {\n        [ getGlobalKey() ]: messages\n    };\n}\n\nexport function sendMessage(win : CrossDomainWindowType, domain : string, message : Message, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const messageBuffer = windowStore();\n\n        const domainBuffer = messageBuffer.getOrSet(win, () => ({}));\n\n        domainBuffer.buffer = domainBuffer.buffer || [];\n        domainBuffer.buffer.push(message);\n\n        domainBuffer.flush = domainBuffer.flush || ZalgoPromise.flush().then(() => {\n            if (isWindowClosed(win)) {\n                throw new Error('Window is closed');\n            }\n\n            const serializedMessage = serializeMessage(win, domain, packMessages(domainBuffer.buffer || []), { on, send });\n            delete domainBuffer.buffer;\n\n            const strategies = Object.keys(SEND_MESSAGE_STRATEGIES);\n            const errors = [];\n\n            for (const strategyName of strategies) {\n                try {\n                    SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n                } catch (err) {\n                    errors.push(err);\n                }\n            }\n\n            if (errors.length === strategies.length) {\n                throw new Error(`All post-robot messaging strategies failed:\\n\\n${ errors.map((err, i) => `${ i }. ${ stringifyError(err) }`).join('\\n\\n') }`);\n            }\n        });\n\n        return domainBuffer.flush.then(() => {\n            delete domainBuffer.flush;\n        });\n    }).then(noop);\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet, noop } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\nimport { ProxyWindow } from '../serialize/window';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({| source : CrossDomainWindowType, origin : string, data : mixed |}) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean,\n    cancelled? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function cancelResponseListeners() {\n    const responseListeners = globalStore('responseListeners');\n    for (const hash of responseListeners.keys()) {\n        const listener = responseListeners.get(hash);\n        if (listener) {\n            listener.cancelled = true;\n        }\n        responseListeners.del(hash);\n    }\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) |}) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function addRequestListener({ name, win: winCandidate, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard | ProxyWindow), domain : ?DomainMatcher |}, listener : RequestListenerType) : {| cancel : () => void |} {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    // $FlowFixMe\n    if (winCandidate && winCandidate !== WILDCARD && ProxyWindow.isProxyWindow(winCandidate)) {\n        // $FlowFixMe\n        const proxyWin : ProxyWindow = winCandidate;\n\n        const requestListenerPromise = proxyWin.awaitWindow().then(actualWin => {\n            return addRequestListener({ name, win: actualWin, domain }, listener);\n        });\n\n        return {\n            cancel: () => {\n                requestListenerPromise.then(requestListener => requestListener.cancel(), noop);\n            }\n        };\n    }\n\n    // $FlowFixMe\n    let win : ?(CrossDomainWindowType | WildCard) = winCandidate;\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n    const strDomain = domain.toString();\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const winNameListeners = requestListeners.getOrSet(win, () => ({}));\n    const winNameDomainListeners = getOrSet(winNameListeners, name, () => ({}));\n\n    let winNameDomainRegexListeners;\n    let winNameDomainRegexListener;\n\n    if (isRegex(domain)) {\n        winNameDomainRegexListeners = getOrSet(winNameDomainListeners, __DOMAIN_REGEX__, () => []);\n        winNameDomainRegexListener = { regex: domain, listener };\n        winNameDomainRegexListeners.push(winNameDomainRegexListener);\n    } else {\n        winNameDomainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete winNameDomainListeners[strDomain];\n\n            if (winNameDomainRegexListener) {\n                winNameDomainRegexListeners.splice(winNameDomainRegexListeners.indexOf(winNameDomainRegexListener, 1));\n\n                if (!winNameDomainRegexListeners.length) {\n                    delete winNameDomainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(winNameDomainListeners).length) {\n                delete winNameListeners[name];\n            }\n\n            if (win && !Object.keys(winNameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, stringifyError, uniqueID } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, ResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport function handleRequest(source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n\n    const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n    const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n    if (__DEBUG__) {\n        // eslint-disable-next-line no-console\n        console.info('receive::req', logName, origin, '\\n\\n', message.data);\n    }\n\n    function sendAck() : ZalgoPromise<void> {\n        return ZalgoPromise.flush().then(() => {\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            try {\n                return sendMessage(source, origin, {\n                    id:     uniqueID(),\n                    origin: getDomain(window),\n                    type:   MESSAGE_TYPE.ACK,\n                    hash:   message.hash,\n                    name:   message.name\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send ack message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        });\n    }\n\n\n    function sendResponse(ack : $Values<typeof MESSAGE_ACK>, data : ?Object, error : ?mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.flush().then(() => {\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    console.info('respond::res', logName, origin, '\\n\\n', data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    console.error('respond::err', logName, origin, '\\n\\n', error); // eslint-disable-line no-console\n                }\n            }\n\n            try {\n                return sendMessage(source, origin, {\n                    id:     uniqueID(),\n                    origin: getDomain(window),\n                    type:   MESSAGE_TYPE.RESPONSE,\n                    hash:   message.hash,\n                    name:   message.name,\n                    ack,\n                    data,\n                    error\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send response message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        });\n    }\n\n    \n    return ZalgoPromise.all([\n        sendAck(),\n\n        ZalgoPromise.try(() => {\n\n            if (!options) {\n                throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n            }\n\n            const data = message.data;\n\n            return options.handler({ source, origin, data });\n\n        }).then(data => {\n            return sendResponse(MESSAGE_ACK.SUCCESS, data);\n\n        }, error => {\n            return sendResponse(MESSAGE_ACK.ERROR, null, error);\n        })\n\n    ]).then(noop).catch(err => {\n        if (options && options.handleError) {\n            return options.handleError(err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport function handleAck(source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n    if (isResponseListenerErrored(message.hash)) {\n        return;\n    }\n\n    const options = getResponseListener(message.hash);\n\n    if (!options) {\n        throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n    }\n\n    try {\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n    \n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n    } catch (err) {\n        options.promise.reject(err);\n    }\n\n    options.ack = true;\n}\n\nexport function handleResponse(source : CrossDomainWindowType, origin : string, message : ResponseMessage) : void | ZalgoPromise<void> {\n\n    if (isResponseListenerErrored(message.hash)) {\n        return;\n    }\n\n    const options = getResponseListener(message.hash);\n\n    if (!options) {\n        throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n    }\n\n    if (!matchDomain(options.domain, origin)) {\n        throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n    }\n\n    if (source !== options.win) {\n        throw new Error(`Response source does not match registered window`);\n    }\n\n    deleteResponseListener(message.hash);\n\n    const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n    if (message.ack === MESSAGE_ACK.ERROR) {\n        if (__DEBUG__) {\n            console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n        }\n\n        options.promise.reject(message.error);\n\n    } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n        if (__DEBUG__) {\n            console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n        }\n\n        options.promise.resolve({ source, origin, data: message.data });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow, PROTOCOL  } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport type { Message } from '../types';\nimport { MESSAGE_TYPE } from '../../conf';\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore, getGlobalKey } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { handleRequest, handleResponse, handleAck } from './types';\n\nfunction deserializeMessages(message : string, source : CrossDomainWindowType, origin : string, { on, send } : {| on : OnType, send : SendType |}) : ?$ReadOnlyArray<Message> {\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    const parseMessages = parsedMessage[getGlobalKey()];\n\n    if (!Array.isArray(parseMessages)) {\n        return;\n    }\n\n    return parseMessages;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    try {\n        if (!window || window.closed || !event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        if (isWindowClosed(source)) {\n            return;\n        }\n\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const messages = deserializeMessages(data, source, origin, { on, send });\n\n    if (!messages) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    for (const message of messages) {\n        if (receivedMessages.has(message.id)) {\n            return;\n        }\n\n        receivedMessages.set(message.id, true);\n\n        if (isWindowClosed(source) && !message.fireAndForget) {\n            return;\n        }\n\n        if (message.origin.indexOf(PROTOCOL.FILE) === 0) {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        try {\n            if (message.type === MESSAGE_TYPE.REQUEST) {\n                handleRequest(source, origin, message, { on, send });\n            } else if (message.type === MESSAGE_TYPE.RESPONSE) {\n                handleResponse(source, origin, message);\n            } else if (message.type === MESSAGE_TYPE.ACK) {\n                handleAck(source, origin, message);\n            }\n        } catch (err) {\n            setTimeout(() => {\n                throw err;\n            }, 0);\n        }\n    }\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : {| on : OnType, send : SendType |}) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : {| origin : string |}\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    ZalgoPromise.try(() => {\n        try {\n            noop(event.source);\n        } catch (err) {\n            return;\n        }\n\n        const source = event.source || event.sourceElement;\n        let origin = event.origin || (event.originalEvent && event.originalEvent.origin);\n        const data = event.data;\n\n        if (origin === 'null') {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        if (!source) {\n            return;\n        }\n\n        if (!origin) {\n            throw new Error(`Post message did not have origin domain`);\n        }\n\n        if (__TEST__) {\n            if (needsGlobalMessagingForBrowser() && isSameTopWindow(source, window) === false) {\n                return;\n            }\n        }\n\n        receiveMessage({ source, origin, data }, { on, send });\n    });\n}\n\nexport function listenForMessages({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore().getOrSet('postMessageListener', () => {\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n\nexport function stopListenForMessages() {\n    const listener = globalStore().get('postMessageListener');\n    if (listener) {\n        listener.cancel();\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nconst getDefaultServerOptions = () : ServerOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    const winOrProxyWin = options.window;\n    const domain = options.domain || WILDCARD;\n\n    const successHandler = handler || options.handler;\n    const errorHandler = options.errorHandler || (err => {\n        throw err;\n    });\n\n    const requestListener = addRequestListener({ name, win: winOrProxyWin, domain }, {\n        handler:     successHandler,\n        handleError: errorHandler\n    });\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\ntype CancelableZalgoPromise<T> = ZalgoPromise<T> & {|\n    cancel : () => void\n|};\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : CancelableZalgoPromise<{| source : mixed, origin : string, data : Object |}> {\n    \n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    // $FlowFixMe\n    promise.cancel = listener.cancel;\n\n    // $FlowFixMe\n    return promise;\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop, safeInterval, stringify, stringifyError } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN, RESPONSE_CYCLE_TIME } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport { ProxyWindow } from '../serialize/window';\nimport type { SendType } from '../types';\n\nimport { on } from './on';\n\nfunction validateOptions(name : string, win : CrossDomainWindowType, domain : ?DomainMatcher) {\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (domain) {\n        if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n            throw new TypeError(`Can not send ${ name }. Expected domain ${ JSON.stringify(domain) } to be a string, array, or regex`);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        throw new Error(`Can not send ${ name }. Target window is closed`);\n    }\n}\n\nfunction normalizeDomain(win : CrossDomainWindowType, targetDomain : DomainMatcher, actualDomain : ?string, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof targetDomain === 'string') {\n            return targetDomain;\n        }\n\n        return ZalgoPromise.try(() => {\n            return actualDomain || sayHello(win, { send }).then(({ domain }) => domain);\n\n        }).then(normalizedDomain => {\n            if (!matchDomain(targetDomain, targetDomain)) {\n                throw new Error(`Domain ${ stringify(targetDomain) } does not match ${ stringify(targetDomain) }`);\n            }\n\n            return normalizedDomain;\n        });\n    });\n}\n\nexport const send : SendType = (winOrProxyWin, name, data, options) => {\n    options = options || {};\n    const domainMatcher = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    return ProxyWindow.toProxyWindow(winOrProxyWin, { send }).awaitWindow().then(win => {\n\n        // $FlowFixMe\n        return ZalgoPromise.try(() => {\n            validateOptions(name, win, domainMatcher);\n\n            if (isAncestor(window, win)) {\n                return awaitWindowHello(win, childTimeout);\n            }\n            \n        }).then(({ domain: actualDomain } = {}) => {\n\n            return normalizeDomain(win, domainMatcher, actualDomain, { send });\n        }).then(targetDomain => {\n            const domain = targetDomain;\n\n            const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n            if (__DEBUG__) {\n                console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n            }\n\n            const promise = new ZalgoPromise();\n            const hash = `${ name }_${ uniqueID() }`;\n\n            if (!fireAndForget) {\n                const responseListener : ResponseListenerType = { name, win, domain, promise };\n                addResponseListener(hash, responseListener);\n\n                const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n                reqPromises.push(promise);\n\n                promise.catch(() => {\n                    markResponseListenerErrored(hash);\n                    deleteResponseListener(hash);\n                });\n\n                const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n                const totalResTimeout = responseTimeout;\n\n                let ackTimeout = totalAckTimeout;\n                let resTimeout = totalResTimeout;\n            \n                const interval = safeInterval(() => {\n                    if (isWindowClosed(win)) {\n                        return promise.reject(new Error(`Window closed for ${ name } before ${ responseListener.ack ? 'response' : 'ack' }`));\n                    }\n\n                    if (responseListener.cancelled) {\n                        return promise.reject(new Error(`Response listener was cancelled for ${ name }`));\n                    }\n\n                    ackTimeout = Math.max(ackTimeout - RESPONSE_CYCLE_TIME, 0);\n                    if (resTimeout !== -1) {\n                        resTimeout = Math.max(resTimeout - RESPONSE_CYCLE_TIME, 0);\n                    }\n\n                    if (!responseListener.ack && ackTimeout === 0) {\n                        return promise.reject(new Error(`No ack for postMessage ${ logName } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                    } else if (resTimeout === 0) {\n                        return promise.reject(new Error(`No response for postMessage ${ logName } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                    }\n                }, RESPONSE_CYCLE_TIME);\n\n                promise.finally(() => {\n                    interval.cancel();\n                    reqPromises.splice(reqPromises.indexOf(promise, 1));\n                }).catch(noop);\n            }\n\n            return sendMessage(win, domain, {\n                id:     uniqueID(),\n                origin: getDomain(window),\n                type:   MESSAGE_TYPE.REQUEST,\n                hash,\n                name,\n                data,\n                fireAndForget\n            }, { on, send }).then(() => {\n                return fireAndForget ? promise.resolve() : promise;\n            }, err => {\n                throw new Error(`Send request message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            });\n        });\n    });\n};\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, stopListenForMessages, receiveMessage, setupGlobalReceiveMessage, cancelResponseListeners } from './drivers';\nimport { getGlobal, deleteGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function createProxyWindow(win? : CrossDomainWindowType) : ProxyWindow {\n    return new ProxyWindow({ send, win });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        setupGlobalReceiveMessage({ on, send });\n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n    }\n}\n\nexport function destroy() {\n    cancelResponseListeners();\n    stopListenForMessages();\n    deleteGlobal();\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindowClosed } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window ${ isWindowClosed(win) ? 'closed' : 'cleaned up' } before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__ZOID__.__SCRIPT_NAMESPACE__) {\n        return `${ __ZOID__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __ZOID__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal<T>(win : CrossDomainWindowType) : T {\n    const globalKey = getGlobalKey();\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[globalKey]) {\n        win[globalKey] = {};\n    }\n\n    return win[globalKey];\n}\n\nexport function tryGlobal<T, R>(win : CrossDomainWindowType, handler : (T) => R) : ?R {\n    try {\n        return handler(getGlobal(win));\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function destroyGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type ProxyObject<T> = {|\n    get : () => ZalgoPromise<T>\n|};\n\nexport function getProxyObject<T>(obj : T) : ProxyObject<T> {\n    return {\n        get() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                // $FlowFixMe[object-this-reference]\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call get on proxy object from a remote window`);\n                }\n    \n                return obj;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, destroy, serializeMessage, deserializeMessage, createProxyWindow, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\n\n// $FlowFixMe\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   ('string' : 'string'),\n    OBJECT:   ('object' : 'object'),\n    FUNCTION: ('function' : 'function'),\n    BOOLEAN:  ('boolean' : 'boolean'),\n    NUMBER:   ('number' : 'number'),\n    ARRAY:    ('array' : 'array')\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: ('opener' : 'opener'),\n    PARENT: ('parent' : 'parent'),\n    GLOBAL: ('global' : 'global')\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    DESTROY:  'zoid-destroy',\n    PROPS:    'zoid-props',\n    RESIZE:   'zoid-resize',\n    FOCUS:    'zoid-focus'\n};\n\nexport const METHOD = {\n    GET:  ('get' : 'get'),\n    POST: ('post' : 'post')\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { PropsDefinitionType, PropsType, ChildPropsType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\n// $FlowFixMe\nexport function normalizeChildProp<P, T, X>(propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, key : string, value : ?T, helpers : ChildHelpers<P, X>) : ?T  {\n    if (!propsDef.hasOwnProperty(key)) {\n        return value;\n    }\n\n    const prop = propsDef[key];\n\n    if (typeof prop.childDecorate === 'function') {\n        const { uid, tag, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide, export: xport, getSiblings } = helpers;\n        const decoratedValue = prop.childDecorate({ value, uid, tag, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide, export: xport, getSiblings });\n\n        // $FlowFixMe\n        return decoratedValue;\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P, X>(parentComponentWindow : CrossDomainWindowType, propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, origin : string, helpers : ChildHelpers<P, X>, isUpdate : boolean = false) : ChildPropsType<P, X> {\n\n    const result = {};\n\n    for (const key of Object.keys(props)) {\n        const prop = propsDef[key];\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        // $FlowFixMe\n        const value = normalizeChildProp(propsDef, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of Object.keys(propsDef)) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(propsDef, props, key, undefined, helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow, assertSameDomain } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage, type CrossDomainFunctionType } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, onResize, elementReady, assertExists, noop } from 'belter/src';\n\nimport { getGlobal, tryGlobal } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { NormalizedComponentOptionsType, getSiblingsPropType } from '../component';\nimport type { PropsType, ChildPropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\nimport type { StringMatcherType } from '../types';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : CrossDomainFunctionType<[ PropsType<P> ], void>,\n    close : CrossDomainFunctionType<[], void>\n|};\n\nexport type ChildHelpers<P, X> = {|\n    uid : string,\n    tag : string,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType,\n    getParentDomain : () => string,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>,\n    export : (X) => ZalgoPromise<void>,\n    getSiblings : getSiblingsPropType\n|};\n\nfunction getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n    const { type } = ref;\n\n    if (type === WINDOW_REFERENCES.OPENER) {\n        return assertExists('opener', getOpener(window));\n\n    } else if (type === WINDOW_REFERENCES.PARENT && typeof ref.distance === 'number') {\n        return assertExists('parent', getNthParentFromTop(window, ref.distance));\n\n    } else if (type === WINDOW_REFERENCES.GLOBAL && ref.uid && typeof ref.uid === 'string') {\n        const { uid } = ref;\n        const ancestor = getAncestor(window);\n\n        if (!ancestor) {\n            throw new Error(`Can not find ancestor window`);\n        }\n\n        for (const frame of getAllFramesInWindow(ancestor)) {\n            if (isSameDomain(frame)) {\n                const win = tryGlobal(frame, global => global.windows && global.windows[uid]);\n\n                if (win) {\n                    return win;\n                }\n            }\n        }\n    }\n\n    throw new Error(`Unable to find ${ type } parent component window`);\n}\n\nfunction checkParentDomain(allowedParentDomains : StringMatcherType, domain : string) {\n    if (!matchDomain(allowedParentDomains, domain)) {\n        throw new Error(`Can not be rendered by domain: ${ domain }`);\n    }\n}\n\nfunction focus() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.focus();\n    });\n}\n\nfunction destroy() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.close();\n    });\n}\n\nfunction getPropsByRef<P>(parentComponentWindow : CrossDomainWindowType, domain : string, propRef : PropRef) : (PropsType<P>) {\n    let props;\n\n    if (propRef.type === INITIAL_PROPS.RAW) {\n        props = propRef.value;\n    } else if (propRef.type === INITIAL_PROPS.UID) {\n        if (!isSameDomain(parentComponentWindow)) {\n            throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n        }\n\n        const global = getGlobal(parentComponentWindow);\n        props = assertExists('props', global && global.props[propRef.uid]);\n    }\n\n    if (!props) {\n        throw new Error(`Could not find props`);\n    }\n\n    return deserializeMessage(parentComponentWindow, domain, props);\n}\n\nexport type ChildComponent<P, X> = {|\n    getProps : () => ChildPropsType<P, X>,\n    init : () => ZalgoPromise<void>\n|};\n\nexport function childComponent<P, X, C>(options : NormalizedComponentOptionsType<P, X, C>) : ChildComponent<P, X> {\n    const { tag, propsDef, autoResize, allowedParentDomains } = options;\n\n    const onPropHandlers = [];\n    const childPayload = getChildPayload();\n    let props : ChildPropsType<P, X>;\n    const exportsPromise = new ZalgoPromise();\n\n    if (!childPayload) {\n        throw new Error(`No child payload found`);\n    }\n\n    if (childPayload.version !== __ZOID__.__VERSION__) {\n        throw new Error(`Parent window has zoid version ${ childPayload.version }, child window has version ${ __ZOID__.__VERSION__ }`);\n    }\n\n    const { uid, parent: parentRef, parentDomain, exports: parentExports, context, props: propsRef } = childPayload;\n    const parentComponentWindow = getParentComponentWindow(parentRef);\n    const parent : ParentExportsType<P, X> = deserializeMessage(parentComponentWindow, parentDomain, parentExports);\n\n    const { show, hide, close } = parent;\n\n    const getParent = () => parentComponentWindow;\n    const getParentDomain = () => parentDomain;\n    \n    const onProps = (handler : Function) => {\n        onPropHandlers.push(handler);\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (parent && parent.onError) {\n                return parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    };\n\n    const resize = ({ width, height } : {| width : ?number, height : ?number |}) : ZalgoPromise<void> => {\n        return parent.resize.fireAndForget({ width, height });\n    };\n\n    const xport = (xports : X) : ZalgoPromise<void> => {\n        exportsPromise.resolve(xports);\n        return parent.export(xports);\n    };\n\n    const getSiblings = ({ anyParent } = {}) => {\n        const result = [];\n        const currentParent = props.parent;\n\n        if (typeof anyParent === 'undefined') {\n            anyParent = !currentParent;\n        }\n\n        if (!anyParent && !currentParent) {\n            throw new Error(`No parent found for ${ tag } child`);\n        }\n\n        for (const win of getAllFramesInWindow(window)) {\n            if (!isSameDomain(win)) {\n                continue;\n            }\n\n            const xprops : ChildPropsType<mixed, mixed> = assertSameDomain(win).xprops;\n\n            if (!xprops || getParent() !== xprops.getParent()) {\n                continue;\n            }\n\n            const winParent = xprops.parent;\n\n            if (!anyParent && currentParent) {\n                if (!winParent || winParent.uid !== currentParent.uid) {\n                    continue;\n                }\n            }\n\n            const xports = tryGlobal(win, global => global.exports);\n\n            result.push({\n                props:   xprops,\n                exports: xports\n            });\n        }\n\n        return result;\n    };\n\n    const getHelpers = () : ChildHelpers<P, X> => {\n        return {\n            tag, show, hide, close, focus, onError, resize, getSiblings,\n            onProps, getParent, getParentDomain, uid, export: xport\n        };\n    };\n\n    const watchForClose = () => {\n        window.addEventListener('beforeunload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(parentComponentWindow, () => {\n            destroy();\n        });\n    };\n\n    const setProps = (newProps : PropsType<P>, origin : string, isUpdate : boolean = false) => {\n        const helpers = getHelpers();\n        const normalizedProps = normalizeChildProps(parentComponentWindow, propsDef, newProps, origin, helpers, isUpdate);\n\n        if (props) {\n            extend(props, normalizedProps);\n        } else {\n            props = normalizedProps;\n        }\n\n        for (const handler of onPropHandlers) {\n            handler(props);\n        }\n    };\n    \n    const getAutoResize = () : ZalgoPromise<{| width : boolean, height : boolean, element : ?HTMLElement |}> => {\n        const { width = false, height = false, element: elementRef = 'body' } = autoResize;\n        return elementReady(elementRef).catch(noop).then(element => {\n            return { width, height, element };\n        });\n    };\n\n    const watchForResize = () : ?ZalgoPromise<void> => {\n        return getAutoResize().then(({ width, height, element }) => {\n            if (!element || (!width && !height) || context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    };\n\n    const updateProps = (newProps : (PropsType<P>)) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => setProps(newProps, parentDomain, true));\n    };\n\n    const init = () => {\n        return ZalgoPromise.try(() => {\n            getGlobal(window).exports = options.exports({\n                getExports: () => exportsPromise\n            });\n\n            checkParentDomain(allowedParentDomains, parentDomain);\n            markWindowKnown(parentComponentWindow);\n            watchForClose();\n\n            return parent.init({ updateProps, close: destroy });\n    \n        }).then(() => {\n            return watchForResize();\n    \n        }).catch(err => {\n            onError(err);\n        });\n    };\n\n    const getProps = () => {\n        if (props) {\n            return props;\n        }\n\n        setProps(getPropsByRef(parentComponentWindow, parentDomain, propsRef), parentDomain);\n        return props;\n    };\n\n    return {\n        init,\n        getProps\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop, type EventEmitterType } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType, isWindowClosed, isSameDomain } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport type { CssDimensionsType } from '../types';\nimport { PROP_SERIALIZATION, PROP_TYPE } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\nexport type Sibling = {|\n    props : mixed,\n    exports : mixed\n|};\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type cspNoncePropType = string;\nexport type uidPropType = string;\nexport type tagPropType = string;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type showPropType = () => ZalgoPromise<void>;\nexport type exportPropType<X> = (X) => ZalgoPromise<void>;\nexport type getSiblingsPropType = (opts? : {| anyParent? : boolean |}) => $ReadOnlyArray<Sibling>;\nexport type hidePropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({| width : ?number, height : ?number |}) => ZalgoPromise<void>;\nexport type getParentPropType = () => CrossDomainWindowType;\nexport type getParentDomainPropType = () => string;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onDestroyPropType = EventHandlerType<void>;\nexport type onResizePropType = EventHandlerType<void>;\nexport type onFocusPropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type ParentPropType<P, X> = {|\n    uid : string,\n    // eslint-disable-next-line no-use-before-define\n    props : PropsType<P>,\n    export : exportPropType<X>\n|};\n\nexport type PropsInputType<P> = {|\n    parent? : ParentPropType<mixed, mixed>,\n    \n    timeout? : timeoutPropType,\n    window? : windowPropType,\n    cspNonce? : ?cspNoncePropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onDestroy? : onDestroyPropType,\n    onResize? : onResizePropType,\n    onFocus? : onFocusPropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>,\n\n    ...P\n|};\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    cspNonce? : ?cspNoncePropType,\n    dimensions : CssDimensionsType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onDestroy : onDestroyPropType,\n    onResize : onResizePropType,\n    onFocus : onFocusPropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>,\n    \n    ...P\n|};\n\ntype onErrorChildPropType = (mixed) => ZalgoPromise<void>;\n\nexport type ChildPropsType<P, X> = {|\n    ...PropsType<P>,\n\n    parent? : ParentPropType<mixed, mixed>,\n    uid : uidPropType,\n    tag : tagPropType,\n    close : closePropType,\n    focus : focusPropType,\n    show : showPropType,\n    hide : hidePropType,\n    export : exportPropType<X>,\n    getParent : getParentPropType,\n    getParentDomain : getParentDomainPropType,\n    resize : resizePropType,\n    onError : onErrorChildPropType,\n    onProps : onPropsPropType<P>,\n    getSiblings : getSiblingsPropType\n|};\n\nexport type PropDefinitionType<T, P, S : $Values<typeof PROP_TYPE>, X> = {|\n    type : S,\n    alias? : string,\n    value? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    default? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    decorate? : ({|\n        value : T,\n        props : PropsType<P>,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => T,\n    childDecorate? : ({|\n        value : ?T,\n        uid : uidPropType,\n        tag : tagPropType,\n        close : closePropType,\n        focus : focusPropType,\n        onError : onErrorPropType,\n        onProps : onPropsPropType<P>,\n        resize : resizePropType,\n        getParentDomain : getParentDomainPropType,\n        getParent : getParentPropType,\n        show : showPropType,\n        hide : hidePropType,\n        export : exportPropType<X>,\n        getSiblings : getSiblingsPropType\n    |}) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({| value : T |}) => (string | ZalgoPromise<string>),\n    bodyParam? : boolean | string | ({| value : T |}) => (string | ZalgoPromise<string>),\n    // eslint-disable-next-line no-undef\n    queryValue? : <R>({| value : T |}) => (ZalgoPromise<R> | R | string),\n    // eslint-disable-next-line no-undef\n    bodyValue? : <R>({| value : T |}) => (ZalgoPromise<R> | R | string),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({| value : T, props : PropsType<P> |}) => void,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>\n|};\n\nexport type BOOLEAN_DEFINITION_TYPE = typeof PROP_TYPE.BOOLEAN;\nexport type STRING_DEFINITION_TYPE = typeof PROP_TYPE.STRING;\nexport type NUMBER_DEFINITION_TYPE = typeof PROP_TYPE.NUMBER;\nexport type FUNCTION_DEFINITION_TYPE = typeof PROP_TYPE.FUNCTION;\nexport type ARRAY_DEFINITION_TYPE = typeof PROP_TYPE.ARRAY;\nexport type OBJECT_DEFINITION_TYPE = typeof PROP_TYPE.OBJECT;\n\nexport type DEFINITION_TYPE =\n        BOOLEAN_DEFINITION_TYPE | STRING_DEFINITION_TYPE | NUMBER_DEFINITION_TYPE |\n        FUNCTION_DEFINITION_TYPE | ARRAY_DEFINITION_TYPE | OBJECT_DEFINITION_TYPE;\n\n\nexport type BooleanPropDefinitionType<T : boolean, P, X> = PropDefinitionType<T, P, BOOLEAN_DEFINITION_TYPE, X>;\nexport type StringPropDefinitionType<T : string, P, X> = PropDefinitionType<T, P, STRING_DEFINITION_TYPE, X>;\nexport type NumberPropDefinitionType<T : number, P, X> = PropDefinitionType<T, P, NUMBER_DEFINITION_TYPE, X>;\nexport type FunctionPropDefinitionType<T : Function, P, X> = PropDefinitionType<T, P, FUNCTION_DEFINITION_TYPE, X>;\nexport type ArrayPropDefinitionType<T : Array<*> | $ReadOnlyArray<*>, P, X> = PropDefinitionType<T, P, ARRAY_DEFINITION_TYPE, X>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P, X> = PropDefinitionType<T, P, OBJECT_DEFINITION_TYPE, X>;\n\nexport type MixedPropDefinitionType<P, X> =\n    BooleanPropDefinitionType<*, P, X> |\n    StringPropDefinitionType<*, P, X> |\n    NumberPropDefinitionType<*, P, X> |\n    FunctionPropDefinitionType<*, P, X> |\n    ObjectPropDefinitionType<*, P, X> |\n    ArrayPropDefinitionType<*, P, X>;\n\nexport type UserPropsDefinitionType<P, X> = {|\n    [string] : MixedPropDefinitionType<P, X>\n|};\n\nexport type BuiltInPropsDefinitionType<P, X> = {|\n    timeout : NumberPropDefinitionType<timeoutPropType, P, X>,\n    window : ObjectPropDefinitionType<windowPropType, P, X>,\n    close : FunctionPropDefinitionType<closePropType, P, X>,\n    focus : FunctionPropDefinitionType<focusPropType, P, X>,\n    resize : FunctionPropDefinitionType<resizePropType, P, X>,\n    uid : StringPropDefinitionType<uidPropType, P, X>,\n    tag : StringPropDefinitionType<tagPropType, P, X>,\n    cspNonce : StringPropDefinitionType<cspNoncePropType, P, X>,\n    getParent : FunctionPropDefinitionType<getParentPropType, P, X>,\n    getParentDomain : FunctionPropDefinitionType<getParentDomainPropType, P, X>,\n    hide : FunctionPropDefinitionType<hidePropType, P, X>,\n    show : FunctionPropDefinitionType<showPropType, P, X>,\n    export : FunctionPropDefinitionType<exportPropType<X>, P, X>,\n    getSiblings : FunctionPropDefinitionType<getSiblingsPropType, P, X>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P, X>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P, X>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P, X>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P, X>,\n    onDestroy : FunctionPropDefinitionType<onDestroyPropType, P, X>,\n    onResize : FunctionPropDefinitionType<onClosePropType, P, X>,\n    onFocus : FunctionPropDefinitionType<onFocusPropType, P, X>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P, X>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P, X>\n|};\n\nexport type PropsDefinitionType<P, X> = {|\n    ...BuiltInPropsDefinitionType<P, X>,\n    [ string ] : MixedPropDefinitionType<P, X>\n|};\n\nconst defaultNoop = () => noop;\n// eslint-disable-next-line flowtype/require-exact-type\nconst decorateOnce = <F : Function>({ value } : { value : F }) : F => once(value);\n\nexport function getBuiltInProps<P, X>() : BuiltInPropsDefinitionType<P, X> {\n    return {\n        window: {\n            type:          PROP_TYPE.OBJECT,\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate:      ({ value }) => {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n\n                if (isWindow(value)) {\n                    // $FlowFixMe\n                    if (isWindowClosed(value)) {\n                        throw new Error(`Window is closed`);\n                    }\n\n                    // $FlowFixMe\n                    if (!isSameDomain(value)) {\n                        throw new Error(`Window is not same domain`);\n                    }\n                }\n            },\n            decorate: ({ value }) => {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        PROP_TYPE.NUMBER,\n            required:    false,\n            sendToChild: false\n        },\n\n        cspNonce: {\n            type:     PROP_TYPE.STRING,\n            required: false\n        },\n\n        onDisplay: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        PROP_TYPE.FUNCTION,\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        PROP_TYPE.FUNCTION,\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onDestroy: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onResize: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onFocus: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        close: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        uid: {\n            type:          PROP_TYPE.STRING,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ uid }) => uid\n        },\n\n        tag: {\n            type:          PROP_TYPE.STRING,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ tag }) => tag\n        },\n\n        getParent: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        getParentDomain: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParentDomain }) => getParentDomain\n        },\n\n        show: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ show }) => show\n        },\n\n        hide: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ hide }) => hide\n        },\n\n        export: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ 'export': xport }) => xport\n        },\n\n        onError: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onProps }) => onProps\n        },\n\n        getSiblings: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getSiblings }) => getSiblings\n        }\n    };\n}\n\ntype PropCallback<P, X, R> =\n    ((string, BooleanPropDefinitionType<boolean, P, X>, boolean) => R) &\n    ((string, StringPropDefinitionType<string, P, X>, string) => R) &\n    ((string, NumberPropDefinitionType<number, P, X>, number) => R) &\n    ((string, FunctionPropDefinitionType<Function, P, X>, Function) => R) &\n    ((string, ArrayPropDefinitionType<$ReadOnlyArray<*> | $ReadOnlyArray<*>, P, X>, $ReadOnlyArray<*> | $ReadOnlyArray<*>) => R) &\n    ((string, ObjectPropDefinitionType<Object, P, X>, Object) => R);\n\nexport function eachProp<P, X>(props : PropsType<P>, propsDef : PropsDefinitionType<P, X>, handler : PropCallback<P, X, void>) {\n    for (const key of Object.keys(props)) {\n        const propDef = propsDef[key];\n        const value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        // $FlowFixMe[incompatible-call]\n        handler(key, propDef, value);\n    }\n}\n\nexport function mapProps<P, X, T>(props : PropsType<P>, propsDef : PropsDefinitionType<P, X>, handler : PropCallback<P, X, T>) : $ReadOnlyArray<T> {\n    const results = [];\n\n    eachProp(props, propsDef, (key, propDef, value) => {\n        // $FlowFixMe[incompatible-call]\n        const result = handler(key, propDef, value);\n        results.push(result);\n    });\n    return results;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined, extend, base64encode } from 'belter/src';\n\nimport { eachProp, mapProps, type PropsInputType, type PropsType, type PropsDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION, METHOD } from '../constants';\n\nimport type { ParentHelpers } from './index';\n\nfunction getDefaultInputProps<P>() : P {\n    // $FlowFixMe[incompatible-type]\n    const defaultInputProps : P = {};\n    return defaultInputProps;\n}\n\nexport function extendProps<P, X>(propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, inputProps : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) {\n\n    inputProps = inputProps || getDefaultInputProps();\n    extend(props, inputProps);\n\n    const propNames = isUpdate ? [] : [ ...Object.keys(propsDef) ];\n\n    for (const key of Object.keys(inputProps)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, event, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = propsDef[key];\n\n        // $FlowFixMe\n        let value = inputProps[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(inputProps[alias])) {\n                value = inputProps[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props, state, close, focus, event, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props, state, close, focus, event, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        props[key] = value;\n    }\n\n    for (const alias of aliases) {\n        delete props[alias];\n    }\n\n    eachProp(props, propsDef, (key, propDef, value) => {\n        if (!propDef) {\n            return;\n        }\n\n        if (__DEBUG__ && isDefined(value) && propDef.validate) {\n            // $FlowFixMe[incompatible-call]\n            // $FlowFixMe[incompatible-exact]\n            propDef.validate({ value, props });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe[incompatible-call]\n            const decoratedValue = propDef.decorate({ value, props, state, close, focus, event, onError });\n            // $FlowFixMe[incompatible-type]\n            props[key] = decoratedValue;\n        }\n    });\n\n    for (const key of Object.keys(propsDef)) {\n        const propDef = propsDef[key];\n        // $FlowFixMe\n        const propVal = props[key];\n        if (propDef.required !== false && !isDefined(propVal)) {\n            throw new Error(`Expected prop \"${ key }\" to be defined`);\n        }\n    }\n}\n\nexport function serializeProps<P, X>(propsDef : PropsDefinitionType<P, X>, props : (PropsType<P>), method : $Values<typeof METHOD>) : ZalgoPromise<{ [string] : string | boolean }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(mapProps(props, propsDef, (key, propDef, value) => {\n        return ZalgoPromise.resolve().then(() => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            const getParam = {\n                [ METHOD.GET ]:  propDef.queryParam,\n                [ METHOD.POST ]: propDef.bodyParam\n            }[method];\n\n            const getValue = {\n                [ METHOD.GET ]:  propDef.queryValue,\n                [ METHOD.POST ]: propDef.bodyValue\n            }[method];\n            \n            if (!getParam) {\n                return;\n            }\n\n            return ZalgoPromise.hash({\n\n                finalParam: ZalgoPromise.try(() => {\n                    if (typeof getParam === 'function') {\n                        // $FlowFixMe[incompatible-call]\n                        return getParam({ value });\n                    } else if (typeof getParam === 'string') {\n                        return getParam;\n                    } else {\n                        return key;\n                    }\n                }),\n    \n                finalValue: ZalgoPromise.try(() => {\n                    if (typeof getValue === 'function' && isDefined(value)) {\n                        // $FlowFixMe[incompatible-call]\n                        // $FlowFixMe[incompatible-return]\n                        return getValue({ value });\n                    } else {\n                        // $FlowFixMe[incompatible-return]\n                        return value;\n                    }\n                })\n\n            }).then(({ finalParam, finalValue }) => {\n\n                let result;\n\n                if (typeof finalValue === 'boolean') {\n                    result = finalValue.toString();\n                } else if (typeof finalValue === 'string') {\n                    result = finalValue.toString();\n                } else if (typeof finalValue === 'object' && finalValue !== null) {\n\n                    if (propDef.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(finalValue);\n                    } else if (propDef.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = base64encode(JSON.stringify(finalValue));\n                    } else if (propDef.serialization === PROP_SERIALIZATION.DOTIFY || !propDef.serialization) {\n                        result = dotify(finalValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof finalValue === 'number') {\n                    result = finalValue.toString();\n                }\n\n                params[finalParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow, type CrossDomainFunctionType, cleanUpWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain, closeWindow, onCloseWindow, isWindowClosed, isSameTopWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extendUrl, appendChild, cleanup, base64encode, isRegex,\n    once, stringifyError, destroyElement, getElementSafe, showElement, hideElement, iframe, memoize, isElementClosed,\n    awaitFrameWindow, popup, normalizeDimension, watchElementForClose, isShadowElement, insertShadowSlot } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT, METHOD,\n    INITIAL_PROPS, WINDOW_REFERENCES, DEFAULT_DIMENSIONS } from '../constants';\nimport { getGlobal, getProxyObject, type ProxyObject } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { CssDimensionsType } from '../types';\nimport type { NormalizedComponentOptionsType, AttributesType } from '../component';\n\nimport { serializeProps, extendProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsType<P>,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : CssDimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P, X> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : CrossDomainFunctionType<[], boolean>,\n    resize : CrossDomainFunctionType<[{| width? : ?number, height? : ?number |}], void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>,\n    export : (X) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, value : string |} |\n    {| type : typeof INITIAL_PROPS.UID, uid : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    version : string,\n    context : $Values<typeof CONTEXT>,\n    parentDomain : string,\n    childDomain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nfunction getDefaultProps<P>() : PropsType<P> {\n    // $FlowFixMe\n    return {};\n}\n\ntype InternalState = {|\n    visible : boolean\n|};\n\ntype Rerender = () => ZalgoPromise<void>;\n\ntype RenderContainerOptions = {|\n    context : $Values<typeof CONTEXT>,\n    proxyFrame : ?ProxyObject<HTMLIFrameElement>,\n    proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>,\n    rerender : Rerender\n|};\n\ntype ResolveInitPromise = () => ZalgoPromise<void>;\ntype RejectInitPromise = (mixed) => ZalgoPromise<void>;\ntype GetProxyContainer = (container : string | HTMLElement) => ZalgoPromise<ProxyObject<HTMLElement>>;\ntype Show = () => ZalgoPromise<void>;\ntype Hide = () => ZalgoPromise<void>;\ntype Close = () => ZalgoPromise<void>;\ntype OnError = (mixed) => ZalgoPromise<void>;\ntype RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, RenderContainerOptions) => ZalgoPromise<?ProxyObject<HTMLElement>>;\ntype SetProxyWin = (ProxyWindow) => ZalgoPromise<void>;\ntype GetProxyWindow = () => ZalgoPromise<ProxyWindow>;\ntype OpenFrame = (context : $Values<typeof CONTEXT>, {| windowName : string |}) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype OpenPrerenderFrame = (context : $Values<typeof CONTEXT>) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype Prerender = (proxyPrerenderWin : ProxyWindow, {| context : $Values<typeof CONTEXT>|}) => ZalgoPromise<void>;\ntype Open = (context : $Values<typeof CONTEXT>, {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) => ZalgoPromise<ProxyWindow>;\ntype OpenPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>;\ntype WatchForUnload = () => ZalgoPromise<void>;\ntype GetInternalState = () => ZalgoPromise<InternalState>;\ntype SetInternalState = (InternalState) => ZalgoPromise<InternalState>;\n\ntype ParentDelegateOverrides<P> = {|\n    props : PropsType<P>,\n    event : EventEmitterType,\n    close : Close,\n    onError : OnError,\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload,\n    getInternalState : GetInternalState,\n    setInternalState : SetInternalState,\n    resolveInitPromise : ResolveInitPromise,\n    rejectInitPromise : RejectInitPromise\n|};\n\ntype DelegateOverrides = {|\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload\n|};\n\ntype RenderOptions = {|\n    target : CrossDomainWindowType,\n    container : string | HTMLElement,\n    context : $Values<typeof CONTEXT>,\n    rerender : Rerender\n|};\n\ntype ParentComponent<P, X> = {|\n    init : () => void,\n    render : (RenderOptions) => ZalgoPromise<void>,\n    getProps : () => PropsType<P>,\n    setProps : (newProps : PropsInputType<P>, isUpdate? : boolean) => void,\n    export : (X) => ZalgoPromise<void>,\n    destroy : (err? : mixed) => ZalgoPromise<void>,\n    getHelpers : () => ParentHelpers<P>,\n    getDelegateOverrides : () => ZalgoPromise<DelegateOverrides>,\n    getExports : () => X\n|};\n\nconst getDefaultOverrides = <P>() : ParentDelegateOverrides<P> => {\n    // $FlowFixMe\n    return {};\n};\n\ntype ParentOptions<P, X, C> = {|\n    uid : string,\n    options : NormalizedComponentOptionsType<P, X, C>,\n    overrides? : ParentDelegateOverrides<P>,\n    parentWin? : CrossDomainWindowType\n|};\n\nexport function parentComponent<P, X, C>({ uid, options, overrides = getDefaultOverrides(), parentWin = window } : ParentOptions<P, X, C>) : ParentComponent<P, X> {\n    const { propsDef, containerTemplate, prerenderTemplate, tag, name, attributes, dimensions, autoResize, url, domain: domainMatch, validate, exports: xports } = options;\n\n    const initPromise = new ZalgoPromise();\n    const handledErrors = [];\n    const clean = cleanup();\n    const state = {};\n    let internalState = {\n        visible: true\n    };\n    const event = overrides.event ? overrides.event : eventEmitter();\n    const props : PropsType<P> = overrides.props ? overrides.props : getDefaultProps();\n\n    let currentProxyWin : ?ProxyWindow;\n    let currentProxyContainer : ?ProxyObject<HTMLElement>;\n    let childComponent : ?ChildExportsType<P>;\n\n    const onErrorOverride : ?OnError = overrides.onError;\n    let getProxyContainerOverride : ?GetProxyContainer = overrides.getProxyContainer;\n    let showOverride : ?Show = overrides.show;\n    let hideOverride : ?Hide = overrides.hide;\n    const closeOverride : ?Close = overrides.close;\n    let renderContainerOverride : ?RenderContainer = overrides.renderContainer;\n    let getProxyWindowOverride : ?GetProxyWindow = overrides.getProxyWindow;\n    let setProxyWinOverride : ?SetProxyWin = overrides.setProxyWin;\n    let openFrameOverride : ?OpenFrame = overrides.openFrame;\n    let openPrerenderFrameOverride : ?OpenPrerenderFrame = overrides.openPrerenderFrame;\n    let prerenderOverride : ?Prerender = overrides.prerender;\n    let openOverride : ?Open = overrides.open;\n    let openPrerenderOverride : ?OpenPrerender = overrides.openPrerender;\n    let watchForUnloadOverride : ?WatchForUnload = overrides.watchForUnload;\n    const getInternalStateOverride : ?GetInternalState = overrides.getInternalState;\n    const setInternalStateOverride : ?SetInternalState = overrides.setInternalState;\n\n    const getDimensions = () : CssDimensionsType => {\n        if (typeof dimensions === 'function') {\n            return dimensions({ props });\n        }\n        return dimensions;\n    };\n\n    const resolveInitPromise = () => {\n        return ZalgoPromise.try(() => {\n            if (overrides.resolveInitPromise) {\n                return overrides.resolveInitPromise();\n            }\n\n            return initPromise.resolve();\n        });\n    };\n\n    const rejectInitPromise = (err : mixed) => {\n        return ZalgoPromise.try(() => {\n            if (overrides.rejectInitPromise) {\n                return overrides.rejectInitPromise(err);\n            }\n\n            return initPromise.reject(err);\n        });\n    };\n\n    const getPropsForChild = (domain : string | RegExp) : ZalgoPromise<PropsType<P>> => {\n        const result = {};\n\n        for (const key of Object.keys(props)) {\n            const prop = propsDef[key];\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n            \n            result[key] = props[key];\n        }\n\n        // $FlowFixMe\n        return ZalgoPromise.hash(result);\n    };\n\n    const setupEvents = () => {\n        event.on(EVENT.RENDER,   () => props.onRender());\n        event.on(EVENT.DISPLAY,  () => props.onDisplay());\n        event.on(EVENT.RENDERED, () => props.onRendered());\n        event.on(EVENT.CLOSE,    () => props.onClose());\n        event.on(EVENT.DESTROY,  () => props.onDestroy());\n        event.on(EVENT.RESIZE,   () => props.onResize());\n        event.on(EVENT.FOCUS,    () => props.onFocus());\n        event.on(EVENT.PROPS,    (newProps) => props.onProps(newProps));\n        event.on(EVENT.ERROR, err => {\n            if (props && props.onError) {\n                return props.onError(err);\n            } else {\n                return rejectInitPromise(err).then(() => {\n                    setTimeout(() => {\n                        throw err;\n                    }, 1);\n                });\n            }\n        });\n\n        clean.register(event.reset);\n    };\n\n    const getInternalState = () => {\n        return ZalgoPromise.try(() => {\n            if (getInternalStateOverride) {\n                return getInternalStateOverride();\n            }\n\n            return internalState;\n        });\n    };\n\n    const setInternalState = (newInternalState)  => {\n        return ZalgoPromise.try(() => {\n            if (setInternalStateOverride) {\n                return setInternalStateOverride(newInternalState);\n            }\n\n            internalState = { ...internalState, ...newInternalState };\n            return internalState;\n        });\n    };\n\n    const getProxyWindow = () : ZalgoPromise<ProxyWindow> => {\n        if (getProxyWindowOverride) {\n            return getProxyWindowOverride();\n        }\n\n        return ZalgoPromise.try(() => {\n            const windowProp = props.window;\n\n            if (windowProp) {\n                const proxyWin = toProxyWindow(windowProp);\n                clean.register(() => windowProp.close());\n                return proxyWin;\n            }\n\n            return new ProxyWindow({ send });\n        });\n    };\n\n    const getProxyContainer : GetProxyContainer = (container : string | HTMLElement) : ZalgoPromise<ProxyObject<HTMLElement>> => {\n        if (getProxyContainerOverride) {\n            return getProxyContainerOverride(container);\n        }\n\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            if (isShadowElement(containerElement)) {\n                containerElement = insertShadowSlot(containerElement);\n            }\n\n            return getProxyObject(containerElement);\n        });\n    };\n\n    const getPropsRef = (proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp) : ZalgoPromise<PropRef> => {\n        return getPropsForChild(domain).then(childProps => {\n            const value = serializeMessage(proxyWin, domain, childProps);\n\n            const propRef = (childDomain === getDomain())\n                ? { type: INITIAL_PROPS.UID, uid }\n                : { type: INITIAL_PROPS.RAW, value };\n\n            if (propRef.type === INITIAL_PROPS.UID) {\n                const global = getGlobal(window);\n                global.props = global.props || {};\n                global.props[uid] = value;\n\n                clean.register(() => {\n                    delete global.props[uid];\n                });\n            }\n\n            return propRef;\n        });\n    };\n\n    const setProxyWin = (proxyWin : ProxyWindow) : ZalgoPromise<void> => {\n        if (setProxyWinOverride) {\n            return setProxyWinOverride(proxyWin);\n        }\n\n        return ZalgoPromise.try(() => {\n            currentProxyWin = proxyWin;\n        });\n    };\n\n    const show = () : ZalgoPromise<void> => {\n        if (showOverride) {\n            return showOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: true }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(showElement) : null\n        }).then(noop);\n    };\n\n    const hide = () : ZalgoPromise<void> => {\n        if (hideOverride) {\n            return hideOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: false }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(hideElement) : null\n        }).then(noop);\n    };\n\n    const getUrl = () : string => {\n        if (typeof url === 'function') {\n            return url({ props });\n        }\n\n        return url;\n    };\n\n    const getAttributes = () : AttributesType => {\n        if (typeof attributes === 'function') {\n            return attributes({ props });\n        }\n\n        return attributes;\n    };\n\n    const buildQuery = () : ZalgoPromise<{| [string] : string | boolean |}> => {\n        return serializeProps(propsDef, props, METHOD.GET);\n    };\n\n    const buildBody = () : ZalgoPromise<{| [string] : string | boolean |}> => {\n        return serializeProps(propsDef, props, METHOD.POST);\n    };\n\n    const buildUrl = () : ZalgoPromise<string> => {\n        return buildQuery().then(query => {\n            return extendUrl(normalizeMockUrl(getUrl()), { query });\n        });\n    };\n\n    const getChildDomain = () : string => {\n        if (domainMatch && typeof domainMatch === 'string') {\n            return domainMatch;\n        }\n\n        return getDomainFromUrl(getUrl());\n    };\n\n    const getDomainMatcher = () : string | RegExp => {\n        if (domainMatch && isRegex(domainMatch)) {\n            return domainMatch;\n        }\n\n        return getChildDomain();\n    };\n\n    const openFrame = (context : $Values<typeof CONTEXT>, { windowName } : {| windowName : string |}) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openFrameOverride) {\n            return openFrameOverride(context, { windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n\n                // $FlowFixMe\n                const attrs = {\n                    name:  windowName,\n                    title: name,\n                    ...getAttributes().iframe\n                };\n\n                return getProxyObject(iframe({ attributes: attrs }));\n            }\n        });\n    };\n\n    const openPrerenderFrame = (context : $Values<typeof CONTEXT>) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openPrerenderFrameOverride) {\n            return openPrerenderFrameOverride(context);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                // $FlowFixMe\n                const attrs = {\n                    name:  `__${ ZOID }_prerender_frame__${ name }_${ uniqueID() }__`,\n                    title: `prerender__${ name }`,\n                    ...getAttributes().iframe\n                };\n                return getProxyObject(iframe({\n                    attributes: attrs\n                }));\n            }\n        });\n    };\n    \n    const openPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> => {\n        if (openPrerenderOverride) {\n            return openPrerenderOverride(context, proxyWin, proxyPrerenderFrame);\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyPrerenderFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n                \n                return proxyPrerenderFrame.get().then(prerenderFrame => {\n                    clean.register(() => destroyElement(prerenderFrame));\n        \n                    return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                        return assertSameDomain(prerenderFrameWindow);\n                    }).then(win => {\n                        return toProxyWindow(win);\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                return proxyWin;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n        });\n    };\n\n    const focus = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (currentProxyWin) {\n                return ZalgoPromise.all([\n                    event.trigger(EVENT.FOCUS),\n                    currentProxyWin.focus()\n                ]).then(noop);\n            }\n        });\n    };\n\n    const getWindowRef = (target : CrossDomainWindowType, domain : string, context : $Values<typeof CONTEXT>) : WindowRef => {\n        \n        if (domain === getDomain(window)) {\n            const global = getGlobal(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    };\n\n    const runTimeout = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const timeout = props.timeout;\n\n            if (timeout) {\n                return initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    };\n\n    const initChild = (childExports : ChildExportsType<P>) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            childComponent = childExports;\n            resolveInitPromise();\n            clean.register(() => childExports.close.fireAndForget().catch(noop));\n        });\n    };\n\n    const resize = ({ width, height } : {| width? : ?number, height? : ?number |}) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            event.trigger(EVENT.RESIZE, { width, height });\n        });\n    };\n\n    const destroy = (err : mixed) : ZalgoPromise<void> => {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            return event.trigger(EVENT.DESTROY);\n        }).catch(noop).then(() => {\n            return clean.all(err);\n        }).then(() => {\n            initPromise.asyncReject(err || new Error('Component destroyed'));\n        });\n    };\n\n    const close = memoize((err? : mixed) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n\n            if (closeOverride) {\n                // $FlowFixMe\n                const source = closeOverride.__source__;\n\n                if (isWindowClosed(source)) {\n                    return;\n                }\n\n                return closeOverride();\n            }\n\n            return ZalgoPromise.try(() => {\n                return event.trigger(EVENT.CLOSE);\n            }).then(() => {\n                return destroy(err || new Error(`Component closed`));\n            });\n        });\n    });\n\n    const open = (context : $Values<typeof CONTEXT>, { proxyWin, proxyFrame, windowName } : {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) : ZalgoPromise<ProxyWindow> => {\n        if (openOverride) {\n            return openOverride(context,  { proxyWin, proxyFrame, windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n        \n                return proxyFrame.get().then(frame => {\n                    return awaitFrameWindow(frame).then(win => {\n                        clean.register(() => destroyElement(frame));\n                        clean.register(() => cleanUpWindow(win));\n                        return win;\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                let { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = getDimensions();\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                // $FlowFixMe\n                const attrs = {\n                    name: windowName,\n                    width,\n                    height,\n                    ...getAttributes().popup\n                };\n    \n                const win = popup('', attrs);\n    \n                clean.register(() => closeWindow(win));\n                clean.register(() => cleanUpWindow(win));\n\n                return win;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n\n        }).then(win => {\n            proxyWin.setWindow(win, { send });\n            return proxyWin.setName(windowName).then(() => {\n                return proxyWin;\n            });\n        });\n    };\n\n    const watchForUnload = () => {\n        return ZalgoPromise.try(() => {\n            const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n                destroy(new Error(`Window navigated away`));\n            }));\n    \n            const closeParentWindowListener = onCloseWindow(parentWin, destroy, 3000);\n            clean.register(closeParentWindowListener.cancel);\n            clean.register(unloadWindowListener.cancel);\n\n            if (watchForUnloadOverride) {\n                return watchForUnloadOverride();\n            }\n        });\n    };\n\n    const watchForClose = (proxyWin : ProxyWindow, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> => {\n        let cancelled = false;\n\n        clean.register(() => {\n            cancelled = true;\n        });\n\n        return ZalgoPromise.delay(2000).then(() => {\n            return proxyWin.isClosed();\n        }).then(isClosed => {\n            if (!cancelled) {\n                if (isClosed) {\n                    return close(new Error(`Detected ${ context } close`));\n                } else {\n                    return watchForClose(proxyWin, context);\n                }\n            }\n        });\n    };\n\n    const checkWindowClose = (proxyWin : ProxyWindow) : ZalgoPromise<boolean> => {\n        let closed = false;\n        \n        return proxyWin.isClosed().then(isClosed => {\n            if (isClosed) {\n                closed = true;\n                return close(new Error(`Detected component window close`));\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => proxyWin.isClosed())\n                .then(secondIsClosed => {\n                    if (secondIsClosed) {\n                        closed = true;\n                        return close(new Error(`Detected component window close`));\n                    }\n                });\n        }).then(() => {\n            return closed;\n        });\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        if (onErrorOverride) {\n            return onErrorOverride(err);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (handledErrors.indexOf(err) !== -1) {\n                return;\n            }\n\n            handledErrors.push(err);\n            initPromise.asyncReject(err);\n\n            return event.trigger(EVENT.ERROR, err);\n        });\n    };\n\n    const exportsPromise : ZalgoPromise<X> = new ZalgoPromise();\n\n    const getExports = () : X => {\n        return xports({\n            getExports: () => exportsPromise\n        });\n    };\n\n    const xport = (actualExports : X) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            exportsPromise.resolve(actualExports);\n        });\n    };\n\n    initChild.onError = onError;\n\n    const buildParentExports = (win : ProxyWindow) : ParentExportsType<P, X> => {\n        const checkClose = () => checkWindowClose(win);\n        return { init: initChild, close, checkClose, resize, onError, show, hide, export: xport };\n    };\n\n    const buildChildPayload = ({ proxyWin, childDomain, domain, target = window, context } : {| proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>|} = {}) : ZalgoPromise<ChildPayload> => {\n        return getPropsRef(proxyWin, childDomain, domain).then(propsRef => {\n            return {\n                uid,\n                context,\n                tag,\n                version:      __ZOID__.__VERSION__,\n                childDomain,\n                parentDomain: getDomain(window),\n                parent:       getWindowRef(target, childDomain, context),\n                props:        propsRef,\n                exports:      serializeMessage(proxyWin, domain, buildParentExports(proxyWin))\n            };\n        });\n    };\n\n    const buildWindowName = ({ proxyWin, childDomain, domain, target, context } : {| proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>|}) : ZalgoPromise<string> => {\n        return buildChildPayload({ proxyWin, childDomain, domain, target, context }).then(childPayload => {\n            return `__${ ZOID }__${ name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n        });\n    };\n\n    const renderTemplate = (renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, container, doc, frame, prerenderFrame } : {| context : $Values<typeof CONTEXT>, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement |}) : ?HTMLElement => {\n        \n        return renderer({\n            uid, container, context, doc, frame, prerenderFrame,\n            focus, close, state, props, tag, dimensions: getDimensions(), event\n        });\n    };\n\n    const prerender = (proxyPrerenderWin : ProxyWindow, { context } : {| context : $Values<typeof CONTEXT>|}) : ZalgoPromise<void> => {\n        if (prerenderOverride) {\n            return prerenderOverride(proxyPrerenderWin, { context });\n        }\n                                                                                                                                                                                                                                    \n        return ZalgoPromise.try(() => {\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = renderTemplate(prerenderTemplate, { context, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = autoResize;\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                const prerenderResizeListener = onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n\n                event.on(EVENT.RENDERED, prerenderResizeListener.cancel);\n            }\n        });\n    };\n    const renderContainer : RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, rerender } : RenderContainerOptions) : ZalgoPromise<?ProxyObject<HTMLElement>> => {\n\n        if (renderContainerOverride) {\n            return renderContainerOverride(proxyContainer, { proxyFrame, proxyPrerenderFrame, context, rerender });\n        }\n\n        return ZalgoPromise.hash({\n            container:      proxyContainer.get(),\n            // $FlowFixMe\n            frame:          proxyFrame ? proxyFrame.get() : null,\n            // $FlowFixMe\n            prerenderFrame: proxyPrerenderFrame ? proxyPrerenderFrame.get() : null,\n            internalState:  getInternalState()\n        }).then(({ container, frame, prerenderFrame, internalState: { visible } }) => {\n            const innerContainer = renderTemplate(containerTemplate, { context, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                if (!visible) {\n                    hideElement(innerContainer);\n                }\n                appendChild(container, innerContainer);\n                const containerWatcher = watchElementForClose(innerContainer, () => {\n                    const removeError = new Error(`Detected container element removed from DOM`);\n                    return ZalgoPromise.delay(1).then(() => {\n                        if (isElementClosed(innerContainer)) {\n                            close(removeError);\n                        } else {\n                            clean.all(removeError);\n                            return rerender().then(resolveInitPromise, rejectInitPromise);\n                        }\n                    });\n                });\n                \n                clean.register(() => containerWatcher.cancel());\n                clean.register(() => destroyElement(innerContainer));\n                currentProxyContainer = getProxyObject(innerContainer);\n                return currentProxyContainer;\n            }\n        });\n    };\n\n    const getBridgeUrl = () : ?string => {\n        if (typeof options.bridgeUrl === 'function') {\n            return options.bridgeUrl({ props });\n        }\n\n        return options.bridgeUrl;\n    };\n\n    const openBridge = (proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> => {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    };\n\n    const getHelpers = () : ParentHelpers<P> => {\n        return {\n            state, event, close, focus, resize,\n            // eslint-disable-next-line no-use-before-define\n            onError, updateProps, show, hide\n        };\n    };\n\n    const getProps = () => props;\n\n    const setProps = (newProps : PropsInputType<P>, isUpdate? : boolean = false) => {\n        if (__DEBUG__ && validate) {\n            validate({ props: newProps });\n        }\n\n        const helpers = getHelpers();\n        extendProps(propsDef, props, newProps, helpers, isUpdate);\n    };\n\n    const updateProps = (newProps : PropsInputType<P>) : ZalgoPromise<void> => {\n        setProps(newProps, true);\n\n        return initPromise.then(() => {\n            const child = childComponent;\n            const proxyWin = currentProxyWin;\n            \n            if (!child || !proxyWin) {\n                return;\n            }\n\n            return getPropsForChild(getDomainMatcher()).then(childProps => {\n                return child.updateProps(childProps).catch(err => {\n                    return checkWindowClose(proxyWin).then(closed => {\n                        if (!closed) {\n                            throw err;\n                        }\n                    });\n                });\n            });\n        });\n    };\n\n    const delegate = (context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) : ZalgoPromise<DelegateOverrides> => {\n        const delegateProps = {};\n        for (const propName of Object.keys(props)) {\n            const propDef = propsDef[propName];\n            if (propDef && propDef.allowDelegate) {\n                delegateProps[propName] = props[propName];\n            }\n        }\n\n        const childOverridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ name }`, {\n            uid,\n            overrides: {\n                props: delegateProps, event, close, onError, getInternalState,\n                setInternalState, resolveInitPromise, rejectInitPromise\n            }\n        }).then(({ data: { parent } }) => {\n            const parentComp : ParentComponent<P, X> = parent;\n\n            clean.register(err => {\n                if (!isWindowClosed(target)) {\n                    return parentComp.destroy(err);\n                }\n            });\n            return parentComp.getDelegateOverrides();\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        getProxyContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyContainer(...args));\n        renderContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.renderContainer(...args));\n        showOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.show(...args));\n        hideOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.hide(...args));\n        watchForUnloadOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.watchForUnload(...args));\n\n        if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n            getProxyWindowOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyWindow(...args));\n            openFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openFrame(...args));\n            openPrerenderFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerenderFrame(...args));\n            prerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.prerender(...args));\n            openOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.open(...args));\n            openPrerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerender(...args));\n        } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n            setProxyWinOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.setProxyWin(...args));\n        }\n\n        return childOverridesPromise;\n    };\n\n    const getDelegateOverrides = () : ZalgoPromise<DelegateOverrides> => {\n        return ZalgoPromise.try(() => {\n            return {\n                getProxyContainer, show, hide, renderContainer, getProxyWindow, watchForUnload,\n                openFrame, openPrerenderFrame, prerender, open, openPrerender, setProxyWin\n            };\n        });\n    };\n\n    const checkAllowRender = (target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) => {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    };\n\n    const init = () => {\n        setupEvents();\n    };\n\n    const render = ({ target, container, context, rerender } : RenderOptions) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const domain = getDomainMatcher();\n            const childDomain = getChildDomain();\n            \n            checkAllowRender(target, domain, container);\n\n            const delegatePromise = ZalgoPromise.try(() => {\n                if (target !== window) {\n                    return delegate(context, target);\n                }\n            });\n\n            const windowProp = props.window;\n\n            const watchForUnloadPromise = watchForUnload();\n            \n            const buildUrlPromise = buildUrl();\n            const buildBodyPromise = buildBody();\n            const onRenderPromise = event.trigger(EVENT.RENDER);\n\n            const getProxyContainerPromise = getProxyContainer(container);\n            const getProxyWindowPromise = getProxyWindow();\n\n            const buildWindowNamePromise = getProxyWindowPromise.then(proxyWin => {\n                return buildWindowName({ proxyWin, childDomain, domain, target, context });\n            });\n\n            const openFramePromise = buildWindowNamePromise.then(windowName => openFrame(context, { windowName }));\n            const openPrerenderFramePromise = openPrerenderFrame(context);\n\n            const renderContainerPromise = ZalgoPromise.hash({ proxyContainer: getProxyContainerPromise, proxyFrame: openFramePromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyContainer, proxyFrame, proxyPrerenderFrame }) => {\n                return renderContainer(proxyContainer, { context, proxyFrame, proxyPrerenderFrame, rerender });\n            }).then(proxyContainer => {\n                return proxyContainer;\n            });\n\n            const openPromise = ZalgoPromise.hash({ windowName: buildWindowNamePromise, proxyFrame: openFramePromise, proxyWin: getProxyWindowPromise }).then(({ windowName, proxyWin, proxyFrame }) => {\n                return windowProp\n                    ? proxyWin\n                    : open(context, { windowName, proxyWin, proxyFrame });\n            });\n\n            const openPrerenderPromise = ZalgoPromise.hash({ proxyWin: openPromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyWin, proxyPrerenderFrame }) => {\n                return openPrerender(context, proxyWin, proxyPrerenderFrame);\n            });\n\n            const setStatePromise = openPromise.then(proxyWin => {\n                currentProxyWin = proxyWin;\n                return setProxyWin(proxyWin);\n            });\n            \n            const prerenderPromise = ZalgoPromise.hash({ proxyPrerenderWin: openPrerenderPromise, state: setStatePromise }).then(({ proxyPrerenderWin }) => {\n                return prerender(proxyPrerenderWin, { context });\n            });\n\n            const setWindowNamePromise =  ZalgoPromise.hash({ proxyWin: openPromise, windowName: buildWindowNamePromise }).then(({ proxyWin, windowName }) => {\n                if (windowProp) {\n                    return proxyWin.setName(windowName);\n                }\n            });\n\n            const getMethodPromise = ZalgoPromise.hash({ body: buildBodyPromise }).then(({ body }) => {\n                if (options.method) {\n                    return options.method;\n                }\n\n                if (Object.keys(body).length) {\n                    return METHOD.POST;\n                }\n\n                return METHOD.GET;\n            });\n\n\n            const loadUrlPromise = ZalgoPromise.hash({ proxyWin: openPromise, windowUrl: buildUrlPromise, body: buildBodyPromise, method: getMethodPromise, windowName: setWindowNamePromise, prerender: prerenderPromise }).then(({ proxyWin, windowUrl, body, method }) => {\n                return proxyWin.setLocation(windowUrl, { method, body });\n            });\n\n            const watchForClosePromise = openPromise.then(proxyWin => {\n                watchForClose(proxyWin, context);\n            });\n\n            const onDisplayPromise = ZalgoPromise.hash({ container: renderContainerPromise, prerender: prerenderPromise }).then(() => {\n                return event.trigger(EVENT.DISPLAY);\n            });\n\n            const openBridgePromise = openPromise.then(proxyWin => {\n                return openBridge(proxyWin, childDomain, context);\n            });\n\n            const runTimeoutPromise = loadUrlPromise.then(() => {\n                return runTimeout();\n            });\n\n            const onRenderedPromise = initPromise.then(() => {\n                return event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash({\n                initPromise, buildUrlPromise, onRenderPromise, getProxyContainerPromise, openFramePromise, openPrerenderFramePromise, renderContainerPromise, openPromise,\n                openPrerenderPromise, setStatePromise, prerenderPromise, loadUrlPromise, buildWindowNamePromise, setWindowNamePromise, watchForClosePromise, onDisplayPromise,\n                openBridgePromise, runTimeoutPromise, onRenderedPromise, delegatePromise, watchForUnloadPromise\n            });\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                onError(err),\n                destroy(err)\n            ]).then(() => {\n                throw err;\n            }, () => {\n                throw err;\n            });\n        }).then(noop);\n    };\n\n    return {\n        init,\n        render,\n        destroy,\n        getProps,\n        setProps,\n        export: xport,\n        getHelpers,\n        getDelegateOverrides,\n        getExports\n    };\n}\n","/* @flow */\n/* eslint react/no-deprecated: off, react/no-find-dom-node: off, react/display-name: off, react/no-did-mount-set-state: off, react/destructuring-assignment: off, react/prop-types: off */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\n// eslint-disable-next-line flowtype/require-exact-type\ndeclare class ReactClassType {}\n\n// eslint-disable-next-line flowtype/require-exact-type\ndeclare class __ReactComponent {}\n\ntype ReactElementType = {|\n\n|};\n\ntype ReactType = {|\n    Component : __ReactComponent,\n    createClass : ({| render : () => ReactElementType, componentDidMount : () => void, componentDidUpdate : () => void |}) => (typeof ReactClassType),\n    createElement : (string, ?{ [string] : mixed }, ...children : $ReadOnlyArray<ReactElementType>) => ReactElementType\n|};\n\ntype ReactDomType = {|\n    findDOMNode : (typeof ReactClassType) => HTMLElement\n|};\n\ntype ReactLibraryType = {|\n    React : ReactType,\n    ReactDOM : ReactDomType\n|};\n\nexport const react : ComponentDriverType<*, ReactLibraryType, typeof ReactClassType, *, *> = {\n\n    register: (tag, propsDef, init, { React, ReactDOM }) => {\n\n        // $FlowFixMe\n        return class extends React.Component {\n            render() : ReactElementType {\n                return React.createElement('div', null);\n            }\n\n            componentDidMount() {\n                // $FlowFixMe\n                const el = ReactDOM.findDOMNode(this);\n                const parent = init(extend({}, this.props));\n                parent.render(el, CONTEXT.IFRAME);\n                this.setState({ parent });\n            }\n\n            componentDidUpdate() {\n\n                if (this.state && this.state.parent) {\n                    this.state.parent.updateProps(extend({}, this.props)).catch(noop);\n                }\n            }\n        };\n    }\n};\n","/* @flow */\n\nimport { noop, dasherizeToCamel } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype VueComponent = {|\n    render : (Function) => Element,\n    inheritAttrs : boolean,\n    mounted : () => void,\n    watch : {|\n        $attrs : {|\n            deep : boolean,\n            handler : () => void\n        |}\n    |}\n|};\n\ntype RegisteredVueComponent = {|\n    \n|};\n\ntype VueType = {|\n    component : (string, VueComponent) => RegisteredVueComponent\n|};\n\nfunction propsToCamelCase(props : Object) : Object {\n    return Object.keys(props).reduce((acc, key) => {\n        const value = props[key];\n        // In vue `style` is a reserved prop name\n        if (key === 'style-object' || key === 'styleObject') {\n            acc.style = value;\n            // To keep zoid as generic as possible, passing in the original prop name as well\n            acc.styleObject = value;\n        } else if (key.includes('-')) {\n            acc[dasherizeToCamel(key)] = value;\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, {});\n}\n\nexport const vue : ComponentDriverType<*, VueType, RegisteredVueComponent, *, *> = {\n\n    register: (tag, propsDef, init, Vue) => {\n\n        return Vue.component(tag, {\n            render(createElement) : Element {\n                return createElement('div');\n            },\n\n            inheritAttrs: false,\n\n            mounted() {\n                // $FlowFixMe[object-this-reference]\n                const el = this.$el;\n                // $FlowFixMe[object-this-reference]\n                this.parent = init({ ...propsToCamelCase(this.$attrs) });\n                // $FlowFixMe[object-this-reference]\n                this.parent.render(el, CONTEXT.IFRAME);\n            },\n\n            watch: {\n                $attrs: {\n                    handler: function handler() {\n                        if (this.parent && this.$attrs) {\n                            this.parent.updateProps({ ...this.$attrs }).catch(noop);\n                        }\n                    },\n                    deep: true\n                }\n            }\n        });\n    }\n};\n","/* @flow */\nimport { dasherizeToCamel, noop } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\nfunction propsToCamelCase(props : Object) : Object {\n    return Object.keys(props).reduce((acc, key) => {\n        const value = props[key];\n        // In vue `style` is a reserved prop name\n        if (key === 'style-object' || key === 'styleObject') {\n            acc.style = value;\n            // To keep zoid as generic as possible, passing in the original prop name as well\n            acc.styleObject = value;\n        } else if (key.includes('-')) {\n            acc[dasherizeToCamel(key)] = value;\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, {});\n}\n\nexport const vue3 : ComponentDriverType<*, *, *, *, *> = {\n    register: (tag, propsDef, init) => {\n        return {\n            template: `<div></div>`,\n\n            inheritAttrs: false,\n\n            mounted() {\n                // $FlowFixMe[object-this-reference]\n                const el = this.$el;\n                // $FlowFixMe[object-this-reference]\n                this.parent = init({ ...propsToCamelCase(this.$attrs) });\n                // $FlowFixMe[object-this-reference]\n                this.parent.render(el, CONTEXT.IFRAME);\n            },\n\n            watch: {\n                $attrs: {\n                    handler: function handler() {\n                        if (this.parent && this.$attrs) {\n                            this.parent.updateProps({ ...this.$attrs }).catch(noop);\n                        }\n                    },\n                    deep: true\n                }\n            }\n        };\n\n    }\n};\n","/* @flow */\n\nimport { dasherizeToCamel, replaceObject, noop } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype AngularModule = {|\n    directive : (string, () => {|\n        scope : { [string] : '=' | '@' },\n        restrict : string,\n        controller : $ReadOnlyArray<string | Function>\n    |}) => AngularModule\n|};\n\ntype Angular = {|\n    module : (string, $ReadOnlyArray<string>) => AngularModule\n|};\n\nexport const angular : ComponentDriverType<*, Angular, AngularModule, *, *> = {\n\n    register: (tag, propsDef, init, ng) => {\n\n        const module = ng.module(tag, []).directive(dasherizeToCamel(tag), () => {\n\n            const scope = {};\n\n            for (const key of Object.keys(propsDef)) {\n                scope[key] = '=';\n            }\n\n            scope.props = '=';\n\n            return {\n                scope,\n\n                restrict: 'E',\n\n                controller: [ '$scope', '$element', ($scope, $element) => {\n                    function safeApply() {\n                        if ($scope.$root.$$phase !== '$apply' && $scope.$root.$$phase !== '$digest') {\n                            try {\n                                $scope.$apply();\n                            } catch (err) {\n                                // pass\n                            }\n                        }\n                    }\n\n                    const getProps = () => {\n                        return replaceObject($scope.props, item => {\n                            if (typeof item === 'function') {\n                                return function angularWrapped() : mixed {\n                                    // $FlowFixMe\n                                    const result = item.apply(this, arguments);\n                                    safeApply();\n                                    return result;\n                                };\n                            }\n                            return item;\n                        });\n                    };\n\n                    const instance = init(getProps());\n                    instance.render($element[0], CONTEXT.IFRAME);\n\n                    $scope.$watch(() => {\n                        instance.updateProps(getProps()).catch(noop);\n                    });\n                } ]\n            };\n        });\n\n        return module;\n    }\n};\n","/* @flow */\n/* eslint new-cap: 0 */\n\nimport { replaceObject } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype Angular2Injection = {||};\n\ntype Angular2Component = {||};\n\ntype Angular2Module = {| annotations : Object, name : string |};\n\ntype Angular2 = {|\n    Component : ({| selector : string, template : string, inputs : $ReadOnlyArray<string> |}) => {|\n        Class : ({| constructor : $ReadOnlyArray<Angular2Injection | Function>, ngOnInit : () => void, ngDoCheck : () => void |}) => Angular2Component\n    |},\n    NgModule : ({| declarations : $ReadOnlyArray<*>, exports : $ReadOnlyArray<*> |}) => {|\n        Class : ({| constructor : () => void |}) => Angular2Module\n    |},\n    ElementRef : Angular2Injection,\n    NgZone : Angular2Injection,\n    Inject : Function\n|};\n\nconst equals = (obj1, obj2) => {\n    const checked = {};\n\n    for (const key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            checked[key] = true;\n\n            if (obj1[key] !== obj2[key]) {\n                return false;\n            }\n        }\n    }\n\n    for (const key in obj2) {\n        if (!checked[key]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport const angular2 : ComponentDriverType<*, Angular2, Angular2Module, *, *> = {\n\n    register: (tag, propsDef, init, { Component : AngularComponent, NgModule, ElementRef, NgZone, Inject }) => {\n        class ComponentInstance {\n            elementRef : Object;\n            internalProps : Object;\n            parent : Object;\n            props : Object;\n            zone : Object;\n            _props : Object;\n\n            static annotations : $ReadOnlyArray<*>;\n            static parameters : $ReadOnlyArray<*>;\n\n            constructor (elementRef, zone) {\n                this._props = {};\n                this.elementRef = elementRef;\n                this.zone = zone;\n            }\n\n            getProps () : Object {\n                return replaceObject({ ...this.internalProps, ...this.props }, item => {\n                    if (typeof item === 'function') {\n                        const { zone } = this;\n                        return function angular2Wrapped() : void {\n                            // $FlowFixMe\n                            return zone.run(() => item.apply(this, arguments));\n                        };\n                    }\n                    return item;\n                });\n            }\n\n            ngOnInit() {\n                const targetElement = this.elementRef.nativeElement;\n                this.parent = init(this.getProps());\n                this.parent.render(targetElement, CONTEXT.IFRAME);\n            }\n\n            ngDoCheck() {\n                if (this.parent && !equals(this._props, this.props)) {\n                    this._props = { ...this.props };\n                    this.parent.updateProps(this.getProps());\n                }\n            }\n        }\n\n        ComponentInstance.parameters = [\n            [ new Inject(ElementRef) ],\n            [ new Inject(NgZone) ]\n        ];\n\n        ComponentInstance.annotations = [\n            new AngularComponent({\n                selector: tag,\n                template: `<div></div>`,\n                inputs:   [ 'props' ]\n            })\n        ];\n\n        class ModuleInstance {\n            static annotations : $ReadOnlyArray<*>;\n        }\n\n        ModuleInstance.annotations = [\n            new NgModule({\n                declarations: [ ComponentInstance ],\n                exports:      [ ComponentInstance ]\n            })\n        ];\n\n        return ModuleInstance;\n    }\n};\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { destroyElement, toCSS } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent/parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'zoid-visible',\n    INVISIBLE: 'zoid-invisible'\n};\n\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, props, event, dimensions } : RenderOptionsType<P>) : ?HTMLElement {\n    const  { width, height } = dimensions;\n\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n\n        const div = doc.createElement('div');\n        div.setAttribute('id', uid);\n        const style = doc.createElement('style');\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        style.appendChild(doc.createTextNode(`\n            #${ uid } {\n                display: inline-block;\n                position: relative;\n                width: ${ width };\n                height: ${ height };\n            }\n\n            #${ uid } > iframe {\n                display: inline-block;\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                transition: opacity .2s ease-in-out;\n            }\n\n            #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                opacity: 0;\n            }\n\n            #${ uid } > iframe.${ CLASS.VISIBLE } {\n                opacity: 1;\n        }\n        `));\n\n        div.appendChild(frame);\n        div.appendChild(prerenderFrame);\n        div.appendChild(style);\n\n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n\n        event.on(EVENT.RESIZE, ({ width: newWidth, height: newHeight }) => {\n            if (typeof newWidth === 'number') {\n                div.style.width = toCSS(newWidth);\n            }\n    \n            if (typeof newHeight === 'number') {\n                div.style.height = toCSS(newHeight);\n            }\n        });\n\n        return div;\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { type RenderOptionsType } from '../../parent/parent';\n\nexport function defaultPrerenderTemplate<P>({ doc, props } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        const html = doc.createElement('html');\n        const body = doc.createElement('body');\n        const style = doc.createElement('style');\n        const spinner = doc.createElement('div');\n        spinner.classList.add('spinner');\n\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        html.appendChild(body);\n        body.appendChild(spinner);\n        body.appendChild(style);\n        style.appendChild(doc.createTextNode(`\n            html, body {\n                width: 100%;\n                height: 100%;\n            }\n\n            .spinner {\n                position: fixed;\n                max-height: 60vmin;\n                max-width: 60vmin;\n                height: 40px;\n                width: 40px;\n                top: 50%;\n                left: 50%;\n                box-sizing: border-box;\n                border: 3px solid rgba(0, 0, 0, .2);\n                border-top-color: rgba(33, 128, 192, 0.8);\n                border-radius: 100%;\n                animation: rotation .7s infinite linear;\n            }\n\n            @keyframes rotation {\n                from {\n                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                }\n                to {\n                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                }\n            }\n        `));\n\n        return html;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { setup as setupPostRobot, on, send, bridge, toProxyWindow, destroy as destroyPostRobot } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, isElement, cleanup, memoize, identity, extend, uniqueID } from 'belter/src';\n\nimport { getChildPayload, childComponent, type ChildComponent } from '../child';\nimport { type RenderOptionsType, type ParentHelpers, parentComponent } from '../parent/parent';\nimport { ZOID, CONTEXT, POST_MESSAGE, WILDCARD, METHOD, PROP_TYPE } from '../constants';\nimport { react, angular, vue, vue3, angular2 } from '../drivers';\nimport { getGlobal, destroyGlobal } from '../lib';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validateOptions } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type PropsDefinitionType, type PropsInputType,\n    type PropsType, type ParentPropType, type exportPropType, type DEFINITION_TYPE } from './props';\n\ntype LoggerPayload = { [string] : ?string | ?boolean };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    info : (event : string, payload? : LoggerPayload) => any // eslint-disable-line flowtype/no-weak-types\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\ntype Attributes = {|\n    iframe? : { [string] : string },\n    popup? : { [string] : string }\n|};\n\nexport type ExportsConfigDefinition = {|\n    [string] : {|\n        type : DEFINITION_TYPE\n    |}\n|};\n\nexport type ExportsMapperDefinition<X> = ({|\n    getExports : () => ZalgoPromise<X>\n|}) => X;\n\nexport type ExportsDefinition<X> = ExportsConfigDefinition | ExportsMapperDefinition<X>;\n\nexport type ComponentOptionsType<P, X, C> = {|\n\n    tag : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n    method? : $Values<typeof METHOD>,\n\n    props? : UserPropsDefinitionType<P, X>,\n\n    dimensions? : CssDimensionsType | ({| props : PropsType<P> |}) => CssDimensionsType,\n    autoResize? : {| width? : boolean, height? : boolean, element? : string |},\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : Attributes | ({| props : PropsType<P> |}) => Attributes,\n\n    eligible? : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({| props : PropsInputType<P> |}) => void,\n\n    logger? : Logger,\n\n    children? : () => C,\n\n    exports? : ExportsDefinition<X>\n|};\n\nexport type AttributesType = {|\n    iframe? : { [string] : string },\n    popup? : { [string] : string }\n|};\n\ntype AutoResizeType = {|\n    width? : boolean,\n    height? : boolean,\n    element? : string\n|};\n\nexport type NormalizedComponentOptionsType<P, X, C> = {|\n    tag : string,\n    name : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain : ?(string | RegExp),\n    bridgeUrl : ?string,\n    method : ?$Values<typeof METHOD>,\n\n    propsDef : PropsDefinitionType<P, X>,\n    dimensions : CssDimensionsType | ({| props : PropsType<P> |}) => CssDimensionsType,\n    autoResize : AutoResizeType,\n\n    allowedParentDomains : StringMatcherType,\n\n    attributes : AttributesType | ({| props : PropsType<P> |}) => AttributesType,\n\n    eligible : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext : $Values<typeof CONTEXT>,\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement,\n\n    validate : ?({| props : PropsInputType<P> |}) => void,\n    logger : Logger,\n\n    children : () => C,\n\n    exports : ExportsMapperDefinition<X>\n|};\n\nexport type ZoidComponentInstance<P, X = void, C = void> = {|\n    ...ParentHelpers<P>,\n    ...X,\n    ...C,\n    isEligible : () => boolean,\n    clone : () => ZoidComponentInstance<P, X, C>,\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type ZoidComponent<P, X = void, C = void> = {\n    (props? : PropsInputType<P> | void) : ZoidComponentInstance<P, X, C>,\n    // eslint-disable-next-line no-undef\n    driver : <T>(string, mixed) => T,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    instances : $ReadOnlyArray<ZoidComponentInstance<P, X, C>>\n};\n\nconst getDefaultAttributes = () : AttributesType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultAutoResize = () : AutoResizeType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultExports = <X>() : () => X => {\n    // $FlowFixMe\n    return noop;\n};\n\nconst getDefaultDimensions = () : CssDimensionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nfunction normalizeOptions<P, X, C>(options : ComponentOptionsType<P, X, C>) : NormalizedComponentOptionsType<P, X, C> {\n    const {\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        props = {},\n        dimensions = getDefaultDimensions(),\n        autoResize = getDefaultAutoResize(),\n        allowedParentDomains = WILDCARD,\n        attributes = getDefaultAttributes(),\n        defaultContext = CONTEXT.IFRAME,\n        containerTemplate = (__ZOID__.__DEFAULT_CONTAINER__ ? defaultContainerTemplate : null),\n        prerenderTemplate = (__ZOID__.__DEFAULT_PRERENDER__ ? defaultPrerenderTemplate : null),\n        validate,\n        eligible = () => ({ eligible: true }),\n        logger = { info: noop },\n        exports: xportsDefinition = getDefaultExports(),\n        method,\n        children = () : C => {\n            // $FlowFixMe\n            return {};\n        }\n    } = options;\n\n    const name = tag.replace(/-/g, '_');\n\n    // $FlowFixMe[incompatible-type]\n    // $FlowFixMe[cannot-spread-inexact]\n    const propsDef : PropsDefinitionType<P, X> = {\n        ...getBuiltInProps(),\n        ...props\n    };\n\n    if (!containerTemplate) {\n        throw new Error(`Container template required`);\n    }\n\n    const xports = typeof xportsDefinition === 'function'\n        ? xportsDefinition\n        : ({ getExports }) : X => {\n            const result = {};\n\n            for (const key of Object.keys(xportsDefinition)) {\n                const { type } = xportsDefinition[key];\n                const valuePromise = getExports().then(res => {\n                    // $FlowFixMe\n                    return res[key];\n                });\n\n                if (type === PROP_TYPE.FUNCTION) {\n                    result[key] = (...args) => valuePromise.then(value => value(...args));\n                } else {\n                    result[key] = valuePromise;\n                }\n            }\n\n            // $FlowFixMe\n            return result;\n        };\n\n    return {\n        name,\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        method,\n        propsDef,\n        dimensions,\n        autoResize,\n        allowedParentDomains,\n        attributes,\n        defaultContext,\n        containerTemplate,\n        prerenderTemplate,\n        validate,\n        logger,\n        eligible,\n        children,\n        exports:     xports\n    };\n}\n\nlet cleanInstances = cleanup();\nconst cleanZoid = cleanup();\n\nexport type Component<P, X, C> = {|\n    init : (props? : PropsInputType<P> | void) => ZoidComponentInstance<P, X, C>,\n    instances : $ReadOnlyArray<ZoidComponentInstance<P, X, C>>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    registerChild : () => ?ChildComponent<P, X>\n|};\n\nexport function component<P, X, C>(opts : ComponentOptionsType<P, X, C>) : Component<P, X, C> {\n    if (__DEBUG__) {\n        validateOptions(opts);\n    }\n\n    const options = normalizeOptions(opts);\n\n    const {\n        name,\n        tag,\n        defaultContext,\n        propsDef,\n        eligible,\n        children\n    } = options;\n\n    const global = getGlobal(window);\n    const driverCache = {};\n    const instances = [];\n\n    const isChild = () : boolean => {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === tag && payload.childDomain === getDomain());\n    };\n\n    const registerChild = memoize(() : ?ChildComponent<P, X> => {\n        if (isChild()) {\n            if (window.xprops) {\n                delete global.components[tag];\n                throw new Error(`Can not register ${ name } as child - child already registered`);\n            }\n\n            const child = childComponent(options);\n            child.init();\n            return child;\n        }\n    });\n\n    const listenForDelegate = () => {\n        const allowDelegateListener = on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`, () => {\n            return true;\n        });\n\n        const delegateListener = on(`${ POST_MESSAGE.DELEGATE }_${ name }`, ({ source, data: { uid, overrides } }) => {\n            return {\n                parent: parentComponent({\n                    uid, options, overrides, parentWin: source\n                })\n            };\n        });\n\n        cleanZoid.register(allowDelegateListener.cancel);\n        cleanZoid.register(delegateListener.cancel);\n    };\n\n    const canRenderTo = (win : CrossDomainWindowType) : ZalgoPromise<boolean> => {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    };\n\n    const getDefaultContainer = (context : $Values<typeof CONTEXT>, container? : string | HTMLElement) : string | HTMLElement => {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    };\n\n    const getDefaultContext = (props : PropsInputType<P>, context : ?$Values<typeof CONTEXT>) : ZalgoPromise<$Values<typeof CONTEXT>> => {\n        return ZalgoPromise.try(() => {\n            if (props.window) {\n                return toProxyWindow(props.window).getType();\n            }\n\n            if (context) {\n                if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                    throw new Error(`Unrecognized context: ${ context }`);\n                }\n\n                return context;\n            }\n\n            return defaultContext;\n        });\n    };\n\n    const getDefaultInputProps = () : PropsInputType<P> => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const init = (inputProps? : PropsInputType<P> | void) : ZoidComponentInstance<P, X, C> => {\n        // eslint-disable-next-line prefer-const\n        let instance;\n\n        const uid = `${ ZOID }-${ tag }-${ uniqueID() }`;\n        const props = inputProps || getDefaultInputProps();\n\n        const { eligible: eligibility, reason } = eligible({ props });\n        const isEligible = () => eligibility;\n\n        const onDestroy = props.onDestroy;\n        props.onDestroy = (...args) => {\n            if (instance && eligibility) {\n                instances.splice(instances.indexOf(instance), 1);\n            }\n\n            if (onDestroy) {\n                return onDestroy(...args);\n            }\n        };\n\n        const parent = parentComponent({\n            uid, options\n        });\n\n        parent.init();\n\n        if (eligibility) {\n            parent.setProps(props);\n        } else {\n            if (props.onDestroy) {\n                props.onDestroy();\n            }\n        }\n\n        cleanInstances.register(err => {\n            return parent.destroy(err || new Error(`zoid destroyed all components`));\n        });\n\n        const clone = ({ decorate = identity } = {}) => {\n            return init(decorate(props));\n        };\n\n        const getChildren = () : C => {\n            // $FlowFixMe\n            const childComponents : {| [string] : ZoidComponent<mixed> |} = children();\n            const result = {};\n\n            for (const childName of Object.keys(childComponents)) {\n                const Child : ZoidComponent<mixed> = childComponents[childName];\n\n                result[childName] = (childInputProps) => {\n                    const parentProps : PropsType<P> = parent.getProps();\n                    const parentExport : exportPropType<X> = parent.export;\n\n                    const childParent : ParentPropType<P, X> = {\n                        uid,\n                        props:  parentProps,\n                        export: parentExport\n                    };\n                    \n                    const childProps : PropsInputType<mixed> = {\n                        ...childInputProps,\n                        parent: childParent\n                    };\n\n                    return Child(childProps);\n                };\n            }\n\n            // $FlowFixMe\n            return result;\n        };\n\n        const render = (target, container, context) => {\n            return ZalgoPromise.try(() => {\n                if (!eligibility) {\n                    const err = new Error(reason || `${ name } component is not eligible`);\n\n                    return parent.destroy(err).then(() => {\n                        throw err;\n                    });\n                }\n\n                if (!isWindow(target)) {\n                    throw new Error(`Must pass window to renderTo`);\n                }\n\n                return getDefaultContext(props, context);\n\n            }).then(finalContext => {\n                container = getDefaultContainer(finalContext, container);\n\n                if (target !== window && typeof container !== 'string') {\n                    throw new Error(`Must pass string element when rendering to another window`);\n                }\n\n                return parent.render({\n                    target,\n                    container,\n                    context:    finalContext,\n                    rerender: () => {\n                        const newInstance = clone();\n                        extend(instance, newInstance);\n                        return newInstance.renderTo(target, container, context);\n                    }\n                });\n\n            }).catch(err => {\n                return parent.destroy(err).then(() => {\n                    throw err;\n                });\n            });\n        };\n\n        instance = {\n            ...parent.getExports(),\n            ...parent.getHelpers(),\n            ...getChildren(),\n            isEligible,\n            clone,\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n\n        if (eligibility) {\n            instances.push(instance);\n        }\n\n        return instance;\n    };\n\n    const driver = (driverName : string, dep : mixed) : mixed => {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, vue3, angular2 };\n\n            if (!drivers[driverName]) {\n                throw new Error(`Could not find driver for framework: ${ driverName }`);\n            }\n\n            if (!driverCache[driverName]) {\n                driverCache[driverName] = drivers[driverName].register(tag, propsDef, init, dep);\n            }\n\n            return driverCache[driverName];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    };\n\n    registerChild();\n    listenForDelegate();\n\n    global.components = global.components || {};\n    if (global.components[tag]) {\n        throw new Error(`Can not register multiple components with the same tag: ${ tag }`);\n    }\n    global.components[tag] = true;\n\n    return {\n        init,\n        instances,\n        driver,\n        isChild,\n        canRenderTo,\n        registerChild\n    };\n}\n\nexport type ComponentDriverType<P, L, D, X, C> = {|\n    register : (string, PropsDefinitionType<P, X>, (PropsInputType<P>) => ZoidComponentInstance<P, X, C>, L) => D\n|};\n\nexport type ZoidProps<P> = PropsType<P>;\n\n// eslint-disable-next-line no-undef\nexport type CreateZoidComponent = <P, X, C>(options : ComponentOptionsType<P, X, C>) => ZoidComponent<P, X, C>;\n\nexport const create : CreateZoidComponent = <P, X, C>(options : ComponentOptionsType<P, X, C>) : ZoidComponent<P, X, C> => {\n    setupPostRobot();\n\n    const comp = component(options);\n\n    const init = (props? : PropsInputType<P> | void) => comp.init(props);\n    init.driver = (name, dep) => comp.driver(name, dep);\n    init.isChild = () => comp.isChild();\n    init.canRenderTo = (win) => comp.canRenderTo(win);\n    init.instances = comp.instances;\n\n    const child = comp.registerChild();\n    if (child) {\n        window.xprops = init.xprops = child.getProps();\n    }\n\n    return init;\n};\n\nexport function destroyComponents(err? : mixed) : ZalgoPromise<void> {\n    if (bridge) {\n        bridge.destroyBridges();\n    }\n\n    const destroyPromise = cleanInstances.all(err);\n    cleanInstances = cleanup();\n    return destroyPromise;\n}\n\nexport const destroyAll = destroyComponents;\n\nexport function destroy(err? : mixed) : ZalgoPromise<void> {\n    destroyAll();\n    destroyGlobal();\n    destroyPostRobot();\n    return cleanZoid.all(err);\n}\n","/* @flow */\nimport { sfvcScreens } from './screenHeights';\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nconst TABLET_PATTERN = /ip(a|ro)d|silk|xoom|playbook|tablet|kindle|Nexus 7|GT-P10|SC-01C|SHW-M180S|SM-T320|SGH-T849|SCH-I800|SHW-M180L|SPH-P100|SGH-I987|zt180|HTC( Flyer|_Flyer)|Sprint ATP51|ViewPad7|pandigital(sprnova|nova)|Ideos S7|Dell Streak 7|Advent Vega|A101IT|A70BHT|MID7015|Next2|nook|FOLIO|MB511.*RUTEM|Mac OS.*Silk/i;\n\nexport function isDevice(userAgent? : string = getUserAgent()) : boolean {\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isTablet(userAgent? : string = getUserAgent()) : boolean {\n    return TABLET_PATTERN.test(userAgent);\n}\n\nexport function isWebView() : boolean {\n    const userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)|.*WKWebView/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (/FBAN/).test(ua) || (/FBAV/).test(ua);\n}\n\nexport function isFirefox(ua? : string = getUserAgent()) : boolean {\n    return (/Firefox/i).test(ua);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return (/Opera Mini/i).test(ua);\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isIOS14(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone.*OS.*(1)?(?:(1)[0-4]| [0-9])_/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)|.*WKWebView/).test(ua);\n    }\n    return false;\n}\n\nexport function isSFVC(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        const height = window.innerHeight;\n        const scale = Math.round(window.screen.width / window.innerWidth * 100) / 100;\n        const computedHeight = Math.round(height * scale);\n\n        let device = null;\n        if (isIOS14(ua)) {\n            device = sfvcScreens[window.outerHeight];\n        } else {\n            if (scale !== 1) {\n                return true;\n            }\n\n            device = sfvcScreens[window.outerHeight];\n        }\n\n        if (!device) {\n            return true;\n        }\n\n        if (scale > 1 && device.zoomHeight && device.zoomHeight[scale]) {\n            return device.zoomHeight[scale].indexOf(computedHeight) !== -1;\n        } else {\n            return device.textSizeHeights.indexOf(computedHeight) !== -1 ||\n                   device.textSizeHeightsNoTabs.indexOf(computedHeight) !== -1;\n        }\n    }\n    return false;\n}\n\nexport function isSFVCorSafari(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        const sfvc = isSFVC(ua);\n\n        const device = isIOS14(ua)\n            ? sfvcScreens[window.outerHeight]\n            : null;\n\n        if (!device) {\n            return false;\n        }\n\n        const height = window.innerHeight;\n        const scale = Math.round(window.screen.width / window.innerWidth * 100) / 100;\n\n        const computedHeight = Math.round(height * scale);\n        const possibleSafariSizes = device.maybeSafari;\n\n        let maybeSafari = false;\n        if (scale > 1 &&\n            possibleSafariSizes[scale] &&\n            possibleSafariSizes[scale].indexOf(computedHeight) !== -1) {\n                \n            maybeSafari = true;\n        }\n\n        return sfvc || maybeSafari;\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE|rv:11/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    const mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    const mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            const status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    const userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n\nexport function isChrome(ua? : string = getUserAgent()) : boolean {\n    return (/Chrome|Chromium|CriOS/).test(ua) && !(/SamsungBrowser|Silk|EdgA/).test(ua);\n}\n\nexport function isSafari(ua? : string = getUserAgent()) : boolean {\n    return (/Safari/).test(ua) && !isChrome(ua) && !(/Silk|FxiOS|EdgiOS/).test(ua);\n}\n\nexport function isApplePaySupported() : boolean {\n    try {\n        if (window.ApplePaySession && window.ApplePaySession.supportsVersion(3) && window.ApplePaySession.canMakePayments()) {\n            return true;\n        }\n    } catch (e) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        const toString = ({}).toString;\n\n        if (toString) {\n            const name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : {| cancel : () => void |} {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    const promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n/* eslint no-use-before-define: off */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean;\n    rejected : boolean;\n    errorHandled : boolean;\n    value : R;\n    error : mixed;\n    // eslint-disable-next-line flowtype/no-mutable-array\n    handlers : Array<{|\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    |}>;\n    dispatching : boolean;\n    stack : string;\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            const err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n\n    dispatch() {\n\n        const { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            const { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                const promiseResult : ZalgoPromise<*> = result;\n\n                if (promiseResult.resolved) {\n                    promise.resolve(promiseResult.value);\n                } else {\n                    promise.reject(promiseResult.error);\n                }\n\n                promiseResult.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X, Y>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        const promise = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X, Y>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        // $FlowFixMe incompatible-call\n        const resultPromise : ZalgoPromise<X | Y> = this.then(undefined, onError);\n        return resultPromise;\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        const timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    lazy() : ZalgoPromise<R> {\n        this.errorHandled = true;\n        return this;\n    }\n\n    static resolve<X, Y>(value : ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n\n        if (value instanceof ZalgoPromise) {\n            // $FlowFixMe incompatible-type-arg\n            const result : ZalgoPromise<X | Y> = value;\n            return result;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : $ReadOnlyArray<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        const promise = new ZalgoPromise();\n        let count = promises.length;\n        // eslint-disable-next-line no-undef, unicorn/prefer-spread\n        const results = ([] : $TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>).slice();\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            const prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        const result = {};\n        const awaitPromises = [];\n\n        for (const key in promises) {\n            if (promises.hasOwnProperty(key)) {\n                const value = promises[key];\n\n                if (isPromise(value)) {\n                    awaitPromises.push(value.then(res => {\n                        result[key] = res;\n                    }));\n                } else {\n                    result[key] = value;\n                }\n            }\n        }\n\n        return ZalgoPromise.all(awaitPromises).then(() => result);\n    }\n\n    static map<T, X>(items : $ReadOnlyArray<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<$ReadOnlyArray<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : {| cancel : () => void |} {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X, Y, C : mixed, A : $ReadOnlyArray<mixed>>(method : (...args : $ReadOnlyArray<mixed>) => (ZalgoPromise<X> | Y), context? : C, args? : A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result : ZalgoPromise<X> | Y;\n\n        startActive();\n\n        try {\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        // $FlowFixMe incompatible-call\n        const resultPromise = ZalgoPromise.resolve(result);\n\n        return resultPromise;\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nconst IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function getActualProtocol(win : SameDomainWindowType = window) : ?string {\n    return win.location.protocol;\n}\n\nexport function getProtocol(win : SameDomainWindowType = window) : ?string {\n    if (win.mockDomain) {\n        const protocol = win.mockDomain.split('//')[0];\n\n        if (protocol) {\n            return protocol;\n        }\n    }\n\n    return getActualProtocol(win);\n}\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return getProtocol(win) === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return getProtocol(win) === PROTOCOL.ABOUT;\n}\n\nexport function isMockProtocol(win : SameDomainWindowType = window) : boolean {\n    return getProtocol(win) === PROTOCOL.MOCK;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    const location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    const protocol = getActualProtocol(win);\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        const parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    const host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    const domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        const desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isMockProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n        if (win === window) {\n            return true;\n        }\n        \n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    const childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    for (const frame of getFrames(win)) {\n        result.push(frame);\n\n        for (const childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (const frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    const top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    const frames = getAllFramesInWindow(win);\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    const doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nconst iframeWindows = [];\nconst iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    const iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        const frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const winFrames = getFrames(win);\n\n    for (const childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        const namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    const top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    const frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    const opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    const parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    const actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (const frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (const item1 of collection1) {\n        for (const item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    const top1 = getTop(win1) || win1;\n    const top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    const allFrames1 = getAllFramesInWindow(win1);\n    const allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    const opener1 = getOpener(top1);\n    const opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() })`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : {| cancel : () => void |} {\n\n    let timeout;\n\n    const check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if ('postMessage' in obj && 'self' in obj && 'location' in obj) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    if (isIframe(win)) {\n        const frame = getFrameForWindow(win);\n        if (frame && frame.parentElement) {\n            frame.parentElement.removeChild(frame);\n            return;\n        }\n    }\n\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from '@krakenjs/cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string;\n    weakmap : ?WeakMap<K, V>;\n    // eslint-disable-next-line flowtype/no-mutable-array\n    keys : Array<K>;\n    // eslint-disable-next-line flowtype/no-mutable-array\n    values : Array<V>;\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        const weakmap = this.weakmap;\n        const keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            const value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const name = this.name;\n                const entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const values = this.values;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        const value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","\n/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from '@krakenjs/zalgo-promise/src';\nimport { WeakMap } from '@krakenjs/cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function isElement(element : mixed) : boolean {\n    let passed = false;\n\n    try {\n        if (element instanceof window.Element) {\n            passed = true;\n        } else if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n            passed = true;\n        }\n    } catch (_) {\n        // we don't have an element\n    }\n\n    return passed;\n}\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        })).replace(/[=]/g, '');\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64').replace(/[=]/g, '');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        // $FlowFixMe[method-unbinding]\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    const chars = '0123456789abcdef';\n\n    const randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    const timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `uid_${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : $ReadOnlyArray<T>) : string {\n    try {\n        // $FlowFixMe[method-unbinding]\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n\n            // Treat each distinct function as unique for purposes of memoization\n            // e.g. even if someFunction.stringify() is the same, we may use a different memoize cache\n            // if the actual function is different.\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n\n            // By default JSON.stringify(domElement) returns '{}'. This ensures that stays true even for non-standard\n            // elements (e.g. React-rendered dom elements) with custom properties\n            if (isElement(val)) {\n                return {};\n            }\n\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\nexport function getEmptyObject() : {||} {\n    // $FlowFixMe\n    return {};\n}\n\ntype MemoizeOptions = {|\n    name? : string,\n    time? : number,\n    thisNamespace? : boolean\n|};\n\nconst getDefaultMemoizeOptions = () : MemoizeOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nexport type Memoized<F> = F & {| reset : () => void |};\n\nlet memoizeGlobalIndex = 0;\nlet memoizeGlobalIndexValidFrom = 0;\n\nexport function memoize<F : Function>(method : F, options? : MemoizeOptions = getDefaultMemoizeOptions()) : Memoized<F> {\n    const { thisNamespace = false, time: cacheTime } = options;\n\n    let simpleCache;\n    let thisCache;\n\n    let memoizeIndex = memoizeGlobalIndex;\n    memoizeGlobalIndex += 1;\n\n    const memoizedFunction = function memoizedFunction(...args) : mixed {\n        if (memoizeIndex < memoizeGlobalIndexValidFrom) {\n            simpleCache = null;\n            thisCache = null;\n            memoizeIndex = memoizeGlobalIndex;\n            memoizeGlobalIndex += 1;\n        }\n\n        let cache;\n\n        if (thisNamespace) {\n            thisCache = thisCache || new WeakMap();\n            cache = thisCache.getOrSet(this, getEmptyObject);\n        } else {\n            cache = simpleCache = simpleCache || {};\n        }\n\n        let cacheKey;\n\n        try {\n            cacheKey = serializeArgs(args);\n        } catch {\n            return method.apply(this, arguments);\n        }\n\n        let cacheResult = cache[cacheKey];\n\n        if (cacheResult && cacheTime && (Date.now() - cacheResult.time) < cacheTime) {\n            delete cache[cacheKey];\n            cacheResult = null;\n        }\n\n        if (cacheResult) {\n            return cacheResult.value;\n        }\n\n        const time  = Date.now();\n        const value = method.apply(this, arguments);\n\n        cache[cacheKey] = { time, value };\n\n        return value;\n    };\n\n    memoizedFunction.reset = () => {\n        simpleCache = null;\n        thisCache = null;\n    };\n\n    // $FlowFixMe\n    const result : F = memoizedFunction;\n\n    return setFunctionName(result, `${ options.name || getFunctionName(method) }::memoized`);\n}\n\nmemoize.clear = () => {\n    memoizeGlobalIndexValidFrom = memoizeGlobalIndex;\n};\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : $ReadOnlyArray<any>) : ZalgoPromise<R> {\n        const key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\ntype PromisifyOptions = {|\n    name ? : string\n|};\n\nconst getDefaultPromisifyOptions = () : PromisifyOptions => {\n    // $FlowFixMe\n    return {};\n};\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : $ReadOnlyArray<any>) => R, options : PromisifyOptions = getDefaultPromisifyOptions()) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : $ReadOnlyArray<any>) => R, logic : (...args : $ReadOnlyArray<any>) => R, args : $ReadOnlyArray<any> = []) : R {\n    // $FlowFixMe\n    const cache : {| [string] : R |} = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    const key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n\n    const result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    const regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : T {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            // $FlowFixMe[method-unbinding]\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            const stack = err && err.stack;\n            const message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        // $FlowFixMe[method-unbinding]\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) {\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    // $FlowFixMe[method-unbinding]\n    const defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    // $FlowFixMe[method-unbinding]\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    const index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    const original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            // $FlowFixMe[method-unbinding]\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : $ReadOnlyArray<T> {\n    if (Object.values) {\n        // $FlowFixMe\n        return Object.values(obj);\n    }\n\n    const result : Array<T> = [];\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            // $FlowFixMe[escaped-generic]\n            result.push(obj[key]);\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n\n// eslint-disable-next-line no-undef\nexport const memoizedValues : <T>({ [string] : T }) => $ReadOnlyArray<T> = memoize(values);\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : $ReadOnlyArray<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : $ReadOnlyArray<number>) : number {\n    return Math.max(...args);\n}\n\nexport function roundUp(num : number, nearest : number) : number {\n    const remainder = num % nearest;\n    return remainder\n        ? (num - remainder) + nearest\n        : num;\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : $ReadOnlyArray<T> {\n    const results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    const result = {};\n\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : $ReadOnlyArray<string> {\n    const result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        const localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : {| cancel : () => void |} {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n\n    const result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, -2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        const parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            const isLast = (i + 1 === parts.length);\n            const isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {|\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n|};\n\nexport function eventEmitter() : EventEmitterType {\n    const triggered = {};\n    let handlers = {};\n\n    const emitter = {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            const handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            const listener = emitter.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            const handlerList = handlers[eventName];\n            const promises = [];\n\n            if (handlerList) {\n                for (const handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return emitter.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n\n    return emitter;\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    const pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    const interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | $ReadOnlyArray<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n\n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            const value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-undef\n    // $FlowFixMe[method-unbinding]\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    // $FlowFixMe[method-unbinding]\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    const constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    const prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : $ReadOnlyArray<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        const length = item.length;\n        const result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n\n            defineLazyProp(result, i, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                const el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        const result = {};\n\n        for (const key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                const el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        const descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {|\n    text : string,\n    groups : $ReadOnlyArray<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n|};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    const result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    const index : number = result.index;\n    const regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : $ReadOnlyArray<RegexResultType> {\n\n    const matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : $ReadOnlyArray<mixed>) => T, time : number = 100) : (...args : $ReadOnlyArray<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    // $FlowFixMe[method-unbinding]\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : $ReadOnlyArray<any>) => R) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            }));\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => {| cancel : () => void |},\n    all : (err? : mixed) => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n    let cleanErr;\n\n    const cleaner = {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                cleaner.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) : {| cancel : () => void |} {\n            const task = once(() => method(cleanErr));\n\n            if (cleaned) {\n                method(cleanErr);\n            } else {\n                tasks.push(task);\n            }\n\n            return {\n                cancel: () => {\n                    const index = tasks.indexOf(task);\n                    if (index !== -1) {\n                        tasks.splice(index, 1);\n                    }\n                }\n            };\n        },\n\n        all(err? : mixed) : ZalgoPromise<void> {\n            cleanErr = err;\n\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n\n    return cleaner;\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n\n    // $FlowFixMe\n    return { result, error };\n}\n\n// eslint-disable-next-line flowtype/no-mutable-array\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n\n    return thing;\n}\n\nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n\nexport const constHas = <X : (string | boolean | number), T : { [string] : X }>(constant : T, value : X) : boolean => {\n    return memoizedValues(constant).indexOf(value) !== -1;\n};\n\nexport function dedupeErrors<T>(handler : (mixed) => T) : (mixed) => (T | void) {\n    const seenErrors = [];\n    const seenStringifiedErrors = {};\n\n    return (err) => {\n        if (seenErrors.indexOf(err) !== -1) {\n            return;\n        }\n\n        seenErrors.push(err);\n\n        const stringifiedError = stringifyError(err);\n        if (seenStringifiedErrors[stringifiedError]) {\n            return;\n        }\n\n        seenStringifiedErrors[stringifiedError] = true;\n        return handler(err);\n    };\n}\n\nexport class ExtendableError extends Error {\n    constructor(message : string) {\n        super(message);\n        // eslint-disable-next-line unicorn/custom-error-definition\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        const testWeakMap = new WeakMap();\n        const testKey = {};\n        const testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n/* eslint max-lines: off */\nimport { ZalgoPromise } from '@krakenjs/zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed, assertSameDomain,\n    type SameDomainWindowType, type CrossDomainWindowType } from '@krakenjs/cross-domain-utils/src';\nimport { WeakMap } from '@krakenjs/cross-domain-safe-weakmap/src';\n\nimport { isElement, inlineMemoize, memoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom, ExtendableError, strHashStr } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES, ATTRIBUTES, UID_HASH_LENGTH } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function getBody() : HTMLBodyElement {\n    // eslint-disable-next-line compat/compat\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Body element not found`);\n    }\n\n    return body;\n}\n\nexport function isDocumentReady() : boolean {\n    // eslint-disable-next-line compat/compat\n    return Boolean(document.body) && (document.readyState === 'complete');\n}\n\nexport function isDocumentInteractive() : boolean {\n    // eslint-disable-next-line compat/compat\n    return Boolean(document.body) && (document.readyState === 'interactive');\n}\n\nexport function urlEncode(str : string) : string {\n    return encodeURIComponent(str);\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\ntype WaitForDocumentReady = () => ZalgoPromise<void>;\n\nexport const waitForDocumentReady : WaitForDocumentReady = memoize(() => {\n    return new ZalgoPromise(resolve => {\n\n        if (isDocumentReady() || isDocumentInteractive()) {\n            return resolve();\n        }\n\n        const interval = setInterval(() => {\n            if (isDocumentReady() || isDocumentInteractive()) {\n                clearInterval(interval);\n                return resolve();\n            }\n        }, 10);\n    });\n});\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return ZalgoPromise.try(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        return waitForDocumentReady().then(() => {\n            if (document.body) {\n                return document.body;\n            }\n\n            throw new Error('Document ready but document.body not present');\n        });\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        const params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport type Query = {\n    [ string ] : boolean | string\n};\n\nexport function formatQuery(obj : Query = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string' || typeof obj[key] === 'boolean';\n    }).map(key => {\n        const val = obj[key];\n\n        if (typeof val !== 'string' && typeof val !== 'boolean') {\n            throw new TypeError(`Invalid type for query`);\n        }\n\n        return `${ urlEncode(key) }=${ urlEncode(val.toString()) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : Query = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : {| query? : Query, hash? : Query |}) : string {\n\n    const query = options.query || {};\n    const hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    const queryString = extendQuery(originalQuery, query);\n    const hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    const meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function getPerformance() : ?Performance {\n    return inlineMemoize(getPerformance, () : ?Performance => {\n        const performance = window.performance;\n\n        if (\n            performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        ) {\n            return performance;\n        }\n    });\n}\n\nexport function enablePerformance() : boolean {\n    return Boolean(getPerformance());\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n        const performance = getPerformance();\n\n        if (!performance) {\n            return;\n        }\n\n        const timing = performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined') && window.location !== undefined;\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : $ReadOnlyArray<HTMLElement> {\n    // $FlowFixMe[method-unbinding]\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path, reverse = false } : {| host? : string, path : string, reverse? : boolean |}) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        const url = `${ host }${ path }`;\n        // $FlowFixMe[method-unbinding]\n        const scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        if (reverse) {\n            scripts.reverse();\n        }\n\n        for (const script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            const src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                const value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                const result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : $ReadOnlyArray<{| country? : string, lang : string |}> {\n    const nav = window.navigator;\n\n    const locales = nav.languages\n        ? [ ...nav.languages ]\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            const [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    const element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        const interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                resolve(el);\n                clearInterval(interval);\n                return;\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\n// eslint-disable-next-line unicorn/custom-error-definition\nexport class PopupOpenError extends ExtendableError {}\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1,\n    closeOnUnload? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    const { closeOnUnload = 1, name = '', width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    delete options.closeOnUnload;\n    delete options.name;\n\n    if (width && height) {\n        // $FlowFixMe\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    // eslint-disable-next-line array-callback-return\n    const params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        const err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    if (closeOnUnload) {\n        window.addEventListener('unload', () => win.close());\n    }\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    const tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    const documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {|\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n|};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        const promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    const promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nconst getDefaultCreateElementOptions = () : ElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = getDefaultCreateElementOptions(), container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    const element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (const key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\ntype StringMap = {|\n    [ string ] : string\n|};\n\nexport type IframeElementOptionsType = {|\n    style? : StringMap,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : StringMap,\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n|};\n\nconst getDefaultIframeOptions = () : IframeElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultStringMap = () : StringMap => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function iframe(options : IframeElementOptionsType = getDefaultIframeOptions(), container : ?HTMLElement) : HTMLIFrameElement {\n\n    const attributes = options.attributes || getDefaultStringMap();\n    const style = options.style || getDefaultStringMap();\n\n    // $FlowFixMe\n    const newAttributes = {\n        allowTransparency: 'true',\n        ...attributes\n    };\n\n    // $FlowFixMe\n    const newStyle = {\n        backgroundColor: 'transparent',\n        border:          'none',\n        ...style\n    };\n\n    const frame = createElement('iframe', {\n        attributes: newAttributes,\n        style:      newStyle,\n        html:       options.html,\n        class:      options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        const el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : $ReadOnlyArray<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (const eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (const eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    const capitalizedName = capitalizeFirstLetter(name);\n\n    for (const prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        // eslint-disable-next-line prefer-const\n        let startTimeout;\n        let endTimeout;\n        // eslint-disable-next-line prefer-const\n        let startEvent;\n        // eslint-disable-next-line prefer-const\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', 'hidden', 'important');\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', 'none', 'important');\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    const animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode || !el.ownerDocument || !el.ownerDocument.documentElement || !el.ownerDocument.documentElement.contains(el)) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let cancelled = false;\n    const mutationObservers = [];\n    // eslint-disable-next-line prefer-const\n    let interval;\n    // eslint-disable-next-line prefer-const\n    let sacrificialFrame;\n    let sacrificialFrameWin;\n\n    const cancel = () => {\n        cancelled = true;\n        for (const observer of mutationObservers) {\n            observer.disconnect();\n        }\n        if (interval) {\n            interval.cancel();\n        }\n        if (sacrificialFrameWin) {\n            // eslint-disable-next-line no-use-before-define\n            sacrificialFrameWin.removeEventListener('unload', elementClosed);\n        }\n        if (sacrificialFrame) {\n            destroyElement(sacrificialFrame);\n        }\n    };\n\n    const elementClosed = () => {\n        if (!cancelled) {\n            handler();\n            cancel();\n        }\n    };\n\n    if (isElementClosed(element)) {\n        elementClosed();\n        return { cancel };\n    }\n\n    // Strategy 1: Mutation observer\n\n    if (window.MutationObserver) {\n        let mutationElement = element.parentElement;\n        while (mutationElement) {\n            const mutationObserver = new window.MutationObserver(() => {\n                if (isElementClosed(element)) {\n                    elementClosed();\n                }\n            });\n\n            mutationObserver.observe(mutationElement, { childList: true });\n            mutationObservers.push(mutationObserver);\n            mutationElement = mutationElement.parentElement;\n        }\n    }\n\n    // Strategy 2: Sacrificial iframe\n\n    sacrificialFrame = document.createElement('iframe');\n    sacrificialFrame.setAttribute('name', `__detect_close_${ uniqueID() }__`);\n    sacrificialFrame.style.display = 'none';\n    awaitFrameWindow(sacrificialFrame).then(frameWin => {\n        sacrificialFrameWin = assertSameDomain(frameWin);\n        sacrificialFrameWin.addEventListener('unload', elementClosed);\n    });\n    element.appendChild(sacrificialFrame);\n\n    // Strategy 3: Poller\n\n    const check = () => {\n        if (isElementClosed(element)) {\n            elementClosed();\n        }\n    };\n    interval = safeInterval(check, 1000);\n\n    return { cancel };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of querySelectorAll('script', el)) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({| width : number, height : number |}) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {| cancel : () => void |} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n    let canceled = false;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    const check = () => {\n        if (canceled || !isElementVisible(el)) {\n            return;\n        }\n\n        const newWidth = el.offsetWidth;\n        const newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    win.addEventListener('resize', check);\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n        timeout = safeInterval(check, interval * 10);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        timeout = safeInterval(check, interval * 10);\n    } else {\n        timeout = safeInterval(check, interval);\n    }\n\n    return {\n        cancel: () => {\n            canceled = true;\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            timeout.cancel();\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n    const performance = getPerformance();\n\n    if (!performance) {\n        return;\n    }\n\n    // $FlowFixMe[method-unbinding]\n    if (typeof performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot && shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n\n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    if (isShadowElement(shadowHost)) {\n        return insertShadowSlot(slotProvider);\n    }\n\n    return slotProvider;\n}\n\nexport function preventClickFocus(el : HTMLElement) {\n    const onFocus = (event : Event) => {\n        el.removeEventListener('focus', onFocus);\n        event.preventDefault();\n        el.blur();\n        return false;\n    };\n\n    el.addEventListener('mousedown', () => {\n        el.addEventListener('focus', onFocus);\n        setTimeout(() => {\n            el.removeEventListener('focus', onFocus);\n        }, 1);\n    });\n}\n\nexport function getStackTrace() : string {\n    try {\n        throw new Error('_');\n    }\n    catch (err) {\n        return err.stack || '';\n    }\n}\n\nfunction inferCurrentScript() : ?HTMLScriptElement {\n    try {\n        const stack = getStackTrace();\n        const stackDetails = (/.*at [^(]*\\((.*):(.+):(.+)\\)$/ig).exec(stack);\n        const scriptLocation = stackDetails && stackDetails[1];\n\n        if (!scriptLocation) {\n            return;\n        }\n\n        // $FlowFixMe[method-unbinding]\n        for (const script of Array.prototype.slice.call(document.getElementsByTagName('script')).reverse()) {\n            if (script.src && script.src === scriptLocation) {\n                return script;\n            }\n        }\n\n    } catch (err) {\n        // pass\n    }\n}\n\n// eslint-disable-next-line compat/compat\nlet currentScript = typeof document !== 'undefined' ? document.currentScript : null;\n\ntype GetCurrentScript = () => HTMLScriptElement;\n\nexport const getCurrentScript : GetCurrentScript = memoize(() => {\n    if (currentScript) {\n        return currentScript;\n    }\n\n    currentScript = inferCurrentScript();\n\n    if (currentScript) {\n        return currentScript;\n    }\n\n    throw new Error('Can not determine current script');\n});\n\nconst currentUID = uniqueID();\n\ntype GetCurrentScriptUID = () => string;\n\nexport const getCurrentScriptUID : GetCurrentScriptUID = memoize(() => {\n    let script;\n\n    try {\n        script = getCurrentScript();\n    } catch (err) {\n        return currentUID;\n    }\n\n    let uid = script.getAttribute(ATTRIBUTES.UID);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    uid = script.getAttribute(`${ ATTRIBUTES.UID }-auto`);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    if (script.src) {\n\n        const { src, dataset } = script;\n        const stringToHash = JSON.stringify({ src, dataset });\n        const hashedString = strHashStr(stringToHash);\n        const hashResult = hashedString.slice(hashedString.length - UID_HASH_LENGTH);\n\n        uid = `uid_${ hashResult }`;\n    } else {\n        uid = uniqueID();\n    }\n\n    script.setAttribute(`${ ATTRIBUTES.UID }-auto`, uid);\n\n    return uid;\n});\n\ntype SubmitFormOptions = {|\n    url : string,\n    target : string,\n    body? : {| [string] : string | boolean |},\n    method? : string\n|};\n\nexport function submitForm({ url, target, body, method = 'post' } : SubmitFormOptions) {\n    const form = document.createElement('form');\n    form.setAttribute('target', target);\n    form.setAttribute('method', method);\n    form.setAttribute('action', url);\n    form.style.display = 'none';\n\n    if (body) {\n        for (const key of Object.keys(body)) {\n            const input = document.createElement('input');\n            input.setAttribute('name', key);\n            input.setAttribute('value', body[key]?.toString());\n            form.appendChild(input);\n        }\n    }\n\n    getBody().appendChild(form);\n    form.submit();\n    getBody().removeChild(form);\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    const match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13,\n    SPACE: 32\n};\n\nexport const ATTRIBUTES = {\n    UID: 'data-uid'\n};\n\nexport const UID_HASH_LENGTH = 30;\n","export const ENV = {\n  LOCAL:      'local',\n  DEV:        'development',\n  SANDBOX:    'sandbox',\n  PRODUCTION: 'production'\n};\n","import { ENV } from './constants.js';\n\nexport const Config = {\n\n\tenv: ENV.LOCAL,\n\n\tcheckoutUris: {\n\t\t[ ENV.LOCAL ]: \"/pay\",\n\t\t[ ENV.DEV ]: \"/checkout/pay\",\n\t\t[ ENV.SANDBOX ]: \"/checkout/pay\",\n\t\t[ ENV.PRODUCTION ]: \"/checkout/pay\"\n\t},\n\n\tbuttonUris: {\n\t\t[ ENV.LOCAL ]: \"\",\n\t\t[ ENV.DEV ]: \"/button\",\n\t\t[ ENV.SANDBOX ]: \"/button\",\n\t\t[ ENV.PRODUCTION ]: \"/button\"\n\t},\n\n\tpostBridgeUris: {\n    [ ENV.LOCAL ]:      \"?xcomponent=1\",\n    [ ENV.DEV ]:      \t\"/bridge?xcomponent=1\",\n    [ ENV.SANDBOX ]:    \"/bridge?xcomponent=1\",\n    [ ENV.PRODUCTION ]: \"/bridge?xcomponent=1\",\n  },\n\n  get safepayDomainRegex() {\n  \treturn /\\.?(getsafepay|localhost)\\.?(com)?(:\\d+)?$/\n  },\n\n\tget buttonDomains() {\n\t\treturn {\n\t\t\t[ ENV.LOCAL ]: \"http://localhost:3000\",\n\t\t\t[ ENV.DEV ]: \"https://dev.api.getsafepay.com\",\n\t\t\t[ ENV.SANDBOX ]: \"https://sandbox.api.getsafepay.com\",\n\t\t\t[ ENV.PRODUCTION ]: \"https://getsafepay.com\"\n\t\t}\n\t},\n\n\tget checkoutDomains() {\n\t\treturn {\n\t\t\t[ ENV.LOCAL ]: \"http://localhost:3001\",\n\t\t\t[ ENV.DEV ]: \"https://dev.api.getsafepay.com\",\n\t\t\t[ ENV.SANDBOX ]: \"https://sandbox.api.getsafepay.com\",\n\t\t\t[ ENV.PRODUCTION ]: \"https://getsafepay.com\"\n\t\t}\t\n\t},\n\n\tget bridgeDomains() {\n\t\treturn {\n\t\t\t[ ENV.LOCAL ]: \"http://localhost:3020\",\n\t\t\t[ ENV.DEV ]: \"https://dev.api.getsafepay.com\",\n\t\t\t[ ENV.SANDBOX ]: \"https://sandbox.api.getsafepay.com\",\n\t\t\t[ ENV.PRODUCTION ]: \"https://getsafepay.com\"\n\t\t}\n\t},\n\n\tget checkoutUrls() {\n\t\tlet spUrls = Config.checkoutDomains\n\t\tlet checkoutUris = Config.checkoutUris\n\n\t\treturn {\n\t\t\t[ ENV.LOCAL ]: `${spUrls.local}${checkoutUris.local}`,\n\t\t\t[ ENV.DEV ]: \t\t`${spUrls.development}${checkoutUris.development}`,\n\t\t\t[ ENV.SANDBOX ]: `${spUrls.sandbox}${checkoutUris.sandbox}`,\n\t\t\t[ ENV.PRODUCTION ]: `${spUrls.production}${checkoutUris.production}`\t\n\t\t}\n\t},\n\n\tget buttonUrls() {\n\t\tlet spUrls = Config.buttonDomains\n\t\tlet buttonUris = Config.buttonUris\n\n\t\treturn {\n\t\t\t[ ENV.LOCAL ]: `${spUrls.local}${buttonUris.local}`,\n\t\t\t[ ENV.DEV ]: \t`${spUrls.development}${buttonUris.development}`,\n\t\t\t[ ENV.SANDBOX ]: `${spUrls.sandbox}${buttonUris.sandbox}`,\n\t\t\t[ ENV.PRODUCTION ]: `${spUrls.production}${buttonUris.production}`\n\t\t}\n\t},\n\n\tget metaFrameUrls() {\n    let spUrls = Config.bridgeDomains;\n    let postBridgeUris = Config.postBridgeUris;\n\n    return {\n      [ ENV.LOCAL ]:      `${ spUrls.local }${ postBridgeUris.local }`,\n      [ ENV.DEV ]:      \t`${ spUrls.development }${ postBridgeUris.development }`,\n      [ ENV.SANDBOX ]:    `${ spUrls.sandbox }${ postBridgeUris.sandbox }`,\n      [ ENV.PRODUCTION ]: `${ spUrls.production }${ postBridgeUris.production }`\n    };\n  }\n}","/* @flow */\n\nexport const NODE_TYPE = {\n    ELEMENT:   ('element' : 'element'),\n    TEXT:      ('text' : 'text'),\n    COMPONENT: ('component' : 'component'),\n    FRAGMENT:  ('fragment' : 'fragment')\n};\n","/* @flow */\n\nimport { NODE_TYPE } from './constants';\n\nexport type NodePropsType = {\n    [string] : any // eslint-disable-line flowtype/no-weak-types\n};\n\nexport type EmptyProps = {||};\n\nexport type NodeRenderer<N, O> = (N) => O;\nexport type NodeRendererFactory<L, N, O> = (L) => NodeRenderer<N, O>;\n\ntype Primitive = string | boolean | number;\ntype NullablePrimitive = Primitive | null | void;\n\nexport type NodeType = ElementNode | TextNode | FragmentNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildNodeType = ElementNode | TextNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildType = ChildNodeType | Primitive | $ReadOnlyArray<ChildType>;\nexport type ChildrenType = $ReadOnlyArray<ChildNodeType>;\nexport type NullableChildType = $ReadOnlyArray<ChildType> | ChildNodeType | NullablePrimitive;\nexport type NullableChildrenType = $ReadOnlyArray<NullableChildrenType | ChildNodeType | NullablePrimitive>;\n\nexport type ComponentFunctionType<P> = (P, ChildrenType) => NullableChildType;\n\nexport type CreateElementNode = <P>(string, P, ...NullableChildrenType) => ElementNode; // eslint-disable-line no-undef, no-use-before-define\nexport type CreateComponentNode = <P>(ComponentFunctionType<P>, P, ...NullableChildrenType) => ComponentNode<*>; // eslint-disable-line no-undef, no-use-before-define\nexport type CreateNullComponentNode = <P>(ComponentFunctionType<P>, null, ...NullableChildrenType) => ComponentNode<*>; // eslint-disable-line no-undef, no-use-before-define\n\nexport type CreateNode = CreateNullComponentNode & CreateComponentNode & CreateElementNode;\n\nfunction renderChildren<T>(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>, renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> { // eslint-disable-line no-use-before-define\n    const result = [];\n\n    for (const child of children) {\n        const renderedChild = child.render(renderer);\n\n        if (!renderedChild) {\n            continue;\n        } else if (Array.isArray(renderedChild)) {\n            for (const subchild of renderedChild) {\n                if (subchild) {\n                    result.push(subchild);\n                }\n            }\n        } else {\n            result.push(renderedChild);\n        }\n    }\n\n    return result;\n}\n\nexport class ElementNode {\n    type : (typeof NODE_TYPE.ELEMENT) = NODE_TYPE.ELEMENT;\n\n    name : string;\n    props : NodePropsType;\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>; // eslint-disable-line no-use-before-define\n    onRender : ?<T>(T) => void; // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.name = name;\n        this.props = props || {};\n        this.children = children;\n\n        const onRender = this.props.onRender;\n        if (typeof onRender === 'function') {\n            this.onRender = onRender;\n            delete props.onRender;\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        const el = renderer(this);\n        if (this.onRender) {\n            this.onRender(el);\n        }\n        return el;\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class FragmentNode {\n    type : (typeof NODE_TYPE.FRAGMENT) = NODE_TYPE.FRAGMENT;\n\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>; // eslint-disable-line no-use-before-define\n\n    constructor(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.children = children;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class TextNode {\n    type : (typeof NODE_TYPE.TEXT) = NODE_TYPE.TEXT;\n\n    text : string;\n\n    constructor(text : string) {\n        this.text = text;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n}\n\n// eslint-disable-next-line no-unused-vars\nexport class ComponentNode<P = null> {\n    type : (typeof NODE_TYPE.COMPONENT) = NODE_TYPE.COMPONENT;\n\n    component : ComponentFunctionType<NodePropsType>;\n    props : NodePropsType;\n    // eslint-disable-next-line no-use-before-define\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>;\n\n    constructor(component : ComponentFunctionType<NodePropsType>, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) {\n        this.component = component;\n        this.props = props || {};\n        this.children = children;\n\n        this.props.children = children;\n    }\n\n    renderComponent(renderer : NodeRenderer<*, *>) : * {\n        const child = normalizeChild(this.component(this.props, this.children)); // eslint-disable-line no-use-before-define\n        if (child) {\n            return child.render(renderer);\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nfunction normalizeChildren(children : NullableChildrenType) : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> {\n    const result = [];\n\n    for (const child of children) {\n        if (!child) {\n            continue;\n        } else if (typeof child === 'string' || typeof child === 'number') {\n            result.push(new TextNode(child.toString()));\n        } else if (typeof child === 'boolean') {\n            continue;\n        } else if (Array.isArray(child)) {\n            for (const subchild of normalizeChildren(child)) {\n                result.push(subchild);\n            }\n        } else if (child && (child.type === NODE_TYPE.ELEMENT || child.type === NODE_TYPE.TEXT || child.type === NODE_TYPE.COMPONENT)) {\n            result.push(child);\n        } else {\n            throw new TypeError(`Unrecognized node type: ${ typeof child }`);\n        }\n    }\n\n    return result;\n}\n\nfunction normalizeChild(child) : ElementNode | TextNode | ComponentNode<*> | FragmentNode | void {\n    const children = normalizeChildren(Array.isArray(child) ? child : [ child ]);\n\n    if (children.length === 1) {\n        return children[0];\n    } else if (children.length > 1) {\n        return new FragmentNode(children);\n    }\n}\n\nexport const node : CreateNode = <P>(element, props : P, ...children) => {\n    children = normalizeChildren(children);\n\n    if (typeof element === 'string') {\n        // $FlowFixMe\n        return new ElementNode(element, props, children);\n    }\n\n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return new ComponentNode<*>(element, props, children);\n    }\n\n    throw new TypeError(`Expected jsx element to be a string or a function`);\n};\n\nexport const Fragment : ComponentFunctionType<null> = (props, children) => {\n    return children;\n};\n","/* @flow */\n\nconst ALPHA_CHARS = '0123456789abcdef';\n\nexport function uniqueID() : string {\n    return 'xxxxxxxxxx'.replace(/./g, () => ALPHA_CHARS.charAt(Math.floor(Math.random() * ALPHA_CHARS.length)));\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function isDefined(val : any) : boolean %checks {\n    return (val !== null && typeof val !== 'undefined');\n}\n","/* @flow */\n\nimport { ComponentNode, TextNode, type NodeRenderer, ElementNode } from '../node';\nimport { NODE_TYPE } from '../constants';\nimport { uniqueID } from '../util';\n\ntype DomNodeRenderer = NodeRenderer<ElementNode, HTMLElement>;\ntype DomTextRenderer = NodeRenderer<TextNode, Text>;\ntype DomComponentRenderer = NodeRenderer<ComponentNode<*>, HTMLElement | TextNode | $ReadOnlyArray<HTMLElement | TextNode> | void>;\ntype DomRenderer = DomComponentRenderer & DomNodeRenderer & DomTextRenderer;\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    SVG:     'svg',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    ID:         'id',\n    INNER_HTML: 'innerHTML',\n    EL:         'el',\n    XLINK_HREF: 'xlink:href'\n};\n\nconst ELEMENT_DEFAULT_XML_NAMESPACE : {| [$Values<typeof ELEMENT_TAG>] : string |} = {\n    [ ELEMENT_TAG.SVG ]: 'http://www.w3.org/2000/svg'\n};\n\nconst ATTRIBUTE_DEFAULT_XML_NAMESPACE : {| [$Values<typeof ELEMENT_PROP>] : string |} = {\n    [ ELEMENT_PROP.XLINK_HREF ]: 'http://www.w3.org/1999/xlink'\n};\n\nfunction fixScripts(el : HTMLElement | Element, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\nfunction createElement(doc : Document, node : ElementNode) : HTMLElement | Element {\n    if (node.props[ELEMENT_PROP.EL]) {\n        return node.props[ELEMENT_PROP.EL];\n    } else {\n        return doc.createElement(node.name);\n    }\n}\n\nfunction createElementWithXMLNamespace(doc : Document, node : ElementNode, xmlNamespace : string) : HTMLElement | Element {\n    return doc.createElementNS(xmlNamespace, node.name);\n}\n\nfunction createTextElement(doc : Document, node : TextNode) : Text {\n    return doc.createTextNode(node.text);\n}\n\nfunction addProps(el : HTMLElement | Element, node) {\n    const props = node.props;\n\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (prop.match(/^on[A-Z][a-z]/) && typeof val === 'function') {\n            el.addEventListener(prop.slice(2).toLowerCase(), val);\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            const xmlNamespace = ATTRIBUTE_DEFAULT_XML_NAMESPACE[prop];\n            if (xmlNamespace) {\n                el.setAttributeNS(xmlNamespace, prop, val.toString());\n            } else {\n                el.setAttribute(prop, val.toString());\n            }\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n        }\n    }\n\n    if (el.tagName.toLowerCase() === ELEMENT_TAG.IFRAME && !props.id) {\n        el.setAttribute(ELEMENT_PROP.ID, `jsx-iframe-${ uniqueID() }`);\n    }\n}\nconst ADD_CHILDREN : { [string] : (HTMLElement | Element, ElementNode, DomNodeRenderer) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.ELEMENT) || firstChild.name !== ELEMENT_TAG.HTML) {\n            throw new Error(`Expected only single html element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child : HTMLElement = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.TEXT)) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.text;\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: (el, node, renderer) => {\n        for (const child of node.renderChildren(renderer)) {\n            el.appendChild(child);\n        }\n    }\n};\n\nfunction addChildren(el : HTMLElement | Element, node : ElementNode, doc : Document, renderer : DomNodeRenderer) {\n    if (node.props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (node.children.length) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = node.props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (node.name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[node.name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement(el, node, renderer);\n    }\n}\n\ntype DomOptions = {|\n    doc? : Document\n|};\n\nconst getDefaultDomOptions = () : DomOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function dom(opts? : DomOptions = getDefaultDomOptions()) : DomRenderer {\n    const { doc = document } = opts;\n    \n    const xmlNamespaceDomRenderer = (node : ElementNode, xmlNamespace : string) : HTMLElement => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return node.renderComponent(childNode => xmlNamespaceDomRenderer(childNode, xmlNamespace));\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            // $FlowFixMe\n            return createTextElement(doc, node);\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            const el = createElementWithXMLNamespace(doc, node, xmlNamespace);\n            addProps(el, node);\n            addChildren(el, node, doc, childNode => xmlNamespaceDomRenderer(childNode, xmlNamespace));\n            // $FlowFixMe\n            return el;\n        }\n\n        throw new TypeError(`Unhandleable node`);\n    };\n    \n    const domRenderer : DomRenderer = (node) => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return node.renderComponent(domRenderer);\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            // $FlowFixMe\n            return createTextElement(doc, node);\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            const xmlNamespace = ELEMENT_DEFAULT_XML_NAMESPACE[node.name.toLowerCase()];\n\n            if (xmlNamespace) {\n                // $FlowFixMe\n                return xmlNamespaceDomRenderer(node, xmlNamespace);\n            }\n\n            const el = createElement(doc, node);\n            addProps(el, node);\n            addChildren(el, node, doc, domRenderer);\n            // $FlowFixMe\n            return el;\n        }\n\n        throw new TypeError(`Unhandleable node`);\n    };\n\n    return domRenderer;\n}\n","const MODE_DARK = \"dark\"\nconst MODE_LIGHT = \"light\"\n\nexport const VALID_MODES = [MODE_DARK, MODE_LIGHT]\nexport const BUTTON_MODES = {\n  DARK: MODE_DARK,\n  LIGHT: MODE_LIGHT\n}\n\nconst VARIANT_PRIMARY = \"primary\"\nconst VARIANT_SECONDARY = \"secondary\"\nconst VARIANT_DARK = \"dark\"\n\nexport const VALID_VARIANTS = [VARIANT_PRIMARY, VARIANT_SECONDARY, VARIANT_DARK]\nexport const BUTTON_VARIANTS = {\n  PRIMARY: VARIANT_PRIMARY,\n  SECONDARY: VARIANT_SECONDARY,\n  DARK: VARIANT_DARK\n}\n\nconst SIZE_LARGE = \"large\"\nconst SIZE_MEDIUM = \"medium\"\nconst SIZE_SMALL = \"small\"\n\nexport const VALID_SIZES = [SIZE_LARGE, SIZE_MEDIUM, SIZE_SMALL]\nexport const BUTTON_SIZES = {\n  LARGE: SIZE_LARGE,\n  MEDIUM: SIZE_MEDIUM,\n  SMALL: SIZE_SMALL\n}","import { BUTTON_SIZES } from \"../../../constants/index.js\"\n\nexport const BUTTON_SIZE_STYLE = {\n  [BUTTON_SIZES.SMALL]: {\n    defaultWidth:    200,\n    defaultHeight:   108,\n    minWidth:        200,\n    maxWidth:        320,\n    minHeight:       48,\n    maxHeight:       150\n  },\n\n  [BUTTON_SIZES.MEDIUM]: {\n    defaultWidth:      250,\n    defaultHeight:     116,\n    minWidth:          250,\n    maxWidth:          400,\n    minHeight:         56,\n    maxHeight:         150\n  },\n\n  [BUTTON_SIZES.LARGE]: {\n    defaultWidth:      350,\n    defaultHeight:     124,\n    minWidth:          350,\n    maxWidth:          500,\n    minHeight:         60,\n    maxHeight:         150\n  }\n}","/** @jsx node */\n\nimport { EVENT} from 'zoid/src'\nimport { toCSS, destroyElement } from '@krakenjs/belter/src'\nimport { node, dom } from '@krakenjs/jsx-pragmatic/src';\nimport { BUTTON_SIZE_STYLE } from './ui/config.js';\n\nconst CLASS = {\n  VISIBLE: 'visible',\n  INVISIBLE: 'invisible',\n  COMPONENT_FRAME: 'component-frame',\n  PRERENDER_FRAME: 'prerender-frame'\n}\n\nexport function containerTemplate({ frame, context, prerenderFrame, container, props, event, uid, tag, doc }) {\n  if (!frame || !prerenderFrame) {\n    return\n  }\n\n  if (container && container.tagName.toLowerCase() === 'button') {\n    throw new Error('Do not render the Safepay button into a button element')\n  }\n\n  frame.classList.add(CLASS.COMPONENT_FRAME)\n  prerenderFrame.classList.add(CLASS.PRERENDER_FRAME)\n\n  frame.classList.add(CLASS.INVISIBLE)\n  prerenderFrame.classList.add(CLASS.VISIBLE)\n\n  event.on(EVENT.RENDERED, () => {\n    prerenderFrame.classList.remove(CLASS.VISIBLE)\n    prerenderFrame.classList.add(CLASS.INVISIBLE)\n\n    frame.classList.remove(CLASS.INVISIBLE)\n    frame.classList.add(CLASS.VISIBLE)\n\n    setTimeout(() => destroyElement(prerenderFrame), 1000)\n  })\n\n  const { style, nonce } = props\n  const { size } = style\n\n  const setupAutoResize = (el) => {\n    event.on(EVENT.RESIZE, ({ width: newWidth, height: newHeight }) => {\n      if (typeof newWidth === 'number') {\n        el.style.width = toCSS(newWidth);\n      }\n\n      if (typeof newHeight === 'number') {\n        el.style.height = toCSS(newHeight);\n      }\n    });\n  };\n\n  const element = (\n    <div\n      id={uid}\n      class={`${ tag } ${ tag }-context-${ context } ${ tag }-label`}\n      onRender={ setupAutoResize }>\n      \n      <style nonce={ nonce }>\n        {`\n          #${ uid } {\n              position: relative;\n              display: inline-block;\n              width: 100%;\n              min-height: ${ BUTTON_SIZE_STYLE[size].minHeight }px;\n              min-width: ${ BUTTON_SIZE_STYLE[size].minWidth }px;\n              max-width: ${ BUTTON_SIZE_STYLE[size].maxWidth }px;\n              font-size: 0;\n          }\n\n          #${ uid } > iframe {\n              position: absolute;\n              top: 0;\n              left: 0;\n              width: 100%;\n              height: 100%;\n          }\n\n          #${ uid } > iframe.${ CLASS.COMPONENT_FRAME } {\n              z-index: 100;\n          }\n\n          #${ uid } > iframe.${ CLASS.PRERENDER_FRAME } {\n              transition: opacity .2s linear;\n              z-index: 200;\n          }\n\n          #${ uid } > iframe.${ CLASS.VISIBLE } {\n              opacity: 1;\n          }\n\n          #${ uid } > iframe.${ CLASS.INVISIBLE } {\n              opacity: 0;\n              pointer-events: none;\n          }\n        `}\n      </style>\n        \n      <node el={ frame } />\n      <node el={ prerenderFrame } />\n    </div>\n  ).render(dom({ doc }));\n\n  event.on(EVENT.RENDERED, () => {\n    setTimeout(() => {\n        element.style.transition = 'all 0.2s ease-in-out';\n    }, 1000);\n  });\n\n  return element\n}","/** @jsx node */\n\nimport { create, CONTEXT } from 'zoid/src'\nimport { noop } from '@krakenjs/belter/src';\nimport { Config } from '../../configs/index.js'\nimport { containerTemplate } from './container.jsx'\nimport { VALID_MODES, VALID_SIZES, VALID_VARIANTS } from '../../constants/button.js'\nimport { isAmountValid, isCurrencyValid } from './utils.js'\n\nexport const Button = create({\n  tag: 'safepay-button',\n  url: ({ props }) => Config.buttonUrls[props.env],\n\n  autoResize: {\n    width:  true,\n    height: true\n  },\n\n  domain: Config.safepayDomainRegex,\n\n  bridgeUrl: ({ props }) => Config.metaFrameUrls[props.env],\n\n  containerTemplate,\n\n  defaultContext: CONTEXT.IFRAME,\n\n  props: {\n    env: {\n      type: 'string',\n      required: true\n    },\n    orderId: {\n      type: 'string',\n      required: false,\n      queryParam: \"order_id\",\n    },\n    source: {\n      type: 'string',\n      queryParam: true,\n      default: () => {\n        return 'checkout'\n      }\n    },\n    client: {\n      type: 'object',\n      required: true,\n      validate: ({ value, props }) => {\n        const { env } = props;\n        if (!value[env]) {\n          throw new Error(`Client ID not found for env ${env}`)\n        }\n      },\n    },\n    style: {\n      type: 'object',\n      required: true,\n      queryParam: true,\n      serialization: 'dotify',\n      validate: function({ value, props }) {\n        if (value.mode && VALID_MODES.indexOf(value.mode) === -1) {\n          throw new Error(`Invalid mode. Must be one of ${VALID_MODES.join(\",\")}`)\n        }\n        if (value.size && VALID_SIZES.indexOf(value.size) === -1) {\n          throw new Error(`Invalid size. Must be one of ${VALID_SIZES.join(\",\")}`)\n        }\n        if (value.variant && VALID_VARIANTS.indexOf(value.variant) === -1) {\n          throw new Error(`Invalid variant. Must be one of ${VALID_VARIANTS.join(\",\")}`)\n        }\n      }\n    },\n\n    hydratePayment: {\n      type: 'function',\n      required: false,\n      default: () => {\n        console.log('no default pre payment validation')\n      }\n    },\n\n    payment: {\n      type: 'object',\n      required: true,\n      validate: ({ value, props }) => {\n        const { amount, currency } = value\n        const amountErr = isAmountValid(amount)\n        if (amountErr) {\n          throw amountErr\n        }\n\n        const currencyErr = isCurrencyValid(currency)\n        if (currencyErr) {\n          throw currencyErr\n        }\n      }\n    },\n\n    onCancel: {\n      type: 'function',\n      required: false,\n      default: () => {\n        console.log('payment cancelled')\n      }\n    },\n\n    onPayment: {\n      type: 'function',\n      required: false,\n      default: () => {\n        console.log('payment complete')\n      },\n      decorate({ value = noop }) {\n        return (...args) => {\n          value(...args)\n        }\n      }\n    }\n  }\n})","export function isAmountValid(amount) {\n  if (typeof amount !== 'number') {\n    return new Error('amount must be a number')\n  }\n\n  if (amount < 0) {\n    return new Error('amount must be greater than 0')\n  }\n\n  return\n}\n\nexport function isCurrencyValid(currency) {\n  if (!currency) {\n    return new Error('must provide currency')\n  }\n\n  if (typeof currency !== 'string') {\n    return new Error('amount must be a string')\n  }\n\n  if (currency.length !== '3') {\n    return new Error('currency must be in ISO format')\n  }\n\n  return\n}","/** @jsx node */\n\nimport { node } from '@krakenjs/jsx-pragmatic/src';\n\nconst spinnerStyle = `\n  body {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    position: fixed;\n    top: 0;\n    left: 0;\n    margin: 0;\n  }\n  .spinner {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    z-index: 10\n  }\n  .spinner .spinWrap {\n    width: 200px;\n    height: 100px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-left: -100px;\n    margin-top: -50px\n  }\n  .spinner .loader,\n  .spinner .spinnerImage {\n    height: 100px;\n    width: 100px;\n    position: absolute;\n    top: 0;\n    left: 50%;\n    opacity: 1;\n    filter: alpha(opacity=100)\n  }\n  .spinner .spinnerImage {\n    margin: 28px 0 0 -25px;\n    background: url(https://www.paypalobjects.com/images/checkout/hermes/icon_ot_spin_lock_skinny.png) no-repeat\n  }\n  .spinner .loader {\n    margin: 0 0 0 -55px;\n    background-color: transparent;\n    animation: rotation .7s infinite linear;\n    border-left: 5px solid #cbcbca;\n    border-right: 5px solid #cbcbca;\n    border-bottom: 5px solid #cbcbca;\n    border-top: 5px solid #2380be;\n    border-radius: 100%\n  }\n  @keyframes rotation {\n    from {\n      transform: rotate(0deg)\n    }\n    to {\n      transform: rotate(359deg)\n    }\n  }\n`;\n\nexport function Spinner({ nonce }) {\n  return (\n    <div class=\"preloader spinner\">\n      <style nonce={ nonce } innerHTML={ spinnerStyle } />\n\n      <div class=\"spinWrap\">\n        <p class=\"spinnerImage\" />\n        <p class=\"loader\" />\n      </div>\n    </div>\n  );\n}\n\nexport function SpinnerPage({ nonce, children }) {\n  return (\n    <html>\n      <head>\n        <title>Safepay</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </head>\n      <body>\n        <Spinner nonce={ nonce } />\n        { children }\n      </body>\n    </html>\n  );\n}","import { CONTEXT } from 'zoid/src/index.js';\n\nexport const CLASS = {\n  OUTLET:          'outlet',\n  VISIBLE:         'visible',\n  INVISIBLE:       'invisible',\n  COMPONENT_FRAME: 'component-frame',\n  PRERENDER_FRAME: 'prerender-frame'\n};\n\nexport function getSandboxStyle({ uid }) {\n  return `\n      #${ uid }.safepay-checkout-sandbox {\n          display: block;\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          width: 100vw;\n          height: 100vh;\n          max-width: 100%;\n          max-height: 100%;\n          min-width: 100%;\n          min-height: 100%;\n          z-index: 2147483647;\n          animation-duration: 0.3s;\n          animation-iteration-count: 1;\n          animation-fill-mode: forwards !important;\n          opacity: 0;\n      }\n      #${ uid }.safepay-checkout-sandbox .safepay-checkout-sandbox-iframe {\n          display: block;\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n      }\n      @keyframes show-container {\n          from {\n              opacity: 0;\n          }\n          to {\n              opacity: 1;\n          }\n      }\n      @keyframes hide-container {\n          from {\n              opacity: 1;\n          }\n          50% {\n              opacity: 1;\n          }\n          to {\n              opacity: 0;\n          }\n      }\n  `;\n}\n\n\nexport function getContainerStyle({ uid }) {\n  return `\n  #${ uid } {\n    position: absolute;\n    z-index: 2147483647;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    transform: translate3d(0, 0, 0);\n    background-color: black;\n    background-color: rgba(0, 0, 0, 0.8);\n    background: radial-gradient(50% 50%, ellipse closest-corner, rgba(0,0,0,0.6) 1%, rgba(0,0,0,0.8) 100%);\n    color: #fff;\n  }\n  #${ uid } a {\n    color: #fff;\n  }\n  #${ uid } .safepay-checkout-close:before,\n  #${ uid } .safepay-checkout-close:after {\n    background-color: #fff;\n  }\n  #${ uid }.safepay-overlay-context-${ CONTEXT.POPUP } {\n    cursor: pointer;\n  }\n  #${ uid } a {\n    text-decoration: none;\n  }\n  #${ uid } .safepay-checkout-modal {\n    font-family: \"HelveticaNeue\", \"HelveticaNeue-Light\", \"Helvetica Neue Light\", helvetica, arial, sans-serif;\n    font-size: 14px;\n    text-align: center;\n    box-sizing: border-box;\n    max-width: 350px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform: translateX(-50%) translateY(-50%);\n    cursor: pointer;\n    text-align: center;\n  }\n  #${ uid }.safepay-overlay-loading .safepay-checkout-message, #${ uid }.safepay-overlay-loading .safepay-checkout-continue {\n    display: none;\n  }\n  .safepay-checkout-loader {\n    display: none;\n  }\n  #${ uid }.safepay-overlay-loading .safepay-checkout-loader {\n    display: block;\n  }\n  #${ uid } .safepay-checkout-modal .safepay-checkout-logo {\n    cursor: pointer;\n    margin-bottom: 30px;\n    display: inline-block;\n  }\n  #${ uid } .safepay-checkout-modal .safepay-checkout-logo img {\n    height: 36px;\n  }\n  #${ uid } .safepay-checkout-modal .safepay-checkout-logo img.safepay-checkout-logo-pp {\n    margin-right: 10px;\n  }\n  #${ uid } .safepay-checkout-modal .safepay-checkout-message {\n    font-size: 15px;\n    line-height: 1.5;\n    padding: 10px 0;\n  }\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-message, #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-continue {\n    display: none;\n  }\n  #${ uid } .safepay-checkout-modal .safepay-checkout-continue {\n    font-size: 15px;\n    line-height: 1.35;\n    padding: 10px 0;\n    font-weight: bold;\n  }\n  #${ uid } .safepay-checkout-modal .safepay-checkout-continue a {\n    border-bottom: 1px solid white;\n  }\n  #${ uid } .safepay-checkout-close {\n    position: absolute;\n    right: 16px;\n    top: 16px;\n    width: 16px;\n    height: 16px;\n    opacity: 0.6;\n  }\n  #${ uid }.safepay-overlay-loading .safepay-checkout-close {\n    display: none;\n  }\n  #${ uid } .safepay-checkout-close:hover {\n    opacity: 1;\n  }\n  #${ uid } .safepay-checkout-close:before, .safepay-checkout-close:after {\n    position: absolute;\n    left: 8px;\n    content: ' ';\n    height: 16px;\n    width: 2px;\n  }\n  #${ uid } .safepay-checkout-close:before {\n    transform: rotate(45deg);\n  }\n  #${ uid } .safepay-checkout-close:after {\n    transform: rotate(-45deg);\n  }\n  #${ uid } .safepay-checkout-iframe-container {\n    display: none;\n  }\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-iframe-container,\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-iframe-container > .${ CLASS.OUTLET },\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-iframe-container > .${ CLASS.OUTLET } > iframe {\n    max-height: 95vh;\n    max-width: 95vw;\n  }\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-iframe-container-full,\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-iframe-container-full > .${ CLASS.OUTLET },\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-iframe-container-full > .${ CLASS.OUTLET } > iframe {\n    height: 100vh;\n    max-width: 100vw;\n    width: 100vw;\n  }\n  @media screen and (max-width: 470px) {\n    #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-iframe-container,\n    #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-iframe-container > .${ CLASS.OUTLET },\n    #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-iframe-container > .${ CLASS.OUTLET } > iframe {\n      max-height: 85vh;\n    }\n    #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-iframe-container-full,\n    #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-iframe-container-full > .${ CLASS.OUTLET },\n    #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-iframe-container-full > .${ CLASS.OUTLET } > iframe {\n      height: 100vh;\n    }\n  }\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-iframe-container {\n    display: block;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    min-width: 450px;\n    transform: translate(-50%, -50%);\n    transform: translate3d(-50%, -50%, 0);\n    border-radius: 10px;\n    overflow: hidden;\n  }\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .${ CLASS.OUTLET } {\n    position: relative;\n    transition: all 0.3s ease;\n    animation-duration: 0.3s;\n    animation-fill-mode: forwards !important;\n    min-width: 450px;\n    max-width: 450px;\n    width: 450px;\n    height: 535px;\n    background-color: white;\n    overflow: auto;\n    opacity: 0;\n    transform: scale3d(.3, .3, .3);\n    -webkit-overflow-scrolling: touch;\n  }\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .${ CLASS.OUTLET } > iframe {\n    position: absolute;\n    top: 0;\n    left: 0;\n    transition: opacity .4s ease-in-out;\n  }\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .${ CLASS.OUTLET } > iframe.${ CLASS.COMPONENT_FRAME } {\n    z-index: 100;\n  }\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .${ CLASS.OUTLET } > iframe.${ CLASS.PRERENDER_FRAME } {\n    z-index: 200;\n  }\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .${ CLASS.OUTLET } > iframe.${ CLASS.VISIBLE } {\n    opacity: 1;\n    z-index: 200;\n  }\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .${ CLASS.OUTLET } > iframe.${ CLASS.INVISIBLE } {\n    opacity: 0;\n    z-index: 100;\n  }\n  @media screen and (max-width: 470px) {\n    #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .safepay-checkout-iframe-container,\n    #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .${ CLASS.OUTLET } {\n      min-width: 100%;\n      min-width: calc(100% - 20px);\n      max-width: 100%;\n      max-width: calc(100% - 20px);\n    }\n  }\n  #${ uid }.safepay-overlay-context-${ CONTEXT.IFRAME } .${ CLASS.OUTLET } iframe {\n    width: 1px;\n    min-width: 100%;\n    height: 100%;\n  }\n  @keyframes show-component {\n    from {\n      opacity: 0;\n      transform: scale3d(.3, .3, .3);\n    }\n    to {\n      opacity: 1;\n      transform: scale3d(1, 1, 1);\n    }\n  }\n  @keyframes hide-component {\n    from {\n      opacity: 1;\n      transform: scale3d(1, 1, 1);\n    }\n    to {\n      opacity: 0;\n      transform: scale3d(.3, .3, .3);\n    }\n  }\n  .safepay-spinner {\n    height: 30px;\n    width: 30px;\n    display: inline-block;\n    box-sizing: content-box;\n    opacity: 1;\n    filter: alpha(opacity=100);\n    animation: rotation .7s infinite linear;\n    border-left: 8px solid rgba(0, 0, 0, .2);\n    border-right: 8px solid rgba(0, 0, 0, .2);\n    border-bottom: 8px solid rgba(0, 0, 0, .2);\n    border-top: 8px solid #fff;\n    border-radius: 100%\n  }\n  @keyframes rotation {\n    from {\n      transform: rotate(0deg)\n    }\n    to {\n      transform: rotate(359deg)\n    }\n  }`;\n}","/** @jsx node */\n\nimport { node } from '@krakenjs/jsx-pragmatic/src';\nimport { isIos, isFirefox, supportsPopups, animate, noop, destroyElement, uniqueID } from '@krakenjs/belter/src';\nimport { EVENT, CONTEXT } from 'zoid/src';\nimport { getContainerStyle, getSandboxStyle, CLASS } from './ui/styles.js';\nimport SafepayLogo from '../../assets/svgs/safepay-logo-white.svg'\n\nexport function Overlay({ context, close, focus, event, frame, prerenderFrame, content = {}, autoResize, hideCloseButton, nonce, fullScreen = false }) {\n  const uid = `safepay-overlay-${ uniqueID() }`;\n\n  function closeCheckout(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    close();\n  }\n\n  function focusCheckout(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    if (!supportsPopups()) {\n      return;\n    }\n    focus();\n  }\n\n  const setupAnimations = (name) => {\n    return (el) => {\n      const showContainer = () => animate(el, `show-${ name }`, noop);\n      const hideContainer = () => animate(el, `hide-${ name }`, noop);\n      event.on(EVENT.DISPLAY, showContainer);\n      event.on(EVENT.CLOSE, hideContainer);\n    };\n  };\n\n  const setupAutoResize = (el) => {\n    event.on(EVENT.RESIZE, ({ width: newWidth, height: newHeight }) => {\n      if (typeof newWidth === 'number') {\n        el.style.width = `${newWidth}px`;\n      }\n\n      if (typeof newHeight === 'number') {\n        el.style.height = `${newHeight}px`;\n      }\n    });\n  };\n\n  const outletOnRender = (el) => {\n    setupAnimations('component')(el);\n    if (autoResize) {\n      setupAutoResize(el);\n    }\n  };\n\n  let outlet;\n\n  if (frame && prerenderFrame) {\n    frame.classList.add(CLASS.COMPONENT_FRAME);\n    prerenderFrame.classList.add(CLASS.PRERENDER_FRAME);\n    \n    prerenderFrame.classList.add(CLASS.VISIBLE);\n    frame.classList.add(CLASS.INVISIBLE);\n\n    event.on(EVENT.RENDERED, () => {\n      prerenderFrame.classList.remove(CLASS.VISIBLE);\n      prerenderFrame.classList.add(CLASS.INVISIBLE);\n\n      frame.classList.remove(CLASS.INVISIBLE);\n      frame.classList.add(CLASS.VISIBLE);\n\n      setTimeout(() => {\n        destroyElement(prerenderFrame);\n      }, 1);\n    });\n\n    outlet = (\n      <div class={ CLASS.OUTLET } onRender={ outletOnRender }>\n        <node el={ frame } />\n        <node el={ prerenderFrame } />\n      </div>\n    );\n  }\n\n  return (\n    <div id={ uid } onRender={ setupAnimations('container') } class=\"safepay-checkout-sandbox\">\n      <style>{ getSandboxStyle({ uid }) }</style>\n      <iframe title=\"Safepay Checkout Overlay\" name={ `__safepay_checkout_sandbox_${ uid }__` } scrolling=\"no\" class=\"safepay-checkout-sandbox-iframe\">\n        <html>\n          <body>\n            <div id={ uid } onClick={ focusCheckout } class={ `safepay-overlay-context-${ context } safepay-checkout-overlay` }>\n              { !hideCloseButton && <a href='#' class=\"safepay-checkout-close\" onClick={ closeCheckout } aria-label=\"close\" role=\"button\" /> }\n              { !fullScreen &&\n                <div class=\"safepay-checkout-modal\">\n                  <div class=\"safepay-checkout-logo\">\n                    <img src={SafepayLogo} />\n                  </div>\n                  {content.windowMessage &&\n                    <div class=\"safepay-checkout-message\">\n                      {content.windowMessage}\n                    </div>}\n                  {content.continueMessage &&\n                    <div class=\"safepay-checkout-continue\">\n                      <a onClick={ focus } href='#'>{content.continueMessage}</a>\n                    </div>}\n                  <div class=\"safepay-checkout-loader\">\n                    <div class=\"safepay-spinner\" />\n                  </div>\n                </div>}\n              <div class={ fullScreen ? 'safepay-checkout-iframe-container-full' : 'safepay-checkout-iframe-container' }>\n                { outlet }\n              </div>\n\n              <style>{ getContainerStyle({ uid }) }</style>\n            </div>\n          </body>\n        </html>\n      </iframe>\n    </div>\n  );\n}","/** @jsx node */\n\nimport { node, dom } from '@krakenjs/jsx-pragmatic/src';\nimport { create, CONTEXT } from 'zoid/src'\nimport { isDevice, noop } from '@krakenjs/belter/src';\nimport { Config } from '../../configs/index.js'\nimport { DEFAULT_POPUP_SIZE } from './ui/config.js'\nimport { SpinnerPage } from './prerender.jsx';\nimport { Overlay } from './container.jsx';\n\nexport const Checkout = create({\n  tag: 'safepay-checkout',\n  url: ({ props }) => Config.checkoutUrls[props.env],\n  defaultContext: CONTEXT.POPUP,\n  domain: Config.safepayDomainRegex,\n  dimensions: ({ props }) => {\n    if (typeof props.dimensions === 'object') {\n      return { width: `${ props.dimensions.width }px`, height: `${ props.dimensions.height }px` };\n    } else {\n      return isDevice()\n        ? { width:  '100%', height: `${ DEFAULT_POPUP_SIZE.HEIGHT }px` }\n        : { width:  `${ DEFAULT_POPUP_SIZE.WIDTH }px`, height: `${ DEFAULT_POPUP_SIZE.HEIGHT }px` };\n    }\n  },\n  prerenderTemplate: ({ doc, frame, props }) => {\n    const { nonce } = props;\n    return (\n      <SpinnerPage\n        nonce={ nonce }\n      />\n    ).render(dom({ doc }));\n  },\n\n  containerTemplate: ({ context, close, focus, doc, event, frame, prerenderFrame, props }) => {\n    const { nonce } = props;\n    const content = {\n      windowMessage:   \"Don't see the secure Safepay browser? We'll help you re-launch the window to complete your purchase\",\n      continueMessage: 'Click to Continue'\n    }\n    \n    return (\n      <Overlay\n        context={ context }\n        close={ close }\n        focus={ focus }\n        event={ event }\n        frame={ frame }\n        prerenderFrame={ prerenderFrame }\n        content={ content }\n        nonce={ nonce }\n      />\n    ).render(dom({ doc }));\n  },\n\n  props: {\n    env: {\n      type: 'string',\n      required: false,\n      queryParam: true,\n    },\n    orderId: {\n      type: 'string',\n      required: false,\n      queryParam: \"order_id\",\n    },\n    source: {\n      type: 'string',\n      queryParam: true,\n      default: () => {\n        return 'checkout'\n      }\n    },\n    payment: {\n      type: 'function',\n      required: true,\n      queryParam: \"beacon\",\n      queryValue: ({ value }) => {\n        return value()\n      }\n    },\n    xcomponent: {\n      type:       'string',\n      queryParam: true,\n      value:      () => '1'\n    },\n    onCancel: {\n      type: 'function',\n      required: false,\n      default: () => {\n        console.log('payment cancelled')\n      },\n      decorate({ close, value = noop }) {\n        return (...args) => {\n          value(...args)\n          close()\n        }\n      }\n    },\n    onPayment: {\n      type: 'function',\n      required: true,\n      default: () => {\n        console.log('payment complete')\n      },\n      decorate({ close, value = noop }) {\n        return (...args) => {\n          value(...args)\n          close()\n        }\n      }\n    }\n  }\n})"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","hasOwnProperty","call","r","Symbol","toStringTag","value","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","prototype","create","constructor","_extends","assign","target","i","arguments","length","source","apply","isPromise","item","Promise","Window","toString","name","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","handlers","result","error","isAsync","res","reject","Error","dispatch","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","dispatching","chain","firstPromise","secondPromise","onSuccess","onError","promiseResult","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","lazy","all","promises","count","results","slice","prom","hash","awaitPromises","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","isRegex","PROTOCOL","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","getActualProtocol","win","location","protocol","getProtocol","mockDomain","split","isAboutProtocol","getParent","parent","getOpener","opener","canReadFromWindow","getActualDomain","host","getDomain","domain","isSameDomain","desc","getOwnPropertyDescriptor","isMockProtocol","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","getTop","top","getAllFramesInWindow","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getAncestor","anyMatch","collection1","collection2","item1","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","__cross_domain_utils_window_check__","getFrameForWindow","frameElement","document","querySelectorAll","closeWindow","isIframe","parentElement","removeChild","close","objectIDs","CrossDomainSafeWeakMap","Math","random","WeakMap","freeze","testWeakMap","testKey","testValue","set","hasNativeWeakMap","weakmap","keys","values","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","getter","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","_construct","Parent","Class","isNativeReflectConstruct","a","instance","bind","_wrapNativeSuper","_cache","Map","Wrapper","configurable","isElement","element","passed","Element","nodeType","style","_","getFunctionName","fn","__name__","displayName","setFunctionName","base64encode","str","btoa","encodeURIComponent","replace","m","p1","String","fromCharCode","parseInt","Buffer","from","uniqueID","chars","charAt","floor","Date","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","getEmptyObject","memoizeGlobalIndex","memoizeGlobalIndexValidFrom","memoize","options","simpleCache","thisCache","thisNamespace","cacheTime","memoizeIndex","memoizedFunction","cache","cacheKey","cacheResult","now","reset","memoizePromise","memoizedPromiseFunction","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","stack","newErr","extend","identity","safeInterval","loop","dotify","prefix","newobj","every","dasherizeToCamel","string","toUpperCase","defineLazyProp","arrayFrom","isObjectObject","isPlainObject","replaceObject","replacer","fullKey","itemKey","isDefined","cleanup","cleanErr","tasks","cleaned","cleaner","register","task","shift","assertExists","thing","clear","ExtendableError","captureStackTrace","ReferenceError","getBody","body","isDocumentReady","readyState","isDocumentInteractive","urlEncode","parseQuery","queryString","params","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","appendChild","container","getElementSafe","id","querySelector","elementReady","el","interval","setInterval","clearInterval","awaitFrameLoadPromises","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","tag","styleText","createElement","class","className","setAttribute","attributes","styleSheet","cssText","createTextNode","html","innerHTML","allowTransparency","backgroundColor","border","isIE","navigator","userAgent","hasAttribute","getElement","event","removeEventListener","showElement","setProperty","hideElement","destroyElement","isElementClosed","onResize","width","height","currentWidth","offsetWidth","currentHeight","offsetHeight","canceled","observer","getClientRects","isElementVisible","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","isShadowElement","insertShadowSlot","shadowHost","shadowRoot","getShadowRoot","getShadowHost","slotName","slot","slotProvider","currentScript","getCurrentScript","getStackTrace","stackDetails","exec","scriptLocation","getElementsByTagName","reverse","script","src","inferCurrentScript","currentUID","getCurrentScriptUID","getAttribute","ATTRIBUTES","hashedString","total","charCodeAt","abs","strHashStr","dataset","isPerc","test","toNum","toPx","toCSS","normalizeDimension","dim","max","MESSAGE_TYPE","MESSAGE_ACK","MESSAGE_NAME","WILDCARD","getGlobalKey","__POST_ROBOT__","getGlobal","globalKey","getObj","globalStore","defStore","store","storeKey","defVal","del","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","resolveHelloPromise","helloPromises","existingPromise","newPromise","sayHello","send","instanceID","data","getWindowInstanceID","markWindowKnown","TYPE","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","RegExp","defaultDeserializers","cleanupProxyWindows","idToProxyWindow","shouldClean","getSerializedWindow","winPromise","windowNamePromise","windowTypePromise","getName","getType","focus","isClosed","setLocation","href","opts","form","display","input","submit","submitForm","setName","sameDomain","ProxyWindow","serializedWindow","isProxyWindow","actualWindowPromise","getID","setWindow","isPopup","isPopupPromise","getNamePromise","reopenPromise","open","focusPromise","getWindow","actualWindow","awaitWindow","matchWindow","proxyInstanceID","knownWindowInstanceID","unwrap","serialize","toProxyWindow","deserialize","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","on","meth","methodSource","arg","listenForFunctionCalls","__id__","serializeMessage","serializers","serializer","serializePromise","deserializeMessage","deserializers","parse","deserializer","serializedPromise","deserializePromise","serializedFunction","getDeserializedFunction","crossDomainFunctionWrapper","fireAndForget","__origin__","__source__","deserializeFunction","SEND_MESSAGE_STRATEGIES","sendMessage","domainBuffer","buffer","messages","serializedMessage","strategies","errors","strategyName","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","listener","regex","addRequestListener","winCandidate","requestListenerPromise","actualWin","requestListener","listenersCollection","existingListener","strDomain","winNameDomainRegexListeners","winNameDomainRegexListener","winNameListeners","winNameDomainListeners","handleRequest","logName","sendResponse","ack","pathname","handleError","handleAck","handleResponse","receiveMessage","receivedMessages","parsedMessage","parseMessages","deserializeMessages","errorHandler","postMessage","mockUserAgent","needsGlobalMessagingForBrowser","foreignGlobal","winOrProxyWin","domainMatcher","responseTimeout","childTimeout","validateOptions","actualParent","isAncestor","getHelloPromise","awaitWindowHello","targetDomain","actualDomain","normalizedDomain","normalizeDomain","responseListener","addResponseListener","reqPromises","markResponseListenerErrored","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cancelled","internalSerializeMessage","internalDeserializeMessage","setup","initialized","setupGlobalReceiveMessage","sourceElement","originalEvent","messageListener","listenForMessages","initHello","cleanUpWindow","__ZOID__","tryGlobal","getProxyObject","PROP_TYPE","INITIAL_PROPS","WINDOW_REFERENCES","CONTEXT","EVENT","METHOD","normalizeChildProp","propsDef","helpers","childDecorate","onProps","resize","getParentDomain","show","hide","export","getSiblings","parseChildWindowName","windowName","zoidcomp","encodedPayload","atob","c","base64decode","getChildPayload","destroy","defaultNoop","decorateOnce","eachProp","propDef","serializeProps","getParam","queryParam","bodyParam","getValue","queryValue","bodyValue","finalParam","finalValue","serialization","dotkey","mapProps","parentComponent","triggered","emitter","currentProxyWin","currentProxyContainer","childComponent","overrides","parentWin","containerTemplate","prerenderTemplate","dimensions","autoResize","domainMatch","xports","initPromise","handledErrors","clean","state","internalState","visible","eventName","handlerList","trigger","triggerOnce","onErrorOverride","getProxyContainerOverride","getProxyContainer","showOverride","hideOverride","closeOverride","renderContainerOverride","renderContainer","getProxyWindowOverride","getProxyWindow","setProxyWinOverride","setProxyWin","openFrameOverride","openFrame","openPrerenderFrameOverride","openPrerenderFrame","prerenderOverride","prerender","openOverride","openPrerenderOverride","openPrerender","watchForUnloadOverride","watchForUnload","getInternalStateOverride","getInternalState","setInternalStateOverride","setInternalState","getDimensions","resolveInitPromise","rejectInitPromise","getPropsForChild","sendToChild","newInternalState","windowProp","proxyWin","containerElement","setState","getUrl","getAttributes","getChildDomain","getDomainMatcher","title","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","getWindowRef","windows","initChild","childExports","proxyFrame","outerWidth","closeOnUnload","left","round","screenX","screen","outerHeight","screenY","status","toolbar","menubar","resizable","scrollbars","popup","unloadWindowListener","closeParentWindowListener","watchForClose","checkWindowClose","secondIsClosed","exportsPromise","xport","actualExports","renderTemplate","renderer","proxyPrerenderWin","prerenderWindow","isBlankDomain","tagName","children","writeElementToWindow","prerenderResizeListener","proxyContainer","rerender","innerContainer","containerWatcher","sacrificialFrame","sacrificialFrameWin","mutationObservers","elementClosed","mutationElement","mutationObserver","frameWin","watchElementForClose","removeError","getHelpers","updateProps","setProps","newProps","isUpdate","inputProps","propNames","aliases","alias","default","decorate","decoratedValue","required","extendProps","childProps","init","onRender","onDisplay","onRendered","onClose","onDestroy","onFocus","render","childDomain","checkAllowRender","delegatePromise","delegateProps","propName","allowDelegate","childOverridesPromise","POST_MESSAGE","parentComp","getDelegateOverrides","childOverrides","delegate","watchForUnloadPromise","buildUrlPromise","query","originalUrl","originalHash","hashString","extendUrl","normalizeMockUrl","buildBodyPromise","onRenderPromise","getProxyContainerPromise","getProxyWindowPromise","buildWindowNamePromise","propRef","getPropsRef","propsRef","version","parentDomain","checkClose","buildChildPayload","childPayload","openFramePromise","openPrerenderFramePromise","renderContainerPromise","openPromise","openPrerenderPromise","setStatePromise","prerenderPromise","setWindowNamePromise","getMethodPromise","loadUrlPromise","windowUrl","watchForClosePromise","onDisplayPromise","openBridgePromise","runTimeoutPromise","onRenderedPromise","getProps","getExports","react","React","ReactDOM","componentDidMount","findDOMNode","componentDidUpdate","Component","vue","Vue","component","inheritAttrs","mounted","$el","$attrs","reduce","acc","styleObject","includes","watch","deep","vue3","template","angular","ng","directive","scope","restrict","controller","$scope","$element","safeApply","$root","$$phase","$apply","$watch","angular2","AngularComponent","NgModule","ElementRef","NgZone","Inject","ComponentInstance","elementRef","zone","_props","internalProps","run","ngOnInit","targetElement","nativeElement","ngDoCheck","obj1","obj2","checked","equals","parameters","annotations","selector","inputs","ModuleInstance","declarations","CLASS","defaultContainerTemplate","div","cspNonce","classList","add","remove","defaultPrerenderTemplate","spinner","cleanInstances","cleanZoid","allowDelegateListener","delegateListener","bridgeUrl","allowedParentDomains","defaultContext","validate","eligible","logger","info","xportsDefinition","valuePromise","normalizeOptions","driverCache","instances","isChild","payload","registerChild","xprops","components","onPropHandlers","parentExports","parentComponentWindow","ref","n","getNthParent","ancestor","getParentComponentWindow","anyParent","currentParent","winParent","normalizedProps","normalizeChildProps","checkParentDomain","getPropsByRef","ZOID","eligibility","reason","clone","getDefaultContext","finalContext","getDefaultContainer","newInstance","renderTo","childComponents","childName","Child","childInputProps","parentProps","getChildren","isEligible","driver","driverName","dep","drivers","canRenderTo","setupPostRobot","comp","getUserAgent","isOperaMini","ua","supportsPopups","isIos","isGoogleSearchApp","isIosWebview","isAndroid","isAndroidWebview","isFirefoxIOS","isEdgeIOS","isFacebookWebView","isQQBrowser","process","versions","electron","standalone","matchMedia","matches","bindEvents","eventNames","VENDOR_PREFIXES","ANIMATION_START_EVENTS","ANIMATION_END_EVENTS","animate","startTimeout","endTimeout","startEvent","endEvent","hasStarted","cleanUp","animationName","stopPropagation","capitalizedName","setVendorCSS","ENV","Config","env","checkoutUris","buttonUris","postBridgeUris","safepayDomainRegex","buttonDomains","checkoutDomains","bridgeDomains","checkoutUrls","spUrls","local","development","sandbox","production","buttonUrls","metaFrameUrls","NODE_TYPE","renderChildren","renderedChild","subchild","ElementNode","FragmentNode","TextNode","text","ComponentNode","renderComponent","normalizeChildren","normalizeChild","node","ALPHA_CHARS","ELEMENT_PROP","ELEMENT_DEFAULT_XML_NAMESPACE","ATTRIBUTE_DEFAULT_XML_NAMESPACE","createTextElement","addProps","xmlNamespace","setAttributeNS","ADD_CHILDREN","firstChild","docElement","dom","addChildren","newScript","textContent","replaceChild","fixScripts","xmlNamespaceDomRenderer","childNode","createElementNS","createElementWithXMLNamespace","domRenderer","VALID_MODES","VALID_VARIANTS","VALID_SIZES","BUTTON_SIZE_STYLE","defaultWidth","defaultHeight","minWidth","maxWidth","minHeight","maxHeight","Button","size","nonce","transition","orderId","client","mode","variant","hydratePayment","console","log","payment","amount","currency","amountErr","currencyErr","isCurrencyValid","onCancel","onPayment","Spinner","SpinnerPage","content","Overlay","outlet","hideCloseButton","fullScreen","setupAnimations","setupAutoResize","getSandboxStyle","scrolling","onClick","preventDefault","role","windowMessage","continueMessage","getContainerStyle","Checkout","DEFAULT_POPUP_SIZE","xcomponent"],"sourceRoot":""}